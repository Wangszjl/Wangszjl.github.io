[{"title":"08-有限元理论推导（六）","url":"/2024/09/19/有限元理论推导（六）/","content":"\n```markdown\n# 第7章 三维单元\n\n## 7.1 背景\n到目前为止，读者应该已经很好地理解了有限元方法用于解决一维和二维（1-和2-D）问题。第2章和第3章中制定的原则被看到同样适用于2-D元素和1-D元素。在第4章到第6章中，我们看到了有限元方法利用二维三角形或四边形元素，其准确性各不相同。将该方法扩展到三维是合乎逻辑的。与2-D问题相比，建立计算域和边界条件所需的数据量显著增加；同样，计算工作量也大幅度增加。由于与3-D元素相关的节点数量增加（以及相关的带宽），计算网格通常受到限制。在本章中，开发并应用了四面体和砖形六面体元素到熟悉的热传导方程。解决了一个边界受到辐射热传递和对流影响的时变热传导问题。\n\n## 7.2 单元网格\n将问题域离散化为由元素和节点点组成的计算域没有严格的理论基础。为了产生一个好的网格；糟糕或不当的判断会产生不准确的结果，即使有限元程序的其余步骤被严格遵循。在1-D域中，将离散化为元素阵列并不难理解——在变量快速变化的地方通常需要小的元素尺寸。在2-D区域中，生成一个可接受的网格变得更加麻烦；可能需要制作几个网格，才能创建出一个产生合理结果的合适网格。在3-D域中，网格不仅更难制作，而且难以可视化——如果问题域复杂，可能需要许多试验网格。应该认识到，生成一个好的网格是一种艺术。计算机科学领域的计算几何技术使人们能够基于所需数量的节点和元素产生一个最优网格（见Pepper和Gewali，2002）。在生成网格上可以花费相当多的时间；然而，一旦网格制作完成，有限元方法允许在不增加任何额外努力的情况下改变边界条件，具有很大的灵活性。\n\n（a）\n（b）\n（c）\n图7.1 一些常见的3-D元素：（a）六面体；（b）四面体和（c）圆柱形（五面体）。\n\n三维单元 ◾ 287\n\n最常见的3-D元素类型是2-D元素的变化，即四面体和六面体或砖块，如图7.1所示。线性元素仅限于直线（平面）；二次和更高阶元素可以具有曲面。图7.2a展示了一个由四面体元素制成的简单3-D网格；图7.2b展示了一个由矩形（砖块）元素组成的网格。\n\n8 7 3\n5\n2\n5\n1\n3\n5 6\n2\n8\n2\n8\n4 3\n5\n8\n2\n3\n2\n6 5\n8\n4 3\n7\n1\n（a）\n（b）\n图7.2 三维网格。（a）四面体元素和（b）六面体元素。（Desai, C.S.和Abel, J.F., 有限元方法导论：工程分析的数值方法, Van Nostrand Reinhold Company, 纽约, 1972。）\n\n## 7.3 形状函数\n### 7.3.1 四面体\n用于定义线性、3-D四面体的四个节点。四面体如图7.3所示。插值函数写为\n\\[ f = a_1 + a_2 x + a_3 y + a_4 z \\] (7.1)\n对于位于四面体顶点的四个节点，产生一组四个方程\n\\[ f = a_{11} + a_{21} x + a_{31} y + a_{41} z \\]\n\\[ f = a_{12} + a_{22} x + a_{32} y + a_{42} z \\]\n\\[ f = a_{13} + a_{23} x + a_{33} y + a_{43} z \\]\n\\[ f = a_{14} + a_{24} x + a_{34} y + a_{44} z \\]\n可以写成矩阵形式为\n\\[ \\begin{bmatrix} f_1 \\\\ f_2 \\\\ f_3 \\\\ f_4 \\end{bmatrix} = \\begin{bmatrix} 1 & x_1 & y_1 & z_1 \\\\ 1 & x_2 & y_2 & z_2 \\\\ 1 & x_3 & y_3 & z_3 \\\\ 1 & x_4 & y_4 & z_4 \\end{bmatrix} \\begin{bmatrix} a_1 \\\\ a_2 \\\\ a_3 \\\\ a_4 \\end{bmatrix} \\] (7.3)\n或者\n\\[ \\begin{bmatrix} f_1 & f_2 & f_3 & f_4 \\end{bmatrix} = \\begin{bmatrix} 1 & 1 & 1 & 1 \\\\ x & y & z & 1 \\\\ x & y & z & 1 \\\\ x & y & z & 1 \\end{bmatrix} \\begin{bmatrix} a_1 \\\\ a_2 \\\\ a_3 \\\\ a_4 \\end{bmatrix} \\] (7.4)\n取C的逆，得到α列向量为\n\\[ \\begin{bmatrix} a_1 \\\\ a_2 \\\\ a_3 \\\\ a_4 \\end{bmatrix} = C^{-1} \\begin{bmatrix} f_1 \\\\ f_2 \\\\ f_3 \\\\ f_4 \\end{bmatrix} \\] (7.5)\n\\[ f = \\begin{bmatrix} 1 & x & y & z \\end{bmatrix} C^{-1} \\] (7.6)\n量\\[ [1 \\, x \\, y \\, z]C^{-1} \\]实际上是形状函数矩阵，即\n\\[ N = C^{-1} \\] (7.7)\n其中\n\\[ N = \\begin{bmatrix} 1 & x & y & z \\end{bmatrix} \\] (7.8)\n如果希望使用二次四面体，如图7.4所示，则需要10个节点来定义元素。元素节点位置\ny\nxz\nx\n1\nz\nxy\nyz\nz2\ny2 x2\n图7.4 基于帕斯卡三角形的二次四面体表示。\n\n290 ◾ 有限元方法：基本概念和应用\n直接与二维空间的帕斯卡三角形相关，并且在三维中它们以金字塔形式展示类似的属性（见Zienkiewicz和Taylor，1989）。ϕ的表达式变为\n\\[ f = a_1 + a_2 x + a_3 y + a_4 z + a_5 x^2 + a_6 xy + a_7 y^2 + a_8 yz + a_9 xz + a_{10} z^2 \\] (7.9)\n或者\n\\[ f = \\begin{bmatrix} 1 & 2 & 2 & 2 & 1 \\\\ x & y & z & x^2 & xy \\\\ y^2 & yz & xz & z^2 \\end{bmatrix} \\begin{bmatrix} a_1 \\\\ a_2 \\\\ a_3 \\\\ a_4 \\\\ a_5 \\\\ a_6 \\\\ a_7 \\\\ a_8 \\\\ a_9 \\\\ a_{10} \\end{bmatrix} \\] (7.10)\n其中\n\\[ C = \\begin{bmatrix} 1 & 1 & 1 & 1 & 1 & 2 & 1 & 1 & 2 & 1 & 1 & 2 & 1 & 1 \\\\ x & y & z & x^2 & xy & y^2 & yz & xz & z^2 \\\\ x & y & z & x^2 & xy & y^2 & yz & xz & z^2 \\end{bmatrix} \\] (7.11)\n四面体可以建立体积坐标系统，就像二维三角形的面积坐标系统一样。在3-D情况下，使用四个距离比率，每个比率都垂直于一个边：L1、L2、L3和L4。图7.5中显示了体积V1。\n3\n2\n1\n4\n图7.5 体积坐标系统 [L = Vi/V, i = 1, …, 4]。\n\n三维单元 ◾ 291\n四个坐标由\n\\[ L_1 + L_2 + L_3 + L_4 = 1 \\] (7.12)\n关联，从而定义了线性形状函数\n\\[ N_1 = \\frac{L_1}{V}, N_2 = \\frac{L_2}{V}, N_3 = \\frac{L_3}{V}, N_4 = \\frac{L_4}{V} \\] (7.13)\n使用面积坐标，体积积分可以很容易地从关系\n\\[ \\\nint_V L_1 L_2 L_3 L_4 dV = \\frac{a + b + c + d}{6} \\] (7.14)\n中评估，这是用于2-D三角形元素的方程4.45的扩展。更高阶元素的形状函数与线性四面体类似；在这种情况下，不是直线，而是常数L平面平行于相应节点的对面。例如，图7.6中节点1的二次四面体形状函数为\n\\[ N_1 = L_1 (1 - L_2 - L_3 - L_4) \\] (7.15)\n其中L1=0通过节点2、3、4、6、9和10。对于L1=1/2，平面通过节点5、7和8。在节点5，\n\\[ N_5 = 4L_2 (1 - L_1 - L_3 - L_4) \\] (7.16)\n其中L2=0通过节点1、3、4、7、8和10。额外的形状函数关系可以通过参考给出二维二次三角形元素形状函数的方程4.26轻松评估。\n```\n```markdown\n# 三维单元 ◾ 295\n\n定义符号 A(x,y,z);\n\\[ A(x,y,z) = \\begin{bmatrix} 1 & x & y & z \\end{bmatrix} \\]\n\\[ N(x,y,z) = A(x,y,z) \\cdot C_1 \\]\n\\[ N(x, y, z) = \\left[ \\frac{x}{3} - \\frac{z}{15}, \\frac{y}{4} - \\frac{x}{6} - \\frac{z}{15}, 1 - \\frac{y}{4} - \\frac{z}{15} - \\frac{x}{6}, \\frac{z}{5} \\right] \\]\n\n## 7.3.2 六面体\n四面体是一个简单的元素，它直接从三角形元素扩展而来。然而，在复杂的三维网格中，四面体难以可视化，并且可能需要相当大的努力来定义元素的连接性。使用六面体元素可以获得更精确的解，虽然需要更多的节点点，但所需的努力较少。这个家族中最简单的元素是八个节点的三线性六面体，或称为砖块，如图7.8所示。插值函数为\n\\[ f = a_1 + a_2 x + a_3 y + a_4 z + a_5 xy + a_6 xz + a_7 yz + a_8 xyz \\] (7.21)\n\n方程7.21可以使用方程7.3的矩阵形式表示为\n\\[ f = \\begin{bmatrix} 1 & x & y & z & xy & xz & yz & xyz \\end{bmatrix} \\begin{bmatrix} a_1 \\\\ a_2 \\\\ a_3 \\\\ a_4 \\\\ a_5 \\\\ a_6 \\\\ a_7 \\\\ a_8 \\end{bmatrix} \\] (7.22)\n\n图7.8 八个节点的三线性六面体元素（砖块）。\n\n由于 \\(\\alpha = C^{-1}\\phi\\)，我们可以从表达式\n\\[ f = \\begin{bmatrix} 1 & x & y & z & xy & xz & yz & xyz \\end{bmatrix} \\phi \\] (7.23)\n中找到 \\(\\phi\\) 的值，如之前一样得到形状函数：\n\\[ N = \\begin{bmatrix} 1 & x & y & z & xy & xz & yz & xyz \\end{bmatrix} \\] (7.24)\n\n就像二维四边形元素一样，也可以为六面体设计一个自然坐标系统，如图7.9所示。形状函数定义为（经过一些代数运算！）\n\\[ N_1, N_2, N_3, N_4, N_5, N_6, N_7, N_8 = \\frac{1}{8} \\left( 1 \\pm \\xi \\right) \\left( 1 \\pm \\eta \\right) \\left( 1 \\pm \\zeta \\right) \\]\n\\[ \\left( 1 \\pm \\xi \\right) \\left( 1 \\mp \\eta \\right) \\left( 1 \\pm \\zeta \\right) \\]\n\\[ \\left( 1 \\pm \\xi \\right) \\left( 1 \\pm \\eta \\right) \\left( 1 \\mp \\zeta \\right) \\]\n\\[ \\left( 1 \\mp \\xi \\right) \\left( 1 \\pm \\eta \\right) \\left( 1 \\pm \\zeta \\right) \\]\n\\[ \\left( 1 \\mp \\xi \\right) \\left( 1 \\mp \\eta \\right) \\left( 1 \\pm \\zeta \\right) \\]\n\\[ \\left( 1 \\mp \\xi \\right) \\left( 1 \\pm \\eta \\right) \\left( 1 \\mp \\zeta \\right) \\]\n\\[ \\left( 1 \\pm \\xi \\right) \\left( 1 \\mp \\eta \\right) \\left( 1 \\mp \\zeta \\right) \\]\n\\[ \\left( 1 \\mp \\xi \\right) \\left( 1 \\mp \\eta \\right) \\left( 1 \\mp \\zeta \\right) \\] (7.25)\n\n图7.9 六面体元素的自然坐标系统。\n```\n```markdown\n# 三维单元 ◾ 299\n\n在二维三角形元素中出现的面积积分形式为（来自第4章）\n\\[ I = \\int_{0}^{1} \\int_{0}^{1-L_1} \\int_{0}^{1-L_1-L_2} f(L_1, L_2, L_3) \\, dL_3 \\, dL_2 \\, dL_1 \\]\n其中插值函数以面积坐标表示。由于雅可比是面积坐标的函数，雅可比逆的显式形式几乎是不可能的。虽然可以使用方程4.45（二维形式的方程7.14）来评估一些积分，但随着项数的急剧增加，出错的机会也变得相当大。最好让计算机进行积分，即（方程4.48），\n\\[ \\int \\int \\int w g(L_1, L_2, L_3) \\, dL_1 \\, dL_2 \\, dL_3 = \\sum_{i=1}^{n} w_i g(L_{1i}, L_{2i}, L_{3i}) \\]\n其中积分的阶数（n）是通过累加坐标L_1、L_2和L_3的幂来确定的。以类似的方式，四面体元素被评估为\n\\[ I = \\int \\int \\int w g(L_1, L_2, L_3, L_4) \\, dL_4 \\, dL_3 \\, dL_2 \\, dL_1 = \\sum_{i=1}^{n} w_i g(L_{1i}, L_{2i}, L_{3i}, L_{4i}) \\]\n\\[ J(L_1, L_2, L_3, L_4) \\]\n其中四面体的数值积分采样点在表7.1中显示。如果我们希望积分\\( L_1L_2L_4 \\)，指数的总和为3，将需要一个四次积分方案（n=4个点）。评估六面体元素矩阵的过程与用于二维四边形的过程几乎相同。雅可比矩阵现在变为3×3，而不是四边形的2×2。积分的一般形式为\n\\[ \\int \\int \\int w f(x, y, z) \\, dx \\, dy \\, dz = \\sum_{i=1}^{n} \\sum_{j=1}^{n} \\sum_{k=1}^{n} w_i w_j w_k f(x_i, y_j, z_k) J(x, y, z) \\]\n其中\\( w_i, w_j, w_k \\)是与相应的高斯点相关的权重因子。注意方程7.34是通过结合最初为一维元素（第3章）建立的一维公式得到的。权重因子和积分点坐标在表7.2中列出。图7.11显示了立方积分方案的高斯点位置。请注意，现在需要评估刚度矩阵K的积分点数量，对于三线性元素变为8个，对于三次元素变为27个。如果一个人想使用三阶六面体（需要64个节点），将需要64个积分点。尽管手工评估矩阵的工作量巨大，但计算机可以轻松快速地执行此类操作。\n\n# 表7.2 高斯求积\n积分点数 i(j)(k) ξi(η)(ζk) wi(wj)(wk)\n1 (线性) 1 0 2\n2 (三次) 1 2\n1 3 /\n-1 3 /\n1 1\n3 (五次) 1 2\n3\n0\n15 5 /\n- 15 5 /\n8/9 5/9\n5/9\n4 (七次) 1 2 3 4\n0.86113631 −0.86113631 0.33998104 −0.33998104\n0.34785485 0.34785485 0.65214515 0.65214515\n\n# 表7.1 四面体的数值积分公式\nm L1 L2 L3 L4 权重 阶\n1 1/4 1/4 1/4 1/4 1 2\n1 0.5854102 0.1381966 0.1381966 0.1381966 1/4 3 2 0.1381966 0.5854102 0.1381966 0.1381966 1/4 3 0.1381966 0.1381966 0.5854102 0.1381966 1/4 4 0.1381966 0.1381966 0.1381966 0.5854102 1/4\n1 1/4 1/4 1/4 1/4 −16/20 4 2 1/2 1/6 1/6 1/6 9/20 3 1/6 1/2 1/6 1/6 9/20 4 1/6 1/6 1/2 1/6 9/20 5 1/6 1/6 1/6 1/2 9/20\n\n# 三维单元 ◾ 301\n\n一个单一元素的热传导问题。热传导的三维方程的发展直接遵循了前面分析的一维和二维问题。对于一个受内部热生成影响的三维块体，并且受到固定（狄利克雷）和通量（诺伊曼）边界条件的约束，笛卡尔坐标中的时变方程为\n\\[ \\frac{\\partial}{\\partial t} \\left( r c_p T \\right) = \\frac{\\partial}{\\partial x} \\left( k_x \\frac{\\partial T}{\\partial x} \\right) + \\frac{\\partial}{\\partial y} \\left( k_y \\frac{\\partial T}{\\partial y} \\right) + \\frac{\\partial}{\\partial z} \\left( k_z \\frac{\\partial T}{\\partial z} \\right) + Q \\]\n在由表面S界定的体积V内有效\n\n\\[ \\frac{\\partial T}{\\partial n} = -k_x \\frac{\\partial T}{\\partial x} n_x - k_y \\frac{\\partial T}{\\partial y} n_y - k_z \\frac{\\partial T}{\\partial z} n_z + q \\]\n在边界表面S的一部分SB上\n\\[ T = T_S \\]\n在边界表面的其余部分SA上，类似于二维情况下方程4.120和4.117所描述的。在边界表面SA的那部分，其中T是指定的，梯度项和q是零；\\( n_x, n_y, n_z \\)是分别垂直于相应表面的单位向量的方向余弦。方程7.35的伽辽金弱形式是\n\\[ \\int_V N^T \\left( c_p \\frac{\\partial T}{\\partial t} \\right) - \\left( k_x \\frac{\\partial N}{\\partial x} \\frac{\\partial T}{\\partial x} + k_y \\frac{\\partial N}{\\partial y} \\frac{\\partial T}{\\partial y} + k_z \\frac{\\partial N}{\\partial z} \\frac{\\partial T}{\\partial z} \\right) dV = 0 \\]\n应用高斯定理后，方程7.37变为\n\\[ \\int_V c_p \\frac{\\partial N^T}{\\partial t} T dV + \\int_V \\left( k_x \\frac{\\partial N}{\\partial x} \\frac{\\partial T}{\\partial x} + k_y \\frac{\\partial N}{\\partial y} \\frac{\\partial T}{\\partial y} + k_z \\frac{\\partial N}{\\partial z} \\frac{\\partial T}{\\partial z} \\right) dV + \\int_S \\left( N K_x n_x + N K_y n_y + N K_z n_z \\right) q \\, dS = 0 \\]\n方程7.39可以进一步修改为广义伽辽金语句\n\\[ \\int_V \\left( c_p \\frac{\\partial N^T}{\\partial t} + k_x \\frac{\\partial N}{\\partial x} \\frac{\\partial T}{\\partial x} + k_y \\frac{\\partial N}{\\partial y} \\frac{\\partial T}{\\partial y} + k_z \\frac{\\partial N}{\\partial z} \\frac{\\partial T}{\\partial z} \\right) dV + \\int_S \\left( N Q + N q \\right) dS = 0 \\]\n\n# 三维单元 ◾ 303\n\n或者，以矩阵形式为\n\\[ [M][T] + [K][T] = [F] \\]\n我们在第3章到第5章\n中反复看到了这一点。矩阵项是熟悉的质量矩阵M，刚度矩阵K，以及从方程7.40定义的载荷向量F，\n\\[ M = \\int_V r c_p N^T N \\, dV \\]\n\\[ K = \\int_V \\left( k_x \\frac{\\partial N}{\\partial x} \\frac{\\partial N^T}{\\partial x} + k_y \\frac{\\partial N}{\\partial y} \\frac{\\partial N^T}{\\partial y} + k_z \\frac{\\partial N}{\\partial z} \\frac{\\partial N^T}{\\partial z} \\right) dV \\]\n\\[ F = \\int_V Q N \\, dV + \\int_S q N \\, dS \\]\n由于方程7.42至7.44是通用的，我们可以选择网格和基函数的类型，即四面体或六面体。\n\n# 7.5.1 四面体 假设物理问题可以由单一四面体几何描述，线性四面体的形状函数如方程7.13所示给出。\n\\[ N = \\begin{bmatrix} N_1 & N_2 & N_3 & N_4 \\end{bmatrix} = \\begin{bmatrix} L_1 & L_2 & L_3 & L_4 \\end{bmatrix} \\]\n\n# 三维单元 ◾ 305\n\n质量矩阵使用体积坐标和方程7.45进行评估，对于恒定的ρcp：\n\\[ M = \\frac{V c_p}{20} \\begin{bmatrix}\n2 & 1 & 1 & 1 \\\\\n1 & 2 & 1 & 1 \\\\\n1 & 1 & 2 & 1 \\\\\n1 & 1 & 1 & 2\n\\end{bmatrix} \\]\n\n# 三维单元 ◾ 307\n\n刚度矩阵给出为（N = Li等）。\n\\[ K = \\int_V \\left( k_x \\frac{\\partial N}{\\partial x} \\frac{\\partial N^T}{\\partial x} + k_y \\frac{\\partial N}{\\partial y} \\frac{\\partial N^T}{\\partial y} + k_z \\frac{\\partial N}{\\partial z} \\frac{\\partial N^T}{\\partial z} \\right) dV \\]\n其中\n\\[ b_{xx} = \\frac{1}{3} (z_{23} + z_{34} + z_{42}) \\]\n\\[ b_{yy} = \\frac{1}{3} (x_{43} + x_{34} + x_{42}) \\]\n\\[ b_{zz} = \\frac{1}{3} (y_{12} + y_{23} + y_{31}) \\]\n\\[ b_{xy} = \\frac{1}{4} (x_{42} + x_{23} + x_{32}) \\]\n\\[ b_{yz} = \\frac{1}{4} (y_{34} + y_{43} + y_{34}) \\]\n\\[ b_{zx} = \\frac{1}{4} (z_{12} + z_{21} + z_{21}) \\]\n载荷向量评估为\n\\[ F = F_Q + F_q \\]\n对于恒定的Q和q，其中\n\\[ F_{Qi} = Q \\int_V N_i \\, dV \\]\n\\[ F_{q} = \\int_S q N \\, dS \\]\n其中\\( A_{234} \\)是面2-3-4的表面积。还有其他三种形式的方程7.52，对应四面体的其余三个面。注意，由于面上只有三个形状函数，即二维三角形元素，因此在方程7.52中使用了方程4.45来评估通量项。\n\n# 三维单元 ◾ 307\n\n7.5.2 六面体 如果区域被定义为六面体，其边长为a、b和c，图7.9中的三线性元素的形状函数由方程7.26给出。从方程7.42，质量矩阵定义为\n\\[ M = \\int_V \\rho c_p N^T N \\, dV \\]\n刚度矩阵变为\n\\[ K = \\int_V \\left( k_x \\frac{\\partial N}{\\partial x} \\frac{\\partial N^T}{\\partial x} + k_y \\frac{\\partial N}{\\partial y} \\frac{\\partial N^T}{\\partial y} + k_z \\frac{\\partial N}{\\partial z} \\frac{\\partial N^T}{\\partial z} \\right) dV \\]\n其中\n\\[ J = \\frac{\\partial (x, y, z)}{\\partial (\\xi, \\eta, \\zeta)} \\]\n载荷向量像以前一样评估，使用方程7.51和7.52，对于恒定的Q和q，\n\\[ F_{Qi} = \\int_V Q_i N_i \\, dV \\]\n其中\\( V = abc \\)。对于面2-3-6-7我们有\n\\[ F_{qi} = \\int_S q_i N_i \\, dS \\]\n其中\\( A_{2-3-6-7} \\)是面2-3-6-7的表面积。其他面也可以写出类似的关系。\n```\n```markdown\n# 有限元方法：基本概念和应用 ◾ 318\n\n或者\n\\[ h_A = \\frac{1}{3}(T_2 + T_3 + T_4) \\]\n其中 \\( T_a \\) 是指定温度或单元面的平均温度 \\( h_r \\) 由方程7.73给出 ◼\n\n# 7.6.2 形状因子 离开元素a并到达元素b的辐射能量量是\n\\[ s \\epsilon A F_{a \\rightarrow b} \\frac{T_a^4}{4} \\]\n离开元素b并到达元素a的能量量是\n\\[ s \\epsilon A F_{b \\rightarrow a} \\frac{T_b^4}{4} \\]\n其中 \\( F_{a \\rightarrow b} \\) 和 \\( F_{b \\rightarrow a} \\) 代表离开每个元素表面的辐射能量的分数。净热交换计算为\n\\[ A F_{a \\rightarrow b} \\epsilon \\sigma (T_a^4 - T_b^4) = A F_{b \\rightarrow a} \\epsilon \\sigma (T_b^4 - T_a^4) \\]\n这是众所周知的互易定理。问题是确定 \\( F_{a \\rightarrow b} \\) 和 \\( F_{b \\rightarrow a} \\) 的值。两个表面（或元素面）之间的净能量交换可以描述为任何表面几何形状的关系\n\\[ q_{\\text{net}} = \\int \\int \\frac{\\epsilon \\sigma (T_a^4 - T_b^4) \\cos(\\phi_a) \\cos(\\phi_b)}{r^2} \\, dA_a \\, dA_b \\]\n其中 \\( dA_a \\) 和 \\( dAb \\) 代表表面a和b上的微分面积 \\( \\phi_a \\) 和 \\( \\phi_b \\) 是相对于各自表面法线沿辐射作用的方向角 \\( r \\) 是 \\( dA_a \\) 和 \\( dAb \\) 之间的距离\n\n# 三维单元 ◾ 319\n\n为了评估方程7.79，必须知道表面 \\( A_a \\) 和 \\( Ab \\) 的特定几何形状，以及分隔距离和角度。幸运的是，许多与常见几何形状相关的形状因子已经被计算出来，可以在许多关于传热的本科教科书中找到（参见Siegel和Howell，2002）。评估辐射问题中常见的正式积分关系很快就会变得复杂且耗时。对于那些希望使用方程7.71给出的更正式的辐射通量关系，或希望了解更多关于辐射的读者，许多关于辐射的教科书在文献中都很容易找到。评估方程7.62中的矩阵项并将所有项结合，得到一个四面体元素在一面（2-3-4）上经历对流和辐射通量以及内部热生成的一般表达式：\n\\[ \\frac{rc_p}{20} \\begin{bmatrix}\n2 & 1 & 1 & 1 \\\\\n1 & 2 & 1 & 1 \\\\\n1 & 1 & 2 & 1 \\\\\n1 & 1 & 1 & 2\n\\end{bmatrix} \\begin{bmatrix}\nT_1 \\\\\nT_2 \\\\\nT_3 \\\\\nT_4\n\\end{bmatrix} + K \\begin{bmatrix}\nV_{xx} & V_{xy} & V_{xz} \\\\\nV_{yx} & V_{yy} & V_{yz} \\\\\nV_{zx} & V_{zy} & V_{zz}\n\\end{bmatrix} \\begin{bmatrix}\nT_1 \\\\\nT_2 \\\\\nT_3 \\\\\nT_4\n\\end{bmatrix} = QV + qA_{234} + hA_{234}(T_{\\infty} - T_{\\text{avg}}) \\]\n其中 \\( V \\) 代表元素的体积 \\( A_{234} \\) 是面2-3-4的表面积 \\( T_{\\infty} \\) 是用于对流的外部温度 \\( T_R \\)（在这种情况下 \\( T_R = T_{\\infty} \\)）是指定的外部热源辐射到元素表面2-3-4。\n\n唯一剩下的步骤是将适当的元素值代入方程7.82，并使用前向时间差分法求解得到的全局矩阵方程（假设装配仅在一个元素上）。最好将方程7.82的求解留给计算机。\n\n# 7.7 结束语 构建三维有限元算法直接遵循用于构建一维和二维方案的程序；对于任何几何形状中的任何类型元素，计算过程本质上是相同的。仔细检查计算机程序将揭示通常在一维、二维和三维程序中使用的相同逻辑——基本差异是由于处理线、面积和体积的几何考虑。显然，三维程序可以用来求解一维和二维问题；然而，与通用性相关的开销可能会大大限制计算机程序的能力。在这一点上，我们已经取得了足够的进展，感兴趣的读者应该已经具备足够的技能，可以按照这里提供的二维程序的逻辑和思路来开发三维有限元程序。一旦在解决简单的三维问题上获得了足够的信心，一个很好的练习是引入必要的修改到三维程序中，以便也能解决一维和二维问题。在解决三维问题时很快就会明显，相对粗糙的网格需要大量的节点；细网格不仅需要大量的节点，还需要一个更大的计算机和更快的处理速度。还必须考虑生成三维网格和相关的节点连接（特别是如果使用六面体）——加载局部节点点及其相关的x，y，z位置。\n\n*参见FEM-3D和COMSOL。\n\n# 三维单元 ◾ 313\n\n\\[ A = \\begin{bmatrix}\n-\\frac{2}{9} & \\frac{2}{9} & \\frac{1}{9} & -\\frac{1}{9} & -\\frac{1}{9} & \\frac{1}{9} & \\frac{1}{18} & -\\frac{1}{18} \\\\\n-\\frac{2}{9} & \\frac{2}{9} & \\frac{1}{9} & -\\frac{1}{9} & -\\frac{1}{9} & \\frac{1}{9} & \\frac{1}{18} & -\\frac{1}{18} \\\\\n-\\frac{1}{9} & \\frac{1}{9} & \\frac{2}{9} & -\\frac{2}{9} & -\\frac{1}{18} & \\frac{1}{18} & \\frac{1}{9} & -\\frac{1}{9} \\\\\n-\\frac{1}{9} & \\frac{1}{9} & \\frac{2}{9} & -\\frac{2}{9} & -\\frac{1}{18} & \\frac{1}{18} & \\frac{1}{9} & -\\frac{1}{9} \\\\\n-\\frac{1}{9} & \\frac{1}{9} & \\frac{1}{18} & -\\frac{1}{18} & -\\frac{2}{9} & \\frac{2}{9} & \\frac{1}{9} & -\\frac{1}{9} \\\\\n-\\frac{1}{9} & \\frac{1}{9} & \\frac{1}{18} & -\\frac{1}{18} & -\\frac{2}{9} & \\frac{2}{9} & \\frac{1}{9} & -\\frac{1}{9} \\\\\n-\\frac{1}{18} & \\frac{1}{18} & \\frac{1}{9} & -\\frac{1}{9} & -\\frac{1}{9} & \\frac{1}{9} & \\frac{2}{9} & -\\frac{2}{9} \\\\\n-\\frac{1}{18} & \\frac{1}{18} & \\frac{1}{9} & -\\frac{1}{9} & -\\frac{1}{9} & \\frac{1}{9} & \\frac{2}{9} & -\\frac{2}{9}\n\\end{bmatrix} \\]\n\n# 7.6 具有辐射和对流的时变热传导\n三维时变热传递由于具有辐射、通量和对流表面及内部热生成的传导，由方程7.35描述，其通量边界条件形式为\n\\[ \\frac{\\partial}{\\partial n} \\left( K_x \\frac{\\partial T}{\\partial x} \\right) + \\frac{\\partial}{\\partial n} \\left( K_y \\frac{\\partial T}{\\partial y} \\right) + \\frac{\\partial}{\\partial n} \\left( K_z \\frac{\\partial T}{\\partial z} \\right) = -aT + q \\]\n其中 \\( a \\) 代表与辐射和对流相关的各种系数，我们很快就会描述。将伽辽金弱陈述应用于方程7.35产生方程7.39。替换\n\\[ T = \\sum_{i=1}^{n} N_i T_i \\]\n并应用适当的边界条件后，方程7.39变为\n\\[\n \\int_V c_p \\frac{\\partial N^T}{\\partial t} T \\, dV + \\int_V \\left( K_x \\frac{\\partial N}{\\partial x} \\frac{\\partial T}{\\partial x} + K_y \\frac{\\partial N}{\\partial y} \\frac{\\partial T}{\\partial y} + K_z \\frac{\\partial N}{\\partial z} \\frac{\\partial T}{\\partial z} \\right) dV + \\int_S h(T - T_{\\text{env}}) \\, dS = \\int_V Q \\, dV + \\int_S q \\, dS + \\int_S r \\, dS \\]\n其中 \\( q_r \\) 表示由于辐射引起的通量，\\( q \\) 是由于传导引起的热通量，涉及 \\( h \\)（\\( h = \\) 对流系数）的术语代表对流表面。以矩阵形式，方程7.61变为\n\\[ [M][T] + [K](T + [H][T]) = [F] \\]\n其中\n\\[ M = \\int_V \\rho c_p N^T N \\, dV \\]\n\\[ K = \\int_V \\left( K_x \\frac{\\partial N}{\\partial x} \\frac{\\partial N^T}{\\partial x} + K_y \\frac{\\partial N}{\\partial y} \\frac{\\partial N^T}{\\partial y} + K_z \\frac{\\partial N}{\\partial z} \\frac{\\partial N^T}{\\partial z} \\right) dV \\]\n\\[ H = \\int_S h N^T N \\, dS \\]\n\\[ F = F_Q + F_h + F_q + F_{qr} \\]\n载荷向量定义为\n\\[ F_{Qi} = \\int_V Q N_i \\, dV \\]\n\\[ F_{hi} = \\int_S h(T - T_{\\text{env}}) N_i \\, dS \\]\n\\[ F_{qi} = \\int_S q N_i \\, dS \\]\n\\[ F_{qri} = \\int_S r N_i \\, dS \\]\n现在只需要决定使用什么类型的元素，然后评估由方程7.63至7.70定义的矩阵对于特定问题域，并求解方程7.62。在继续具体示例问题之前，首先讨论描述辐射边界条件的方程7.70。\n\n# 7.6.1 辐射 两个边界（表面）段，a和b之间的辐射可以通过关系描述\n\\[ q_r = \\epsilon_a \\sigma \\frac{T_a^4 - T_b^4}{A_a} F_{a \\rightarrow b} \\]\n其中 \\( \\epsilon_a \\) 是发射率 \\( \\alpha_b \\) 是吸收率 \\( \\sigma \\) 是斯特藩-玻尔兹曼常数（5.66961 × 10^–8 W/m^2 K^4）\\( F_{a \\rightarrow b} \\) 是表面a和b之间的形状（形状）因子\n\n形状因子描述了离开一个表面并到达另一个表面的能量分数。形状因子的更详细描述在Siegel和Howell（2002）的传热文本中讨论。方程7.71也可以写成类似于由于对流热传递引起的热通量的形式，\n\\[ q_r = h_r (T_a - T_b) \\]\n其中 \\( T_a \\) 和 \\( T_b \\) 是通过辐射交换热量的两个表面（物体）的温度，\\( h_r \\) 定义为\n\\[ h_r = \\frac{\\epsilon_a \\sigma (T_a + T_b)(\\epsilon_b \\sigma (T_a + T_b))}{A_{ab}} \\]\n显然，\\( h_r \\) 与表面温度强烈耦合；对流热传递系数通常是温度依赖的，因此，是非线性的。将方程7.71代入 \\( q_r \\)，方程7.70变为\n\\[ q_r = \\int_S \\epsilon_a \\sigma F_{a \\rightarrow b} (T_a^4 - T_b^4) \\, dA \\]\n```\n","categories":["FEM"]},{"title":"有限元理论推导（五）","url":"/2024/09/18/有限元理论推导（五）/","content":"\n# 5 等参二维单元\n## 5.1 概述\n在前文，我们假设单元的边是直线的，即线性的，并且矩形单元的边与坐标轴平行。幸运的是，我们并不局限于只使用直线边的单元或矩形四边形单元；具有任意定向的曲线边的单元可以用来表示具有曲线边界的物体。通过使用等参单元，实现了从直线到曲线边的转换。转换过程是简单直接的；事实上，第4章中也使用了该程序，但仅限于直线边的单元，边与坐标轴平行。请记住，在使用有限元方法时必须定义两套关键关系：(1) 一套确定单元形状的关系，以及 (2) 插值函数的阶数。并不是必须在插值方程和坐标变换中使用相同的形状函数，也就是说，可以存在两套“全局”节点。在等参单元的情况下，这两套全局节点是相同的。几乎所有当前在工业和学术研究中使用的有限元程序都使用等参单元。等参单元基于具有独立变量ξ和η的局部坐标系，这些变量通常在空间坐标中从-1变化到1。相同的局部坐标关系用于定义单元内的一个变量，以及用节点的全局坐标来定义单元内某点的全局坐标。\n\n## 5.2 自然坐标系\n我们首先表示$x$和$y$为$\\xi$和$\\eta$的函数，即：\n$$\nx=x(\\xi,\\eta)\n$$\n$$\n\\begin{equation}\ny=y(\\xi,\\eta)\n\\end{equation}\n$$\n其中插值函数也用$\\xi$和$\\eta$表示：\n$$\\begin{equation}\nN_i=N_i(\\xi,\\eta)\n\\end{equation}\n$$\n由于我们在积分方程中处理的是笛卡尔导数，我们使用链式法则转换$N_i$的导数。\n$$\n\\frac{\\partial N_i}{\\partial \\xi}=\\frac{\\partial N_i}{\\partial x}\\frac{\\partial x}{\\partial\\xi}+\\frac{\\partial N_i}{\\partial y}\\frac{\\partial y}{\\partial\\xi}$$\n$$\\begin{equation}\n\\frac{\\partial N_i}{\\partial \\eta}=\\frac{\\partial N_i}{\\partial x}\\frac{\\partial x}{\\partial\\eta}+\\frac{\\partial N_i}{\\partial y}\\frac{\\partial y}{\\partial\\eta}\n\\end{equation}\n$$\n方程3可以使用我们在前几章中使用的雅可比矩阵表达式重写，即：\n$$\n\\begin{equation}\n\\begin{bmatrix}\n\\frac{\\partial N_i}{\\partial \\xi}\\\\\\frac{\\partial N_i}{\\partial \\eta}\n\\end{bmatrix}=\\begin{bmatrix}\n\\frac{\\partial x}{\\partial\\xi}&\\frac{\\partial y}{\\partial\\xi}\\\\\n\\frac{\\partial x}{\\partial\\eta}&\\frac{\\partial y}{\\partial\\eta}\n\\end{bmatrix}\n\\begin{bmatrix}\n\\frac{\\partial N_i}{\\partial x}\\\\\\frac{\\partial N_i}{\\partial y}\n\\end{bmatrix}=\\boldsymbol{J}\n\\begin{bmatrix}\n\\frac{\\partial N_i}{\\partial x}\\\\\\frac{\\partial N_i}{\\partial y}\n\\end{bmatrix}\n\\end{equation}\n$$\n为了找到$N_i$的导数，我们将方程4转化为\n$$\\begin{equation}\n\\begin{bmatrix}\n\\frac{\\partial N_i}{\\partial x}\\\\\\frac{\\partial N_i}{\\partial y}\n\\end{bmatrix}=\\boldsymbol{J}^{-1}\\begin{bmatrix}\n\\frac{\\partial N_i}{\\partial\\xi}\\\\\n\\frac{\\partial N_i}{\\partial\\eta}\n\\end{bmatrix}=\\frac{1}{|\\boldsymbol{J}|}\\begin{bmatrix}\n\\frac{\\partial y}{\\partial\\eta}&-\\frac{\\partial y}{\\partial\\xi}\\\\\n-\\frac{\\partial x}{\\partial\\eta}&\\frac{\\partial x}{\\partial\\xi}\\\\\n\\end{bmatrix}\\begin{bmatrix}\n\\frac{\\partial N_i}{\\partial\\xi}\\\\\\frac{\\partial N_i}{\\partial\\eta}\n\\end{bmatrix}\n\\end{equation}\n$$\n其中$|\\boldsymbol{J}|$表示$\\boldsymbol{J}$的行列式。从方程5中我们得到：\n$$\n\\begin{equation}\n\\frac{\\partial N_i}{\\partial x}=\\frac{1}{|\\boldsymbol{J}|}\\left(\\frac{\\partial y}{\\partial\\eta}\\frac{\\partial N_i}{\\partial\\xi}-\\frac{\\partial y}{\\partial\\xi}\\frac{\\partial N_i}{\\partial\\eta}\\right)\n\\end{equation}\n$$\n$$\n\\begin{equation}\n\\frac{\\partial N_i}{\\partial y}=\\frac{1}{|\\boldsymbol{J}|}\\left(\\frac{\\partial x}{\\partial\\xi}\\frac{\\partial N_i}{\\partial\\eta}-\\frac{\\partial x}{\\partial\\eta}\\frac{\\partial N_i}{\\partial\\xi}\\right)\n\\end{equation}\n$$\n雅可比行列式J由下式得到：\n$$\n\\begin{equation}\n|\\boldsymbol{J}|=\\frac{\\partial x}{\\partial\\xi}\\frac{\\partial y}{\\partial\\eta}-\\frac{\\partial x}{\\partial\\eta}\\frac{\\partial y}{\\partial\\xi}\n\\end{equation}\n$$\n坐标系导数之间的关系为：\n$$\n\\frac{\\partial\\xi}{\\partial x}=\\frac{1}{|\\boldsymbol{J}|}\\frac{\\partial y}{\\partial\\eta}\n$$\n$$\n\\frac{\\partial\\xi}{\\partial y}=-\\frac{1}{|\\boldsymbol{J}|}\\frac{\\partial x}{\\partial\\eta}\n$$\n$$\n\\frac{\\partial\\eta}{\\partial x}=-\\frac{1}{|\\boldsymbol{J}|}\\frac{\\partial y}{\\partial\\xi}\n$$\n$$\n\\begin{equation}\n\\frac{\\partial\\eta}{\\partial y}=\\frac{1}{|\\boldsymbol{J}|}\\frac{\\partial x}{\\partial\\xi}\n\\end{equation}\n$$\n如前所述，微分面积变换为关系：\n$$\n\\begin{equation}\ndA=dxdy=|\\boldsymbol{J}|d\\xi d\\eta\n\\end{equation}\n$$\n$x$, $y$坐标由其节点值定义为：\n$$\nx=\\sum^n_{i=1}N_i[\\xi,\\eta]x_i\n$$\n$$\n\\begin{equation}\ny=\\sum^n_{i=1}N_i[\\xi,\\eta]y_i\n\\end{equation}\n$$\n其中$n = 4$对于双线性四节点单元，$n = 8$或$9$对于二次或双二次四边形。假设变量$\\phi$可以近似为\n$$\n\\begin{equation}\n\\phi=\\alpha_1+\\alpha_2x+\\alpha_3y\n\\end{equation}\n$$\n对于节点$i$，\n$$\n\\begin{equation}\n\\phi_i=\\alpha_1+\\alpha_2x_i+\\alpha_3y_i\n\\end{equation}\n$$\n同样，如果我们让\n$$\n\\begin{equation}\n\\phi=\\sum^n_{i=1}N_i\\phi_i\n\\end{equation}\n$$\n将方程14代入方程13得到\n$$\n\\begin{equation}\n\\phi=\\sum^n_{i=1}(\\alpha_1+\\alpha_2x_i+\\alpha_3y_i)N_i(\\xi,\\eta)=\\alpha_1\\sum^n_{i=1}N_i(\\xi,\\eta)+\\alpha_2\\sum^n_{i=1}N_i(\\xi,\\eta)+\\alpha_3\\sum^n_{i=1}N_i(\\xi,\\eta)\n\\end{equation}\n$$\n因此\n$$\n\\sum^n_{i=1}N_i(\\xi,\\eta)=1,\\sum^n_{i=1}x_iN_i(\\xi,\\eta)=x,\\sum^n_{i=1}y_iN_i(\\xi,\\eta)=y\n$$\n\n## 5.3 形状函数\n形状函数与第3章和第4章中用于二维(2-D)三角形和四边形的形状函数相同。\n### 5.3.1 双线性四边形\n四节点双线性四边形的形状函数可以写为\n$$\n\\begin{equation}\nN_i=\\frac{1}{4}(1+\\xi_i\\xi)(1+\\eta_i\\eta),i=1,\\cdots,4\n\\end{equation}\n$$\n其中$\\xi_i$和$\\eta_i$代表单元边，如图1a中定义，即在节点1处，$\\xi = \\eta = -1$，因此$\\xi_01 = -1,\\eta_1 = -1$; 在节点2处，$\\xi = \\xi_2 = 1$, $\\eta = \\eta_2 = -1$; 等等。因此展开形式方程16变成方程17：\n$$N_1 = (1 - \\xi)(1 - \\eta) / 4$$\n$$N_2 = (1 + \\xi)(1 - \\eta) / 4$$\n$$N_3 = (1 + \\xi)(1 + \\eta) / 4$$\n$$\\begin{equation}\n   N_4 = (1 - \\xi)(1 + \\eta) / 4 \n\\end{equation}$$\n<br><center>![图1 线性以及8节点二次单元](/有限元理论推导（五）/1.png)</center>\n\n在这种情况下，$-1\\le\\xi\\le 1$ 且$-1\\le\\eta\\le 1$。如果$\\xi, \\eta$坐标系位于左下角，则形状函数变为：\n$$N_1 = (1 - \\xi)(1 - \\eta)$$\n$$N_2 = \\xi(1 - \\eta)$$\n$$N_3 = \\xi\\eta$$\n$$\\begin{equation}\n   N_4 = (1 - \\xi)\\eta\n\\end{equation}$$\n\n### 5.3.2 八节点二次四边形\n对于八节点二次四边形，形状函数如下（图1b），\n角节点：\n$$\n\\begin{equation}\nN_i = (1 + \\xi_i\\xi)(1 + \\eta_i\\eta)(\\xi_i\\xi+\\eta_i\\eta-1) / 4 \n\\end{equation}$$\n中边节点：\n$$\\begin{equation}\n\\xi_i=0;N_i = (1 - \\xi^2)(1 + \\eta_i\\eta)\n\\end{equation}$$\n\n### 5.3.3 线性三角形\n将三角形单元的面积坐标系统$（L_i, i = 1, 2, 3）$转换为用于四边形单元的ξ, η系统（Heinrich和Pepper, 1999; Zienkiewicz, 1977; Zienkiewicz和Taylor 1989）是很简单的。<br>三节点线性三角形的形状函数可以用$\\xi,\\eta$坐标表示为:\n$$\nN_1=L_1=1-\\xi-\\eta\n$$\n$$\nN_2=L_2=\\xi\n$$\n$$\\begin{equation}\nN_3=L_3=\\eta\n\\end{equation}\n$$\n其中$\\xi,\\eta$在图2a中定义。在这种情况下$0\\xi\\le 1$且$0\\le\\xi\\le 1$。\n<br><center>![图2 自然坐标系下的三角形单元](/有限元理论推导（五）/2.png)</center>\n\n### 5.3.4 二次三角形\n对于六节点三角形，形状函数定义为（图2b），\n角节点：\n$$\\begin{equation}N_i = (2L_i - 1)L_i, i = 1, 2, 3\\end{equation}$$\n其中可以表示为$\\xi, \\eta$坐标：\n$$N_1=(2(1-\\xi-\\eta)-1)(1-\\xi-\\eta)$$\n$$N_2=(2\\xi-1)\\xi$$\n$$\\begin{equation}N_3=(2\\eta-1)\\eta\\end{equation}$$\n中边节点：$$N_i = 4L_jL_k, i = 4, 5, 6; j = 2, 3, 1; k = 3, 1, 2$$\n或者，以$\\xi$, $\\eta$形式：\n$$N_4=4\\xi\\eta$$\n$$N_5=4\\eta(1-\\xi-\\eta)$$\n$$\\begin{equation}N_6=4\\xi(1-\\xi-\\eta)\\end{equation}$$\n其中$0\\le\\xi\\le 1$且$0\\le\\eta\\le 1$。\n### 5.3.5 方向余弦\n使用$\\xi$, $\\eta$坐标，可以轻松获得与诺伊曼边界条件相关的单元边的方向余弦$n_x$和$n_y$。如图3所示的任意单元边，在点$\\boldsymbol{r}$处的切向量$\\boldsymbol{dr}$定义为\n$$\\begin{equation}\n    \\boldsymbol{dr}= dx\\hat{i} + dy\\hat{j}\n\\end{equation}\n$$\n其中$\\hat{i}$和$\\hat{j}$分别是$x$和$y$方向的单位向量。如果$s$表示沿边$\\boldsymbol{S}$的弧长坐标，我们也可以写成\n$$\\begin{equation}\n\\boldsymbol{dr}=\\left(\\frac{dx}{dx}\\boldsymbol{\\hat{i}}+\\frac{dy}{ds}\\boldsymbol{\\hat{j}}\\right)ds\n\\end{equation}\n$$\n其中\n$$\n\\begin{equation}\n\\boldsymbol{r}=x\\boldsymbol{\\hat{i}}+y\\boldsymbol{\\hat{j}}\n\\end{equation}\n$$\n切向量的长度为\n$$\n\\begin{equation}\n|\\boldsymbol{dr}|=ds\\sqrt{dx^2+dy^2}\n\\end{equation}\n$$\n单位切向量$\\boldsymbol{\\hat{t}}$为\n$$\n\\begin{equation}\n\\boldsymbol{\\hat{t}}=\\frac{\\boldsymbol{dr}}{|\\boldsymbol{dr}|}=\\frac{\\boldsymbol{dr}}{ds}=\\left(\\frac{dx}{ds}\\boldsymbol{\\hat{i}}+\\frac{dy}{ds}\\boldsymbol{\\hat{j}}\\right)\n\\end{equation}\n$$\n可以通过顺时针旋转90°的旋转算子简单地获得指向单元边外侧的单位法向量。这可以通过旋转算子轻松实现\n$$\n\\begin{equation}\nRot(\\theta)=\\begin{bmatrix}\ncos\\theta&-sin\\theta\\\\\nsin\\theta&cos\\theta\n\\end{bmatrix}\n\\end{equation}\n$$\n然后，指向单元边外侧的单位法向量$\\boldsymbol{\\hat{n}}$是\n$$\n\\begin{equation}\n\\boldsymbol{\\hat{n}}=Rot(-90\\degree)\\boldsymbol{\\hat{t}}=\\begin{bmatrix}\n0&1\\\\-1&0\n\\end{bmatrix}\n\\begin{bmatrix}\n\\frac{dx}{ds}\\\\\n\\frac{dy}{ds}\n\\end{bmatrix}=\\frac{dy}{ds}\\boldsymbol{\\hat{i}}-\\frac{dx}{ds}\\boldsymbol{\\hat{j}}\n\\end{equation}\n$$\n使用方程31，可以轻松获得线性和二次四边形单元以及三角形单元的方向余弦。\n\n## 5.4 单元矩阵\n我们将为线性四边形设置局部坐标系的矩阵关系。请记住，我们可以在单元内的任何地方设置我们的局部坐标系。一个标量变量$\\phi$，它可以代表未知的温度、浓度或速度等，是使用方程14进行插值的。$\\phi$的导数$\\partial\\phi/\\partial\\xi$和$\\partial\\phi/\\partial\\eta$使用下述方程表示：\n$$\n\\begin{equation}\n\\begin{bmatrix}\n\\frac{\\partial\\phi}{\\partial\\xi}\\\\\n\\frac{\\partial\\phi}{\\partial\\eta}\n\\end{bmatrix}=\\begin{bmatrix}\n\\frac{\\partial x}{\\partial\\xi}&\\frac{\\partial y}{\\partial\\xi}\\\\\n\\frac{\\partial x}{\\partial\\eta}&\\frac{\\partial y}{\\partial\\eta}\n\\end{bmatrix}\n\\begin{bmatrix}\n\\frac{\\partial\\phi}{\\partial x}\\\\\n\\frac{\\partial\\phi}{\\partial y}\n\\end{bmatrix}\n\\end{equation}\n$$\n因此，由于$N_i$是用于近似$\\phi$的形状函数，我们得到\n$$\n\\begin{equation}\n\\begin{bmatrix}\n\\frac{\\partial\\phi}{\\partial\\xi}\\\\\n\\frac{\\partial\\phi}{\\partial\\eta}\n\\end{bmatrix}=\\begin{bmatrix}\n-(1-\\eta)&(1-\\eta)&\\eta&-\\eta\\\\\n-(1-\\xi)&-\\xi&\\xi&(1-\\xi)\n\\end{bmatrix}\n\\begin{bmatrix}\nx_1&y_1\\\\\nx_2&y_2\\\\\nx_3&y_3\\\\\nx_4&y_4\\\\\n\\end{bmatrix}\n\\begin{bmatrix}\n\\frac{\\partial\\phi}{\\partial x}\\\\\n\\frac{\\partial\\phi}{\\partial y}\n\\end{bmatrix}\n\\end{equation}\n$$\n右边的前两个矩阵就是熟悉的$2\\times 2$雅可比矩阵。\n","categories":["FEM"]},{"title":"06-有限元理论推导（四）","url":"/2024/09/13/有限元理论推导（四）/","content":"\n# 4 二维四边形单元\n\n## 4.1 背景\n四边形单元是一个四边形。最常用的形状包含位于顶点的四个节点，并且是矩形配置中的双线性。其他常用的矩形单元涉及8节点二次、9节点双二次和12节点三次配置。最初，有限元方法仅使用三角形单元。然而，现在许多研究人员更倾向于使用四边形单元。在双线性近似中，四边形单元比三角形多一个节点，后者只有三个节点。此外，梯度是坐标方向的线性函数，而三角形单元中的梯度是常数。对于更高阶的单元，实现了更复杂的表示，从近似的角度来看越来越准确。然而，必须注意评估提高准确性的好处与更复杂单元相关的增加计算成本之间的权衡。\n\n## 4.2 单元网格\n与二维(2-D)三角形网格一样，四边形网格将一个区域细分为一组小域，即单元，只是现在这些是四边形。图1显示了一个矩形计算域被离散化为一组四边形单元。\n<br><center>![图1 矩形计算域划分为四边形单元](/有限元理论推导（四）/1.png)</center>\n\n<br><center>![图2 二维四边形单元](/有限元理论推导（四）/2.png)</center>\n请注意，如果我们连接一对对角线节点，我们得到两个三角形单元。双线性四边形单元包含四个局部节点，按逆时针顺序被指定为1、2、3和4。图2显示了一个包含四个局部节点的一般四边形单元。\n<br>四边形网格更接近标准的二维有限差分网格，而不是三角形网格。然而，四边形在离散化一个区域方面与三角形一样灵活。有限差分网格与四边形网格之间的不同之处在于，有限差分网格必须是正交的，即所有线交点（节点位置）必须彼此成直角；在有限元四边形中，每个单元都是独特的——每个单元的面可以有不同的大小和坡度。换句话说，有限差分网格是全局形成的，并且必须在所有表面和交点处垂直；有限元网格是局部形成的，不必是正交的（在物理空间中）——然而，它必须在计算域内几何上兼容以确保单元之间的连续性。\n<br>在这种情况下，连续性意味着插值函数必须在单元之间连续。如果控制方程包含二阶导数（例如，热扩散），则近似函数必须在单元之间连续。如果我们希望积分$d^n\\phi/dx^n$，那么$\\phi$必须具有连续的$(n-1)$阶导数，以便只在nth导数中存在有限的跳跃不连续。Carey和Oden (1983)，Cary (1997)，和Heinrich和Pepper (1999)对有限元和三角形及四边形单元的这种要求及其影响进行了更详细的讨论。尽管需要额外的节点来定义四边形，但对于相同数量的节点点，单元的数量减少到三角形单元网格的一半。在离散化几何域时，通常首先将区域划分为四边形。如果需要三角形单元，四边形很容易细分。在几乎所有情况下，由四边形单元组成的网格就足够了，通常比由三角形单元组成的网格更准确。四边形网格扩展到三维是容易获得的，即一个盒子，并且比一组3-D四面体更容易在概念上可视化。\n\n## 4.3 形状函数\n与二维三角形单元一样，二维四边形单元基于线性、二次、三次或更高阶近似。线性三角形单元被归类为简单单元（包含常数和线性项的近似），而二次三角形为复杂单元（包含常数、线性和二次项）。简单和复杂单元的单元边界不需要单元边与坐标轴平行。然而，因为它是一个多路单元，为了可能的简单多项式表示，四边形单元要求其边与坐标系统平行。正如我们稍后将看到的，当边不平行于全局轴系统时，这个要求很容易通过局部坐标变换来放松。\n\n### 4.3.1 双线性矩形单元\n在其最简单的形式中，四边形成为一个矩形单元，其边界与坐标系统平行（在物理空间中）。\n\n通过使用局部自然坐标系统进一步扩展单元，可以得到一个泛化的四边形，其中矩形是其子集。我们从矩形单元开始。四节点双线性矩形的插值函数给出为\n$$ \\begin{equation}\n  f = a_1 + a_2 x + a_3 y + a_4 xy\n\\end{equation}$$\n选择$xy$项而不是$x^2$或$y^2$，因为$xy$不破坏对称性，并假设沿$x$或$y$的$\\phi$呈线性变化。对于常数$x$的线，单元在$y$方向上是线性的，反之亦然；对于常数$y$的线，单元在$x$方向上是线性的，因此得名双线性单元。$\\phi$的梯度被视为一个坐标方向上的线性函数，即，\n$$\\begin{equation} \\frac{\\partial \\phi}{\\partial x} = \\alpha_2 + \\alpha_4 y,\n\\frac{\\partial \\phi}{\\partial y} = \\alpha_3 + \\alpha_4 x\n\\end{equation} $$\n图3显示了矩形单元和节点配置。如果到坐标原点的距离，位于单元中点，用$a$和$b$表示，节点值给出为\n$$\\phi=\\phi_1,x=-b,y=-a$$\n$$\\phi=\\phi_2,x=b,y=-a$$\n$$\\phi=\\phi_3,x=b,y=a$$\n$$\\begin{equation}\\phi=\\phi_4,x=-b,y=a\\end{equation}$$\n<br><center>![图3 四节点矩形单元](/有限元理论推导（四）/3.png)</center>\n将这些值代入方程(1)中，对于$\\alpha_is，i = 1, 4$，得到\n$$\\alpha_1=\\frac{\\phi_1+\\phi_2+\\phi_3+\\phi_4}{4} $$\n$$\\alpha_2=\\frac{-\\phi_1+\\phi_2+\\phi_3-\\phi_4}{4b} $$\n$$\\alpha_3=\\frac{-\\phi_1-\\phi_2+\\phi_3+\\phi_4}{4a}$$\n$$\\begin{equation}\\alpha_4=\\frac{\\phi_1-\\phi_2+\\phi_3-\\phi_4}{4ab}\\end{equation}$$\n如果我们现在用节点值和形状函数近似ϕ，就像我们在方程4.7中做的那样，我们得到\n$$\\begin{equation}\\phi=N_1\\phi_1+N_2\\phi_2+N_3\\phi_3+N_4\\phi_4\\end{equation}$$\n其中形状函数给出为\n$$N_1=\\frac{1}{4ab}(b-x)(a-y)$$\n$$N_2=\\frac{1}{4ab}(b+x)(a-y)$$\n$$N_3=\\frac{1}{4ab}(b+x)(a+y)$$\n$$\\begin{equation}N_4=\\frac{1}{4ab}(b-x)(a+y)\\end{equation}$$\n我们在方程（6）中看到，形状函数可以用长度比，$x/b$和$x/a$来表示。例如，\n$$\\begin{equation}N_1 =\\frac{1}{4ab}(b-x)(a-y=\\frac{1}{4}(\\frac{a-y}{a})\\frac{b-x}{b})\\end{equation}$$\n其中$-1\\le x/b\\le 1$且$-1\\le y/a\\le 1$。\n\n### 4.3.2 二次矩形单元\n我们也可以像对三角形单元那样开发二维高阶四边形单元。这样做有两种方法，可以得到两种不同的二次单元：一种在每个角落有一个节点，每个边的中点有一个节点；另一种有九个节点，第九个节点在单元的中心。\n\n我们将在这里讨论八节点单元。四节点双线性和八节点二次四边形，以及九节点双二次单元，在工业中主要使用，并且被发现对大多数计算目的来说是足够的。八节点二次单元的插值多项式，如图4所示，由八项组成。未知变量$\\phi$表示为\n$$\\begin{equation}\\phi = \\alpha_1 + \\alpha_2 x + \\alpha_3 y + \\alpha_4 xy + \\alpha_5 x^2 + \\alpha_6 y^2 + \\alpha_7 x^2y + \\alpha_8 xy^2\\end{equation}$$\n<br><center>![图4 八节点单元](/有限元理论推导（四）/4.png)</center>\n如果节点值定义如图4所示。\n$$\\phi=\\phi_1,x=-b,y=-a$$\n$$\\phi=\\phi_2,x=0,y=-a$$\n$$\\phi=\\phi_3,x=b,y=-a$$\n$$\\phi=\\phi_4,x=b,y=0$$\n$$\\phi=\\phi_5,x=b,y=a$$\n$$\\phi=\\phi_6,x=0,y=a$$\n$$\\phi=\\phi_7,x=-b,y=a$$\n$$\\begin{equation}\\phi=\\phi_8,x=-b,y=0\\end{equation}$$\n从方程9代入方程8得到以下八个方程（用矩阵形式表示）：\n$$ \\begin{equation}\\begin{bmatrix}\n1 & -b & -a & ab & b^2 & a^2 & -ab^2 & -a^b \\\\\n1 & 0 & -a & 0 & 0 & a^2 & 0 & 0 \\\\\n1 & b & -a & -ab & b^2 & a^2 & -ab^2 & a^2b \\\\\n1 & b & 0 & 0 & b^2 & 0 & 0 & 0 \\\\\n1 & b & a & ab & b^2 & a^2 & ab^2 & a^2b \\\\\n1 & 0 & a & 0 & 0 & a^2 & 0 & 0 \\\\\n1 & -b & a & -ab & b^2 & a^2 & ab^2 & -a^2b \\\\\n1 & -b & 0 & 0 & b^2 & 0 & 0 & 0 \\\\\n\\end{bmatrix}\n\\begin{bmatrix}\n\\alpha_1 \\\\\n\\alpha_2 \\\\\n\\alpha_3 \\\\\n\\alpha_4 \\\\\n\\alpha_5 \\\\\n\\alpha_6 \\\\\n\\alpha_7 \\\\\n\\alpha_8 \\\\\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n\\phi_1 \\\\\n\\phi_2 \\\\\n\\phi_3 \\\\\n\\phi_4 \\\\\n\\phi_5 \\\\\n\\phi_6 \\\\\n\\phi_7 \\\\\n\\phi_8 \\\\\n\\end{bmatrix}\\end{equation}$$\n从中可以得到$\\alpha_is，i = 1, \\cdots, 8$。用节点值和形状函数近似ϕ得到\n$$\\begin{equation}\n\\phi = N_1 \\phi_1 + N_2 \\phi_2 + N_3 \\phi_3 + N_4 \\phi_4 + N_5 \\phi_5 + N_6 \\phi_6 + N_7 \\phi_7 + N_8 \\phi_8\n\\end{equation}\n$$\n形状函数为（参见Carey, 1997; Heinrich和Pepper, 1999; Zienkiewicz和Taylor, 1989）\n$$N_1=-\\frac{1}{4(ab)^2}(b-x)(a-y)(ab+ax+by)$$\n$$N_2=\\frac{1}{2ab^2}(b^2-x^2)(a-y)$$\n$$N_3=\\frac{1}{4(ab)^2}(b-x)(a-y)(ay-by-ab)$$\n$$N_4=\\frac{1}{2a^2b}(a^2-y^2)(b+x)$$\n$$N_5=\\frac{1}{4(ab)^2}(b+x)(a+y)(ax+by-ab+yb)$$\n$$N_6=-\\frac{1}{2ab^2}(b^2-x^2)(a+y)$$\n$$\\begin{equation}N_7=-\\frac{1}{4(ab)^2}(b-x)(a+y)(ab+xa-by)\\end{equation}$$\n于是$\\phi$的梯度变为\n$$\\frac{\\partial \\phi}{\\partial x}=\\alpha_2+\\alpha_4y+2\\alpha_5x+2\\alpha_7xy+\\alpha_8y^2$$\n$$\\begin{equation}\n  \\frac{\\partial \\phi}{\\partial y}=\\alpha_3+\\alpha_4x+2\\alpha_6y+\\alpha_7x^2+2\\alpha_8xy\n\\end{equation}$$\n注意到$\\partial\\phi/\\partial x$在$x$方向上为线性，但在$y$方向上为二次，而$\\partial\\phi/\\partial y$相反。就长度比例而言，$N_1$的形状函数可以重写为\n$$\\begin{equation}N_1=-\\frac{1}{4}\\Bigg(1-\\frac{x}{b}\\Bigg)\\Bigg(1-\\frac{y}{a}\\Bigg)\\Bigg(1+\\frac{x}{a}+\\frac{y}{a}\\Bigg)\\end{equation}$$\n\n## 4.4 自然坐标系统\n在大多数情况下，要建模的物理域并不包括直边、正交边界。具有曲线边界的区域可以使用具有曲线边的四边形单元进行离散化，以获得更准确的解决方案。通过用曲线坐标表示x，y坐标，从直线边转换为曲线边：\n$$ x = x(\\xi, \\eta) $$\n$$ \\begin{equation}y = y(\\xi, \\eta) \\end{equation} $$\n$\\xi,\\eta$的选择取决于单元几何形状。当坐标变量在$-1\\le\\xi \\le\\eta\\le 1$范围内时，通常将$\\xi,\\eta$坐标系统称为“自然”坐标系统。对于矩形情况，我们可以找到一组无量纲坐标$\\xi,\\eta$，使得\n$$ \\xi = \\frac{x}{b} $$\n$$ \\begin{equation}\\eta = \\frac{y}{a} \\end{equation}$$\n\n其中$\\xi,\\eta$有效地用局部坐标替换了$x$和$y$全局坐标，用于单个单元；我们之前提到这些特定的比率称为长度比（图3和4）。因此，利用我们在方程16中的定义，我们将双线性形状函数（6）在自然坐标系统中重写为\n$$N_1=\\frac{1}{4}(1-\\xi)(1-\\eta)$$\n$$N_2=\\frac{1}{4}(1+\\xi)(1-\\eta)$$\n$$N_3=\\frac{1}{4}(1+\\xi)(1+\\eta)$$\n$$\\begin{equation}N_4=\\frac{1}{4}(1-\\xi)(1+\\eta)\\end{equation}$$\n我们看到局部坐标系统总是在-1和1之间变化，并且在制定导数项时利用这一事实。图5显示了以单元为中心的$\\xi,\\eta$坐标系统。注意，这个新坐标系统不再重要，它必须是正交的——它也可以是曲线的。然而，不能直接获得关于$x$和$y$的导数，并且需要额外的转换。我们将在处理等参单元时说明这一点；现在，我们假设一个简单的笛卡尔坐标系统。\n<br><center>![图5 矩形单元的$\\xi,\\eta$坐标系](/有限元理论推导（四）/5.png)</center>\n\n对于导数项$\\partial N_i/\\partial x$和$\\partial N_i/\\partial y$的评估类似于第三篇文章中的三角形单元。雅可比矩阵通过\n$$\\begin{equation}\n\\begin{bmatrix}\n\\frac{\\partial N_i}{\\partial \\xi} \\\\\n\\frac{\\partial N_i}{\\partial \\eta} \\\\\n\\end{bmatrix}\n=\\begin{bmatrix}\n  \\frac{\\partial x}{\\partial \\xi}&\\frac{\\partial y}{\\partial \\xi}\\\\\n  \\frac{\\partial x}{\\partial \\eta}&\\frac{\\partial y}{\\partial \\eta}\n\\end{bmatrix} \n=\\boldsymbol{J}\n\\begin{bmatrix}\n\\frac{\\partial N_i}{\\partial x} \\\\\n\\frac{\\partial N_i}{\\partial y} \\\\\n\\end{bmatrix}\\end{equation}$$\n其中雅可比矩阵的逆，$\\boldsymbol{J}^{-1}$，可以用来找到关于$x$和$y$的导数值以及变换的行列式。\n\n## 4.5 使用高斯求积法进行数值积分\n将积分表述为ξ和η的形式可以得到简单的积分限。这在我们处理曲线边界或不平行于坐标轴的边界时特别有利。积分定义为\n$$\\begin{equation}\\int^a_{-a} \\int^b_{-b} F(x, y) dxdy== \\int^1_{-1} \\int^1_{-1} f(\\xi, \\eta)|\\boldsymbol{J}|d\\xi \\, d\\eta \\quad (5.35)\\end{equation}$$\n导热矩阵因此变为\n$$ \\begin{equation}\\boldsymbol{K}^{(e)} = \\int \\int_{\\Omega^{(e)}}\\boldsymbol{K} \\left[ \\frac{\\partial N_i}{\\partial x}\\frac{\\partial N_j}{\\partial x} + \\frac{\\partial N_i}{\\partial y}\\frac{\\partial N_j}{\\partial y} \\right] dxdy=\\\\\n \\int^1_{-1} \\int^1_{-1} \\left[] \\frac{\\partial N_i}{\\partial \\xi}\\frac{\\partial N_j}{\\partial \\xi} + \\frac{\\partial N_i}{\\partial \\eta}\\frac{\\partial N_j}{\\partial \\eta} \\right)|J|d\\xi d\\eta \\end{equation}$$\n其中导数$\\frac{\\partial N_i}{\\partial x}$和$\\frac{\\partial N_i}{\\partial y}$可以作为关于$\\xi,\\eta$,$\\frac{\\partial N_i}{\\partial \\xi}$和$\\frac{\\partial N_i}{\\partial \\eta}$的函数，从方程18中计算得到。所有包含$N_iN_j$乘积的面积积分项变为\n$$\\begin{equation}\n  \\int\\int_{\\Omega^{(e)}} N_i N_j dxdy = \\int^1_{-1} \\int^1_{-1} N_i N_j |\\boldsymbol{J}|d\\xi d\\eta\n\\end{equation}$$\n积分中的右侧项不再涉及简单多项式，并且由于导数表达式中出现的$1/|\\boldsymbol{J}|$项，它们可能变得麻烦。最常见的做法是使用称为高斯求积法的数值积分过程。该过程易于编程并且可以为积分提供几乎精确的值。高斯求积法用一组点上的加权和近似定积分。例如，在一维中，\n$$\\begin{equation}\n  \\int^1_{-1} f(\\xi) d\\xi\\approxeq\\sum^N_{i=1} W_i f(\\xi_i)\n\\end{equation}$$\n其中$N$是积分点数$W_i$是权重因子,$\\xi_i$是高斯点。\n\n使用$N$个高斯点，我们可以精确积分$2N-1$阶的多项式。因此，如果$f(\\xi)$是一个三次多项式$f(\\xi) = a + b\\xi + c\\xi^2 + d\\xi^3$，那么选择$N = 2，我们可以精确积分它。\\xi_i$值定义为（Heinrich和Pepper, 1999）\n$$ \n\\begin{equation}\n\\xi_1 = -\\frac{1}{\\sqrt{3}}, \\xi_2 = \\frac{1}{\\sqrt{3}} \n\\end{equation}\n$$\n权重是$W_1 = W_2 = 1$，函数将被精确积分。对于方程37中的双重积分，\n$$ \n\\begin{equation}\n\\int^1_{-1} \\int^1_{-1} f(\\xi, \\eta)d\\xi d\\eta \\approxeq \\sum_{i=1}^N \\sum_{j=1}^N W_i W_j f(\\xi_i, \\eta_j)\n\\end{equation}$$\n高斯点定义为\n$$ \n\\begin{equation}\n\\xi_i = \\mp \\frac{1}{\\sqrt{3}}, \\eta_j = \\mp \\frac{1}{\\sqrt{3}}  \n\\end{equation}\n$$\n对于图\n所示的四节点四边形单元，使用四个高斯点。当使用八节点二次或九节点双二次单元时，方程5.36中的积分数值上得到\n$$ \\int \\int f(\\xi, \\eta) \\, W_i W_j \\, d\\xi \\, d\\eta \\approx \\sum_{i=1}^3 \\sum_{j=1}^3 W_i W_j f(\\xi_i, \\eta_j) \\quad (5.42) $$\n九个积分点在图7中描述。点和相应的权重在表5.2中给出。\n<br><center>![图6 $2\\times2$高斯点](/有限元理论推导（四）/6.png)</center>\n<br><center>![图7 九个高斯点的数值积分采样位置](/有限元理论推导（四）/7.png)</center>\n<br><center>表1 $N = 3$的高斯点和权重\n| 高斯点 | $\\xi_i$ | $\\eta_i$ | $W_i$ | $W_j$\n|---|---|---|---|---|\n| 1 | -0.77460 | -0.77460 | 0.55556 | 0.55556 |\n| 2 | 0.0 | -0.77460 | 0.88889 | 0.55556 |\n| 3 | 0.77460 | -0.77460 | 0.55556 | 0.55556 |\n| 4 | 0.77460 | 0.0 | 0.55556 | 0.88889 | 0.55556 |\n| 5 | 0.77460 | 0.77460 | 0.55556 | 0.88889 |\n| 6 | 0.0 | 0.77460 | 0.88889 | 0.55556 |\n| 7 | -0.77460 | 0.77460 | 0.55556 | 0.55556 |\n| 8 | -0.77460 | 0.0 | 0.55556 | 0.88889 |\n| 9 | 0.0 | 0.0 | 0.88889 | 0.88889 |\n</center>\n\n使用双线性四边形得到的解涉及每个单元的$4\\times 4$矩阵乘法；而二次四边形则处理$8\\times 8$矩阵，或者每个单元的产品计算是线性单元的四倍。此外，双线性单元需要在四个高斯点进行评估，而二次单元则涉及九个高斯点。因此，在构建四节点双线性单元的单元刚度矩阵方面，操作成本是获得八节点二次单元的单元刚度矩阵的九分之一。这在选择要使用的单元类型时可能是一个重要的考虑因素，因为它意味着CPU时间几乎相差一个数量级。\n\n## 4.6 稳态传导方程\n我们再次关注确定二维域内稳态热传导。此时，我们将热传导矩阵推广以允许各向异性材料，假设坐标轴与导热张量的主轴重合，即热传导在$x-y$坐标系统中由\n$$\\begin{equation}\\boldsymbol{K} = \\begin{bmatrix}\nK_{xx} & 0 \\\\\n0 & K_{yy} \\\\\n\\end{bmatrix}\\end{equation}$$\n给出。然后基本方程可以写成\n$$\\begin{equation}\n   - \\frac{\\partial}{\\partial x} \\left( K_{xx} \\frac{\\partial T}{\\partial x} \\right) - \\frac{\\partial}{\\partial y} \\left( K_{yy} \\frac{\\partial T}{\\partial y} \\right) = Q \n\\end{equation}$$\n现在热流条件采取的形式\n$$\\begin{equation}\n  -\\left(K_{xx} \\frac{\\partial T}{\\partial x} n_x + K_{yy} \\frac{\\partial T}{\\partial y} n_y\\right) = q\n\\end{equation} $$\n其中$n_x$和$n_y$定义如方程（3.29）。按照与方程（3.26）相同的程序，方程27的加权残差形式是\n$$\\begin{equation}\n  \\int_\\Omega W \\left[ - \\frac{\\partial}{\\partial x} \\left( K_{xx} \\frac{\\partial T}{\\partial x} \\right) - \\frac{\\partial}{\\partial y} \\left( K_{yy} \\frac{\\partial T}{\\partial y} \\right) - Q \\right]d\\Omega=0\n\\end{equation}$$\n应用格林定理后，\n$$\\begin{equation}\n  \\int_\\Omega\\left[ K_{xx} \\frac{\\partial W}{\\partial x} \\frac{\\partial T}{\\partial x} + K_{yy} \\frac{\\partial W}{\\partial y} \\frac{\\partial T}{\\partial y}-WQ\\right]dxdy + \\int_{\\Gamma_B} W \\left( -K_{xx} \\frac{\\partial T}{\\partial x} n_x - K_{yy} \\frac{\\partial T}{\\partial y} n_y \\right)dΓ=0 \n\\end{equation}$$\n\n我们现在使用双线性形状函数近似$T$，即\n$$\\begin{equation}\n  T = \\sum_{i=1}^4 N_i T_i\n\\end{equation} $$\n设$W=N_i$。方程26的Galerkin公式变为\n$$\\begin{equation} \\int_\\Omega \\left( K_{xx} \\frac{\\partial N_i}{\\partial x} \\frac{\\partial N_j}{\\partial x} + K_{yy} \\frac{\\partial N_i}{\\partial y} \\frac{\\partial N_j}{\\partial y} \\right) T_jdxdy = \\int_\\Omega N_i Qdxdy-\\int_{\\Gamma_B}N_iqd\\Gamma\n\\end{equation}$$\n其中方程29已被用来替换边界积分中的施加热流。我们现在将方程32转换为自然$\\xi，\\eta$坐标系统。我们在该系统中定义温度为\n$$\\begin{equation}\n  T(\\xi, \\eta) = \\sum_{i=1}^4 N_i(\\xi, \\eta) T_i\n\\end{equation}$$\n其中形状函数$N_i(\\xi，\\eta)$在方程17中给出，定义在图5所示的通用单元上。第一导数值从\n$$ \\begin{equation}\n  \\begin{bmatrix}\n    \\frac{\\partial N_i}{\\partial x}\\\\ \\frac{\\partial N_i}{\\partial y} \n  \\end{bmatrix}\n  = J \\begin{bmatrix}\n\\frac{\\partial N_i}{\\partial \\xi} \\\\\n\\frac{\\partial N_i}{\\partial \\eta} \\\\\n\\end{bmatrix}\n\\end{equation}$$\n其中\n$$ \\begin{equation}\nJ = \\begin{bmatrix}\n\\frac{\\partial x}{\\partial \\xi} & \\frac{\\partial y}{\\partial \\xi} \\\\\n\\frac{\\partial x}{\\partial \\eta} & \\frac{\\partial y}{\\partial \\eta} \\\\\n\\end{bmatrix}=\n\\begin{bmatrix}\nJ_{11}&J_{21}\\\\\nJ_{12}&J_{22}\n\\end{bmatrix}=\\frac{1}{2}\\begin{bmatrix}\nx_2-x_1&0\\\\\n0&y_4-y_1\n\\end{bmatrix}\n\\end{equation}$$\n使用方程13获得。雅可比矩阵的逆如下式所示\n$$\\begin{equation}\n   \\boldsymbol{J}^{-1} =\\frac{1}{|\\boldsymbol{J}|}\\begin{bmatrix}\nJ_{22} & -J_{12} \\\\\n-J_{21} & J_{11} \\\\\n\\end{bmatrix}\n\\end{equation}$$\n其中\n$$\\begin{equation}\n   |J| = J_{11}J_{22} - J_{12}J_{21}\n\\end{equation}$$\n因此，方程32变为\n$$\\begin{equation}\n\\int^1_{-1} \\int^1_{-1} \\left[K_{xx}\\left(\\frac{\\partial N_i}{\\partial\\xi}\\frac{\\partial\\xi}{\\partial x}+\\frac{\\partial N_i}{\\partial\\eta}\\frac{\\partial\\eta}{\\partial x}\\right)\\left(\\frac{\\partial N_j}{\\partial\\xi}\\frac{\\partial\\xi}{\\partial x}+\\frac{\\partial N_j}{\\partial\\eta}\\frac{\\partial\\eta}{\\partial x}\\right)\\\\\n+K_{yy}\\left(\\frac{\\partial N_i}{\\partial\\xi}\\frac{\\partial\\xi}{\\partial y}+\\frac{\\partial N_i}{\\partial\\eta}\\frac{\\partial\\eta}{\\partial y}\\right)\\left(\\frac{\\partial N_j}{\\partial\\xi}\\frac{\\partial\\xi}{\\partial y}+\\frac{\\partial N_j}{\\partial\\eta}\\frac{\\partial\\eta}{\\partial y}\\right)\n\\right]|\\boldsymbol{J}|d\\xi d\\eta\\{T_j\\}\n= -\\int^1_{-1}qN_id\\Gamma+ \\int^1_{-1}\\int^1_{-1}QN_id\\xi d\\eta\n\\end{equation}$$\n其中$\\frac{\\partial N_i}{\\partial x}$和$\\frac{\\partial N_i}{\\partial y}$用方程34表示为$\\frac{\\partial N_i}{\\partial \\xi}$和$\\frac{\\partial N_i}{\\partial \\eta}$。\n## 4.7 稳态传导与边界对流\n如上一篇文章所讨论的，边界上的对流发生会改变边界条件，即载荷向量和刚度矩阵。稳态传导方程与方程27相同，但沿$\\Gamma_B$的边界条件由下式给出：\n$$\n\\begin{equation}\n-\\left(K_{xx}\\frac{\\partial T}{\\partial x}n_x+K_{yy}\\frac{\\partial T}{\\partial y}n_y\\right)=h(T-T_\\infty)\n\\end{equation}\n$$\n其中$h(T − T_\\infty)$项考虑了由于对流引起的表面通量；否则，方程组与刚刚在4.6节讨论的稳态传导问题类似，热通量由方程28给出。应用Galerkin过程并通过部分积分，方程27变为\n$$\n\\begin{equation}\n\\left[\\int\\int_\\Omega\\left(K_{xx}\\frac{\\partial N_i}{\\partial x}\\frac{\\partial N_j}{\\partial x}+K_{yy}\\frac{\\partial N_i}{\\partial y}\\frac{\\partial N_j}{\\partial y}\\right)dxdy\\right]T_j\\\\\n=-\\int_{\\Gamma_B}h(T-T_\\infty)N_id\\Gamma+\\int\\int_\\Omega QN_idxdy\n\\end{equation}\n$$\n其中方程39已被用来定义对流梯度边界条件项。评估方程40的过程与之前完全相同；在这种情况下，我们必须考虑包含对流热通量的表面积分。当单元边是直线时，这些积分的评估可以进行解析。当单元不再是矩形（或者有曲面，如我们稍后在二次单元中将看到的），必须进行数值积分。\n\n## 4.8 二次四边形单元\n如4.3.2节所讨论的，最常用的二次四边形单元由八个节点组成——四个角节点加上四个中边节点，如图7所示。虽然使用二次单元需要更多的计算工作，但精度的提高，或者对稳态问题的收敛解的更接近的近似，是显著的。双线性单元的误差减少率是$O(h^2)$，其中h是单元大小；对于二次单元，误差减少为$O(h^3)$。使用二次单元获得解决方案的过程与双线性单元完全相同。\n\n## 4.9 时间依赖性扩散 \n如果一个人希望以瞬态、时间依赖的模式解决问题，与时间导数项相关的质量矩阵$\\boldsymbol{M}$为\n$$\\begin{equation}\n\\int_\\Omega\\frac{\\partial T}{\\partial t}N_idxdy=\\left[\\int^1_{-1}\\int^1_{-1}N_iN_j|\\boldsymbol{J}|d\\xi d\\eta\\right]\\left[\\frac{\\partial T_j}{\\partial t}\\right]=\\boldsymbol{M}\\left[\\frac{\\partial T_i}{\\partial t}\\right]\n\\end{equation}\n$$\n## 4.10 小结 \n我们增加了第二组单元，即四边形单元。2-D四边形单元，像上一篇讨论的三角形单元一样，是简单的单元，也可以适应任何不规则几何形状，尽管这一点尚不明显，但在下一章中将清楚地展示。四边形和三角形单元之间的两个主要区别是\n1.双线性四边形单元需要一个额外的第四个节点，从而增加了一个自由度来定义单元2.梯度是坐标方向的线性函数，而三节点三角形（单纯形）单元中的梯度是常数。常数梯度需要在变量快速变化的区域使用许多小单元。\n由于（矩形）四边形是多重单元，单元的边界必须与坐标系平行以保持单元之间的连续性。然而，没有理由为什么自然坐标系必须与笛卡尔（或圆柱）正交坐标系对齐——它也可以是曲线坐标系统。在大多数情况下，四边形单元可能比三角形单元（对于相同数量的节点）产生更准确的结果。关于各种单元的准确性和收敛性质的更广泛讨论可以在Carey和Oden (1983)，Oden和Carey (1983)，Oden和Reddy (1976)，Zienkiewicz和Taylor (1989)，以及Carey (1997)中找到。在第6章中，我们将使用一个坐标变换来准确表示非矩形区域和具有弯曲边界的区域。该变换只需要一套关系来考虑插值函数和以x和y表示的单元几何形状。","categories":["FEM"]},{"title":"05-有限元理论推导（三）","url":"/2024/09/12/有限元理论推导（三）/","content":"\n# 3 二维三角形单元\n\n## 3.1 背景\n在工程领域，人们很快发现大多数问题不适合使用一维（1-D）分析来解决。另一方面，许多问题可以使用二维（2-D）概念进行“分析”并获得现实可行的解决方案。正是在二维（和三维）问题领域，有限元方法的优势变得显而易见。网格的概念以及单元离散化的选择在2-D问题中变得比第3章讨论的1-D示例中更为重要。\n<br>仔细检查前一篇文章描述的1-D有限元概念将表明，对1-D解决方案过程的唯一限制在于基函数。否则，该方法具有通用性，也适用于多维问题。这一点至关重要——我们可以使用上一篇文章中所介绍的基本公式，并且只需要扩展基函数到二维。\n<br>在2-D问题中，物理（或问题）域被细分为子区域，或单元。可以使用许多多边形形状来定义单元。例如，当问题域本身是矩形时（这是简单有限差分方法的要求），通常使用矩形。然而，当域不规则时，矩形不容易很好地适应（对此的一个例外是一般四边形，将在后续讨论）。最简单的几何结构，能够轻松适应不规则表面，是三角形，它是当今使用最广泛的单元形状之一。\n<br>在处理2-D问题时，现在出现了两个额外的限制。第一个限制是将涉及更多的节点参与解决过程。回想一下一般的矩阵方程\n$$\\boldsymbol{A}\\phi=\\boldsymbol{B}$$\n人们可以很快看出，全局矩阵$\\boldsymbol{A}$变得更大（$n\\times n$个节点）并且更稀疏；因此，直接解通常仅限于相对较小的问题。第二，通常需要在变量变化迅速或存在不连续性的区域进行本地网格细化。很快就能明显看出使用高效的矩阵求解器的重要性。在本章及后续章节中，我们的方法将使用某种形式的高斯-赛德尔迭代法，或者是一种在许多有限元程序中常用的高斯消元法的改进形式——乔利斯基分解。\n<br>在本章中，我们介绍了用于离散化2-D域的两种通用单元形式中的第一个——三角形，基于一般四边形几何的第二种单元将在后续讨论。历史上，有限元方法首先采用三角形单元来模拟结构问题。今天，许多商业上可用的结构分析有限元代码使用三角形和四边形的混合。\n\n## 4.2 网格\n选择的单元是包含三个顶点节点的三角形。知道在哪里最佳地放置和调整单元的大小更多是一种艺术而不是科学。一般来说，在物理域中函数预期变化更快的区域，会放置更多的单元。正如人们可以很快猜到的，网格生成可能需要几次“尝试”才能得到一个好的网格。求解扩散型方程的解决方案相当宽容——即使在最粗糙的网格上，通常也能获得解决方案（尽管不是最高精度的）。另一方面，非线性方程的解决方案，特别是那些以对流为主的，几乎可以保证需要几次重新网格化才能获得合适的解决方案。大多数分析师，即使是那些在使用有限元方法方面有相当专长的分析师，通常也会在审查问题时询问同事关于他们的网格的意见。\n<br>在创建三角单元网格时，建议在梯度最大的方向上更紧密地放置单元。等边形状的单元比长而窄的三角形单元更准确，并且在处理曲线不规则边界时，单元的边应紧密近似边界。使用线性三节点单元（直线边）可能需要许多单元才能减少解决方案中的误差；另一方面，使用二次曲线边三角形单元可以提高准确性，并能自然适应曲线边界，但需要更多的计算工作。网格生成可以使用计算机程序更容易地执行。网格生成计算机代码MESH-2D允许生成2-D线性或二次三角形单元。由COMSOL创建的示例文件是使用COMSOL 5.2中包含的网格生成预处理器模块创建的。Persson和Strang（2004）描述了一个简单的2-D网格生成器，可以在MATLAB中使用。\n<br>开发网格的首要任务是将问题域细分为规则的几何形状，即由矩形、圆形等组成的宏区域。几乎所有不规则形状都可以简化为简单的几何原语。通过处理原始简单形状，相对容易地对大域进行网格划分，并在边界处交错单元。请注意，我们可以利用一般四边形原语来生成三角形——一个四边形至少包含两个三角形单元。图1显示了一个使用线性三角形单元离散化的不规则形状，嵌入到两个宏1观四边形单元中，其中一个四边形进一步细分为三角形单元。使用二次（曲线边）单元将更准确地近似曲线边界——这一概念在MESH-2D中被利用，以更准确地模拟不规则形状。\n<br><center>![图1 划分为线性三角形单元的非规则区域](/有限元理论推导（三）/1.png)</center>\n\n<br>由于有限元方法基于非结构化网格的使用，即计算是在单元对单元的基础上进行的，我们可以自由地放置我们想要的单元，并将它们连接到其他单元，而不考虑“正交性”或顺序节点编号（如1-D单元中那样）。事实上，我们可以创建一个通用的或通用的单元，然后将作为问题域中所有单元的模型。\n<br>遵循大多数有限元方案中通常采用的程序，与一个三角形单元相关的本地节点编号将以逆时针顺序指定为 1、2 和 3。一个典型的包含三个角节点的线性三角形单元如图2所示。\n<br><center>![图1 划分为线性三角形单元的非规则区域](/有限元理论推导（三）/1.png)</center>\n\n使用线性三角形单元生成简单网格相对容易，对于简单几何体来说，在某些情况下可能不需要复杂的网格生成技术。在本书中，我们故意保持了问题几何体的简单性，使其适用于粗网格解决方案。然而，很快就会到来，手工生成单元变得不可行——就像大多数实际工程问题一样——并且需要详细的网格。当处理 2- 和 3-D 几何体时，将充分认识到通过计算机代码自动化此过程的必要性。在有限差分方法中，创建线行和列以生成网格相对容易——只要这些线是正交的，也就是说，问题域允许生成一个简单的、结构化的网格。多年来，边界贴合坐标作为无结构网格的替代方案发展起来，它允许有限差分和有限体积方法使用预处理器代码处理不规则几何体；这些代码通常比有限元网格生成器更复杂、更苛刻。由 Thompson (1987) 开发的 EAGLE 代码和由 Sorenson (1989) 编写的 3DGRAPE 是基于边界贴合坐标变换的有限差分网格生成器。GRIDGEN，一个从 EAGLE 代码派生的商业网格生成器，是另一个例子，它是一个用于 PC 市场的便宜的边界贴合坐标网格生成器。\n<br>PATRAN (2015) 是一个著名的商业有限元网格生成器，许多年前就开发出来了。更近期的网格生成器包括 TrueGrid (2015)、GMSH (2015) 和 CUBIT (2015)。如今几乎所有的商业有限元代码都包含一个网格生成的预处理器模块；这些网格生成器可以在 COMSOL (2015)、ANSYS (2015)、ADINA (2015) 以及网络上的其他许多软件中访问。\n<br>从这一章开始，一些示例问题将需要使用计算机代码来解决问题。这些问题必须首先使用网格生成器进行预处理，该网格生成器生成由线性或二次 2-D 三角形组成的网格。然后，按照与 1-D 有限元过程完全相同的方式，在所有单元上实现结果的单元算法。\n<br>MESH-1D 是一个简单的 1-D 网格生成器，用作 FEM-1D（如第 3 章讨论的）的前处理器。MESH-2D 生成一个由三角形或四边形组成的 2-D 网格，并作为求解器 FEM-2D 的前处理器。MESH-2D 在用户输入所需边界数据后，自动生成节点编号、单元编号和 x、y 坐标。这个预处理器并不太复杂，它是为了展示一个基本的能力，即允许不规则域进行离散化。最近的一组 1-D 代码用于生成单元网格在 Pepper 等人 (2014) 中进行了讨论，这些代码使用 FORTRAN、MATLAB、MATHCAD 和 MAPLE 编写。\n\n\n## 3.3 形状函数\n有限单元通常可以根据其多项式阶数分为三组：简单形、复杂形和多重形（Oden, 1972）。在简单形单元中，多项式中的系数数量等于问题的空间维度加一。多项式由一个常数项加上线性项组成。2-D三角形简单形单元由多项式表示。\n$$ \\phi = \\alpha_1 + \\alpha_2 x + \\alpha_3 y\\tag{3.1} $$\n多项式在$x$和$y$上是线性的，包含三个系数，因为三角形有三个节点，即顶点。\n<br>复杂单元使用一个包含常数项和线性项以及更高阶项的多项式。虽然形状可能与简单形单元相同，但复杂单元具有额外的边界节点，并且可能有内部节点。二次复杂单元的插值多项式是\n$$ \\phi = \\alpha_1 + \\alpha_2 x + \\alpha_3 y + \\alpha_4 x^2 + \\alpha_5 xy + \\alpha_6 y^2\\tag{3.2} $$\n六个系数表明单元必须有六个节点。\n<br>多重单元也使用包含更高阶项的多项式；然而，单元的边界必须与坐标轴平行。一个多重单元的例子是矩形或四边形单元。\n\n### 3.3.1 线性形状函数\n在线性三角形单元中的插值多项式由方程（3.1）定义，其中$\\phi$用来表示任何未知变量。在每个顶点节点，\n$$\n\\phi=\\phi_1,x=x_1,y=y_1\\\\\n\\phi=\\phi_2,x=x_2,y=y_2\\\\\n\\phi=\\phi_3,x=x_3,y=y_3\\tag{3.4}\n$$\n由此得到\n$$\n\\phi_1=\\alpha_1+\\alpha_2x_1+\\alpha_3y_1\\\\\n\\phi_2=\\alpha_1+\\alpha_2x_2+\\alpha_3y_2\\\\\n\\phi_3=\\alpha_1+\\alpha_2x_3+\\alpha_3y_3\\tag{3.4}\n$$\n现在求解关于$\\phi_1,i=1,2,3$的函数$\\alpha_1,\\alpha_2$及$\\alpha_3$，得到：\n$$\n\\alpha_1=\\frac{1}{2A^{(e)}}[(x_2y_3-x_3y_2)\\phi_1+(x_3y_1-x_1y_3)\\phi_2+(x_1y_2-x_2y_1)\\phi_3]\\\\\n\\alpha_2=\\frac{1}{2A^{(e)}}[(y_2-y_3)\\phi_1+(y_3-y_1)\\phi_2+(y_1-y_2)\\phi_3]\\\\\n\\alpha_3=\\frac{1}{2A^{(e)}}[(x_3-x_2)\\phi_1+(x_1-x_3)\\phi_2+(x_2-x_1)\\phi_3]\\tag{3.5}$$\n\n其中面积$A^{(e)}$为\n$$ 2A^{(e)} = (x_1y_2 - x_2y_1) + (x_3y_1 - x_1y_3) + (x_2y_3 - x_3y_2)\\tag{3.6} $$\n注意单元的面积是用节点坐标来定义的。为了获得形状函数，我们将$\\phi$表达为三个节点值的函数，以便\n$$ \\phi = N_1(x, y) \\phi_1 + N_2(x, y) \\phi_2 + N_3(x, y) \\phi_3\\tag{3.7} $$ \n就像在1-D单元中一样。然后从方程（3.1）、（3.5）和（3.7）中，形状函数是\n$$ N_1^{(e)}(x, y) = \\frac{1}{2A^{(e)}}[(x_2y_3-x_3y_2)+(y_2-y_3)x+(x_3-x_2)y]\\tag{3.8} $$\n$$ N_2^{(e)}(x, y) = \\frac{1}{2A^{(e)}}[(x_3y_1-x_1y_3)+(y_3-y_1)x+(x_1-x_3)y]\\tag{3.9} $$\n$$ N_3^{(e)}(x, y) = \\frac{1}{2A^{(e)}}[(x_1y_2-x_3y_1)+(y_1-y_2)x+(x_2-x_1)y]\\tag{3.10} $$\n这些符合方程（3.1）表达的一般关系。例如，$N_1$在节点1的值可以通过将$x = x_1$和$y = y_1$代入方程（3.8）（假设理解了函数关系$(x, y)$和上标$(e)$）来获得，即\n$$ N_1(x_1, y_1) = \\frac{1}{2A}(x_2y_3-x_3y_2+y_2x_1-y_3x_1+x_3y_1-x_2y_1)\\tag{3.11} $$\n$N_1$在节点2和3以及通过这些节点的线上的所有点上都是零。我们还注意到方程（3.11）中的括号内的值也等于2A；因此，\n$$\nN_1=\\frac{2A}{2A}=1,x=x_1,y=y_1\\\\\nN_1=0,x=x_2,y=y_2,且x=x_3,y=y_3\n$$\n梯度变量$\\phi$由下式给出\n$$ \\frac{\\partial \\phi}{\\partial x} = \\frac{\\partial N_1}{\\partial x}\\phi_1 + \\frac{\\partial N_2}{\\partial x}\\phi_2 + \\frac{\\partial N_3}{\\partial x}\\phi_3 $$\n$$ \\frac{\\partial \\phi}{\\partial y} = \\frac{\\partial N_1}{\\partial y}\\phi_1 + \\frac{\\partial N_2}{\\partial y}\\phi_2 + \\frac{\\partial N_3}{\\partial y}\\phi_3\\tag{3.12} $$\n其中$\\partial N_1/\\partial x$的值可以从方程（3.8）容易确定：\n$$ \\frac{\\partial N_1}{\\partial x} = \\frac{y_2-y_3}{2A}\\tag{3.13} $$\n形状函数的其余导数以直接的方式获得。变量$\\partial\\phi/\\partial x$的值为\n$$ \\frac{\\partial \\phi}{\\partial x} = \\frac{1}{2A}[(y_2-y_3)\\phi_1+(y_3-y_1)\\phi_2+(y_1-y_2)\\phi_3]\\tag{3.14}$$\n\n## 3.3.2 二次形状函数\n与1-D单元一样，我们也可以在线性三角形单元上写出二次近似。二次三角形单元有六个节点，如图3所示。采用这种特定的节点编号系统的原因将在我们考虑三角形的自然面积坐标时变得明显。\n<br><center>![图3 二阶三角形单元](/有限元理论推导（三）/3.png)</center>\n<br>插值多项式由以下六项组成：\n$$ \\phi = \\alpha_1 + \\alpha_2 x + \\alpha_3 y + \\alpha_4 x^2 + \\alpha_5 xy + \\alpha_6 y^2\\tag{3.15} $$\n$\\alpha_s$的确定与线性单元完全相同。在每个节点位置处$\\phi$的定义为：\n$$ \\phi_1 = \\alpha_1 + \\alpha_2 x_1 + \\alpha_3 y_1 + \\alpha_4 x_1^2 + \\alpha_5 x_1y_1 + \\alpha_6 y_1^2\\\\\n \\phi_2 = \\alpha_1 + \\alpha_2 x_2 + \\alpha_3 y_2 + \\alpha_4 x_2^2 + \\alpha_5 x_2y_2 + \\alpha_6 y_2^2\\\\\n \\vdots\\\\\n \\phi_6 = \\alpha_1 + \\alpha_2 x_6 + \\alpha_3 y_6 + \\alpha_4 x_6^2 + \\alpha_5 x_6y_6 + \\alpha_6 y_6^2\\tag{3.16}\n $$ \n\n$\\alpha_is$可以从方程（3.16）中解出，以$\\phi_i$的值表示。然而，获得$a_is$以及随后的形状函数$N_1, N_2, N_3, N_4, N_5$, 和$N_6$所需的努力相当繁琐。方程（3.16）代表了与六个$\\phi_i$方程相关的$6 \\times 6$平方系数矩阵。手工解决方程（3.16）是乏味且不必要的——建立形状函数的一个更简单的方法存在，它基于面积坐标系统。如果一个人希望使用立方三角形单元，则需要10个节点来定义单元——三角形的每条边上有4个，1个在中心。因此，方程（3.16）将包含10个方程，方程（3.15）变为\n$$ \\phi = \\alpha_1 + \\alpha_2 x + \\alpha_3 y + \\alpha_4 x^2 + \\alpha_5 xy + \\alpha_6 y^2 + \\alpha_7 x^3 + \\alpha_8 x^2y + \\alpha_9 xy^2 + \\alpha_{10} y^3\\tag{3.17} $$\n此时，确定$\\alpha_is$以及形状函数$N_1$到$N_10$时需要考虑代数式。\n\n## 3.4 面积坐标\n为了简化使用三角形单元时的解决方案过程，引入了一个面积或自然坐标系统，类似于为1-D单元设计的自然坐标系统。这个2-D坐标系统允许使用方程（2.71）表示的表达式轻松评估积分关系。\n我们通过下式定义三个坐标变量$L_1$, $L_2$, 和$L_3$，\n$$ L_i = \\frac{A_i}{A} \\tag{3.18}$$\n\n其中$A_1$, $A_2$, 和 $A_3$是由连接三角形内某点$P$与角节点（如图4所示）定义的局部面积，使得$A_i$是与节点$i$相对的面积。\n<br>恒定$L_i$的线将平行于相对节点$i$的三角形边。注意在三角形内的任何点$L_1 + L_2 + L_3 = 1$。图5显示了每个坐标的增加方向。很明显，每个$L_i$在与节点$i$相对的边上变化在0到1之间，位于节点$i$处。\n<br><center>![图4 面坐标系](/有限元理论推导（三）/4.png)</center>\n<br><center>![图5 线性三角形单元的面积](/有限元理论推导（三）/5.png)</center>\n对于线性三角形，我们可以将形状函数定义为坐标变量\n$$ N_i = L_i\\tag{3.19} $$\n因此，坐标$(x, y)$与坐标$(L_1, L_2, L_3)$之间的关系为：\n$$ x = L_1 x_1 + L_2 x_2 + L_3 x_3 $$\n$$ y = L_1 y_1 + L_2 y_2 + L_3 y_3 $$\n$$ 1= L_1+L_2+L_3\\tag{3.20}$$\n感兴趣的读者可以在Segerlind (1984), Zienkiewicz和Taylor (1989), 和 Huebner和Thornton (1982)中找到关于面积坐标系统的更广泛描述。\n\n## 3.5 数值积分\n使用面积坐标的优势在于能够评估积分方程，如一维情况下的积分公式。对于具有两个坐标$(L_1, L_2)$的二维单元，方程(2.71)变为\n$$\\int^L_0L^a_1L^b_2dx=\\frac{a!b!}{(1+a+b)!}\\cdot L\\tag{3.21}$$\n这一方程适用于在两个节点之间定义的长度$L$的线积分，以及非负整数$a, b$。当定义仅是单元边长函数的积分时，这种关系也将有效。对于我们的具有$L_1, L_2$, 和$L_3$的二维单元\n$$ \\int_AL^aL^bL^cdA =\\frac{a!b!c!}{(2+a+b+c)!}2A\\tag{3.22} $$\n其中$A$表示面积。例如，在线性三角形中，$N_1N_2$的面积积为\n$$ \\int_A N_1 N_2dA = \\int_AL^1_1L^1_2L^0_3dA=\\frac{1!1!0!}{(2+1+1+0)!}2A=\\frac{A}{12}\\tag{3.23}$$\n面积积分通常采取一般形式\n$$ \\int^1_0 \\int^{1-L_2}_0 f(L_1, L_2, L_3)|\\boldsymbol{J}|dL_1dL_2\\tag{3.24}$$\n\n当更高阶的插值函数（二次、三次等）用面积坐标表示时，必须数值评估矩阵积分——这是由于雅可比矩阵的逆，它是面积坐标本身的有理函数。然而，对于复杂的积分，最好让计算机执行积分以避免人为错误。\n<br>在三角单元中数值评估积分的最常用方法之一是由 Hammer 等人（1956）开发的，可以在许多计算方法的入门文本中找到。在有限元方法中，我们假设\n$$ \\int^1_0 \\int^{1-L_2}_0|\\boldsymbol{J}|dL_1dL_2 = \\frac{1}{2}\\sum^M_{m=1} w_mg[(L_1)_m, (L_2)_m, (L_3)_m]\\tag{3.25}$$\n其中 $g(\\cdot)$ 包括\\boldsymbol{J}，1/2 因子考虑了局部坐标系统中的面积 $(L_i)_m$ 表示三角形中特定点，$w_m$ 是与程序相关联的权重。\n\n数值积分公式的阶数必须至少比坐标$L_1$, $L_2$, 和$L_3$的幂次和大一整数。例如，要积分$L_1L_2L_3$的乘积，指数和为3，将使用四次积分方案。\n\n## 3.6 三角形单元中的传导函数\n考虑确定由于在各向同性 2-D 域内传导而产生的稳态温度分布的问题，该域由边界$\\Gamma$描述，如图6所示。$T(x, y)$的控制方程写为\n$$ -K\\Bigg(\\frac{\\partial^2 T}{\\partial x^2} + \\frac{\\partial^2 T}{\\partial y^2}\\Bigg) = Q\\tag{3.26}$$\n式中$K$是假定为常数的热导率，$Q$是源/汇项。\n<br><center>![图6 热传导的二维域](/有限元理论推导（三）/6.png)</center>\n\n我们希望制定一套独特的有限元表达式，用于线性三角形单元。与方程（3.26）相关的边界条件写为\n$$-K\\frac{\\partial T}{\\partial n}=q(along\\Gamma_B)\\tag{3.27}$$ \n$$T=T_A(along\\Gamma_A)\\tag{3.28}$$\n其中$\\Gamma_A$和$\\Gamma_B$是如图6所示的边界$\\Gamma$的部分，法向导数定义为\n$$\\frac{\\partial T}{\\partial n} \\equiv n_x \\frac{\\partial T}{\\partial x} + n_y \\frac{\\partial T}{\\partial y}\\tag{3.29}$$\n其中$n_x$和$n_y$是单位外法向量$\\Gamma$的方向余弦分量。\n<br>使用加权残差法得到，\n$$\\int_\\Omega WRd\\Omega=0\\tag{3.30}$$\n其中\n$$R = -K\\Bigg(\n  \\frac{\\partial^2 T}{\\partial x^2}+\\frac{\\partial^2 T}{\\partial y^2}\\Bigg)- Q\\tag{3.31}\n  $$\n其中$W$是权重函数。采用（通用）微分公式\n$$\\frac{\\partial}{\\partial\\alpha}\\Bigg(F\\frac{\\partial G}{\\partial\\alpha}\\Bigg)=\\frac{\\partial F}{\\partial\\alpha}\\frac{\\partial G}{\\partial\\alpha}+F\\frac{\\partial^2G}{\\partial\\alpha^2}\\tag{3.32}$$\n和平面的格林定理，\n$$\\int_\\Omega\\Bigg(\\frac{\\partial F}{\\partial x} +\\frac{\\partial G}{\\partial y}\\Bigg)dxdy=\\int_\\Gamma Fdy-Gdx\\tag{3.33}$$\n方程（3.30）可以写成形式\n$$\\int_\\Omega\\Bigg[K\\Bigg(\\frac{\\partial W}{\\partial x}\\frac{\\partial T}{\\partial x}+\\frac{\\partial W}{\\partial y}\\frac{\\partial T}{\\partial y}\\Bigg)-WQ\\Bigg]d\\Omega + \\int_\\Gamma W\\Bigg(-K\\frac{\\partial T}{\\partial n}\\Bigg)d\\Gamma = 0\\tag{3.34}$$\n我们现在使用形状函数近似温度场\n$$T(x, y) = \\sum_{i=1}^{M} N_i(x, y) T_i\\tag{3.35}$$\n正如之前对 1-D 单元所做的那样，其中$M$是域$\\Omega$中的节点数。在线积分项中使用方程（3.27），并且在一维中使用类似的论点在$\\Gamma_A$将边界通量项设置为0，我们在 Galerkin 公式中设置$W_i = N_i$。方程（3.34）变为\n$$\\sum^M_{j=1}\\Bigg[\\int_\\Omega K\\Bigg(\\frac{\\partial N_i}{\\partial x} \\frac{\\partial N_j}{\\partial x}+\\frac{\\partial N_i}{\\partial y} \\frac{\\partial N_j}{\\partial y}\\Bigg)d\\Omega\\Bigg]T_j=\\int_\\Omega N_iQd\\Omega-\\int_{\\Gamma_B}N_iqd\\Gamma\\tag{3.36}$$\n其中$i = 1, \\cdots, M$。方程（3.36）对任何区域$\\Omega$和我们可能想要使用的任何类型的单元都是有效的，只要它们在几何上是兼容的，无论是线性或二次三角形单元，还是四边形单元，或两者的组合。很明显，方程（3.36）可以写成\n$$\\boldsymbol{KT}= \\boldsymbol{F}\\tag{3.37}$$\n其中\n$$\\boldsymbol{K} =[k_{ij}]=\\Bigg[\\int_{\\Omega} K\\Bigg( \\frac{\\partial N_i}{\\partial x} \\frac{\\partial N_j}{\\partial x} + \\frac{\\partial N_i}{\\partial y} \\frac{\\partial N_j}{\\partial y}\\Bigg) d\\Omega\\Bigg]\\tag{3.38}$$\n和\n$$\\boldsymbol{F}=[f_i]=\\Bigg\\{\\int_\\Omega N_iQ d\\Omega-\\int_{\\Gamma_B}N_iqd\\Gamma\\Bigg\\}\\tag{3.39}$$\n如第 3 章所述，$\\boldsymbol{K}$称为“传导”或“刚度”矩阵，$\\boldsymbol{F}$是“载荷向量”。为了简化建立矩阵方程所涉及的代数，我们将重写形状函数的更一般形式。对于线性三角形单元中的节点点 1、2 和 3。\n$$N_1^{(e)} = \\frac{1}{2A}(a_1+b_1x+c_1y)\\\\\nN_2^{(e)} = \\frac{1}{2A}(a_2+b_2x+c_2y)\\\\\nN_3^{(e)} = \\frac{1}{2A}(a_3+b_3x+c_3y)\\tag{3.40}\n$$\n式中$a_i,b_i,c_i,i=1,2,3$由表1给出。\n<br>注意到$\\boldsymbol{K}^{(e)}$是对称的，并且积分下的所有项都是常数：\n$$\\boldsymbol{K}^{(e)} =\\int_{\\boldsymbol{A}^{(e)}}\\frac{K}{4(A^{(E)})^2} (b_i b_j + c_i c_j) dA\\\\\n=\\frac{K}{4(A^{(E)})^2}\\Bigg[\n\\begin{matrix}\nb_1b_1+c_1c_1&b_1b_2+c_1c_2&b_1b_3+c_1c_3\\\\\nb_2b_1+c_2c_1&b_2b_2+c_2c_2&b_2b_3+c_2c_3\\\\\nb_3b_1+c_3c_1&b_3b_2+c_3c_2&b_3b_3+c_3c_3\n\\end{matrix}\n\\Bigg],\\\\\ni=1,2,3;j=1,2,3\\tag{3.41}$$\n<br><center>表1 线性三角形单元形状函数的系数值\n|$i$|$a_i$|$b_i$|$c_i$|\n|--|--|--|--|\n|1|$x_2y_3-x_3y_2$|$y_2-y_3$|$x_3-x_2$|\n|2|$x_3y_1-x_1y_3$|$y_3-y_1$|$x_1-x_3$|\n|3|$x_1y_2-x_2y_1$|$y_1-y_2$|$x_2-x_1$|\n</center>\n\n<br>载荷向量$\\boldsymbol{F}$的分量由两个积分组成。由于$N_i = L_i$，第一个积分对于热源可以明确地写成\n$$\\boldsymbol{F}_Q^{(e)}=Q\\int_{A^{(e)}}\n\\Bigg[\n\\begin{matrix}\nN^{(e)}_1\\\\\nN^{(e)}_2\\\\\nN^{(e)}_3\n\\end{matrix}  \n\\Bigg]dA=Q\\int_A\n\\Bigg[\n\\begin{matrix}\nL^1_1&L^0_2&L^0_3\\\\\nL^0_1&L^1_2&L^0_3\\\\\nL^0_1&L^0_2&L^1_3\n\\end{matrix}  \n\\Bigg]\\\\\n=\\frac{QA^{(e)}}{3}\n\\Bigg[\n\\begin{matrix}\n1\\\\1\\\\1\n\\end{matrix}\n\\Bigg]\\tag{3.42}\n$$\n第二个积分项考虑了在表面$\\Gamma_B$上的边界条件，这由单元边组成。结果取决于哪一边的单元受到热通量$q$的影响。如果我们假设热通量在表面上是恒定的，\n$$F_{q_{1-2}}^{(e)}=-q\\int_{\\Gamma_B^{(e)}}\\Bigg[\n\\begin{matrix}\nN^{(e)}_1\\\\\nN^{(e)}_2\\\\\nN^{(e)}_3\n\\end{matrix}  \n\\Bigg]dS=-q\\int_{\\Gamma_B^{(e)}}\\Bigg[\n\\begin{matrix}\nL^1_1L^0_2\\\\L^0_1L^1_2\\\\0\n\\end{matrix}  \n\\Bigg]dS=-\\frac{q\\ell^{(e)}_{1-2}}{2}\\Bigg[\n\\begin{matrix}\n1\\\\1\\\\1\n\\end{matrix}\n\\Bigg]\\\\\nF_{q_{2-3}}^{(e)}=-\\frac{q\\ell^{(e)}_{2-3}}{2}\\Bigg[\n\\begin{matrix}\n0\\\\1\\\\1\n\\end{matrix}\n\\Bigg]\\\\\nF_{q_{3-1}}^{(e)}=-\\frac{q\\ell^{(e)}_{3-1}}{2}\\Bigg[\n\\begin{matrix}\n1\\\\0\\\\1\n\\end{matrix}\n\\Bigg]\\tag{3.43}$$\n其中$\\ell^{(e)}_{1-2},\\ell^{(e)}_{2-3},\\ell^{(e)}_{3-1}$是三角形单元中边1–2, 2–3,和3–1的长度。因此，\n$$\\boldsymbol{F}^{(e)} = \\boldsymbol{F}^{(e)}_Q+\\boldsymbol{F}^{(e)}_{q1-2}+\\boldsymbol{F}^{(e)}_{q2-3}+\\boldsymbol{F}^{(e)}_{q3-1}\\tag{3.44}$$\n其中最后三项中的通量边界值取决于指定的单元边。方程（3.41）到（3.43）作为三角形单元的一般有限元关系。我们只需要输入实际值就可以得到由单元网格指定的节点温度值。在下一节中，我们将应用一般关系来解决一个具有边界对流的单元问题。\n\n## 3.7 具有边界对流的稳态传导 \n假设我们有一个如图7所示的离散化，其中一个面上指定了对流条件，该面连接节点2和3。我们希望解决在$\\ell ^{(e)}_{2-3}$上具有边界条件\n$$-K\\frac{\\partial T}{\\partial n} = h(T - T_{\\infty})\\tag{3.45}$$ \n的方程（3.26）的稳态传导问题。\n<br><center>![图7 单面有对流的元件中的热传导](/有限元理论推导（三）/7.png)</center>\n传导矩阵由\n$$\\boldsymbol{K}^{(e)}=[k^{(e)}_{ij}]= \\Bigg[\\int_{A^{(e)}} K\\Bigg(\\frac{\\partial N_i^{(e)}}{\\partial x} \\frac{\\partial N_j^{(e)}}{\\partial x}\\\\+\\frac{\\partial N_i^{(e)}}{\\partial y} \\frac{\\partial N_j^{(e)}}{\\partial y}\\Bigg) dA + h \\int_{\\ell_{2-3}} N_i^{(e)} N_j^{(e)} d\\Gamma\\Bigg]\\tag{3.46}$$\n其中附加项来自对流边界条件，方程（3.45），它包括$hT$。计算方程（3.45），我们得到\n$$\\boldsymbol{K}^{(e)} = \\frac{K}{4A^{(e)}}\\Bigg[\n\\begin{matrix}\nb_1b_1+c_1c_1&b_1b_2+c_1c_2&b_1b_3+c_1c_3\\\\\nb_2b_1+c_2c_1&b_2b_2+c_2c_2&b_2b_3+c_2c_3\\\\\nb_3b_1+c_3c_1&b_3b_2+c_3c_2&b_3b_3+c_3c_3\n\\end{matrix}\n\\Bigg]+\\\\\n\\frac{h\\ell^{(e)}_{2-3}}{6}\\Bigg[\n\\begin{matrix}\n0&0&0\\\\\n0&2&1\\\\\n0&1&2\n\\end{matrix}  \n\\Bigg]\\tag{3.47}\n$$\n其中\n$$\\int_{\\ell^{(e)}_{2-3}}hN^{(e)}_iN^{(e)}_jdS = h\\int_{\\ell^{(e)}_{2-3}}\n\\Bigg[\n\\begin{matrix}\n0&0&0\\\\\n0&L_2L_2&L_2L_3\\\\\n0&L_2L_3&L_3L_3\n\\end{matrix}  \n\\Bigg]\ndS\\tag{3.48}$$\n并且\n$$\\int_{\\ell^{(e)}_{2-3}}L^2_2dS = \\int_{\\ell^{(e)}_{2-3}}L^2_2L^0_3dS=\\frac{2!0!}{(2+2+0)!}\\ell^{(e)}_{2-3}=\\frac{\\ell^{(e)}_{2-3}}{12}\\tag{3.49}$$\n积分\n$$\n\\int_{\\ell^{(e)}_{2-3}}L^2_2dS=\\int_{\\ell^{(e)}_{2-3}}L^2_3dS\n$$\n相似地，\n$$\n\\int_{\\ell^{(e)}_{2-3}}L_2L_3dS=\\frac{\\ell^{(e)}_{2-3}}{6}\n$$\n$b_i$和$c_i$的值是\n$$b_1 = y_2 - y_3=-3,c_1 = x_3 - x_2=-1\\\\\n  b_2 = y_3 - y_1=2, c_2 = x_1 - x_3=-2\\\\\n  b_3 = y_1 - y_2=1, c_3 = x_2 - x_1=3\\tag{3.50}$$\n单元的面积是\n$$A^{(e)}= \\frac{1}{2} \n\\Bigg|\n\\begin{matrix}\n1&x_1&y_1\\\\\n1&x_2&y_2\\\\\n1&x_3&y_3\n\\end{matrix}\n\\Bigg|=\\frac{1}{2}\\Bigg|\n\\begin{matrix}\n1&1&1\\\\\n1&4&0\\\\\n1&3&3\n\\end{matrix}\n\\Bigg|=\\frac{8}{2}=4\\tag{3.51}$$\n这是使用方程（3.6）写的。边$\\ell^{(e)}_{2-3}$的长度由下式计算：\n$$\\ell_{23} = \\sqrt{(x_2 - x_3)^2 + (y_2 - y_3)^2}=\\sqrt{(4-3)^2+(0-3)^2}=\\sqrt{10}m$$\n载荷向量$\\boldsymbol{F}^{(e)}$从方程（3.43）评估，只是$q$被$-hT_\\infty$替换。因此，\n$$F^{(e)} = \\Big\\{f^{(e)}_i\\Big\\}=\\int_{\\ell^{(e)}_{2-3}} hT_{\\infty} N_i^{(e)}d\\Gamma=hT_{\\infty}\\int_{\\ell^{(e)}_{2-3}}\\Bigg[\n\\begin{matrix}\n0\\\\L^1_2L^0_3\\\\L^0_2L^1_3\n\\end{matrix}  \n\\Bigg]d\\Gamma=\\frac{hT_{\\infty}\\ell^{(e)}_{2-3}}{2}\n\\Bigg[\n\\begin{matrix}\n0\\\\1\\\\1\n\\end{matrix}  \n\\Bigg]\\tag{3.52}\n$$\n取代方程（3.42,（3.47）和（3.52）和问题数据到方程（3.37)，我们得到\n$$\\begin{bmatrix}\n6.25&-2.5&-3.75\\\\\n-2.5&10.27&0.135\\\\\n-3.75&0.135&11.52\n\\end{bmatrix}\n\\begin{bmatrix} T_1^{(e)} \\\\ T_2^{(e)} \\\\ T_3^{(e)} \\end{bmatrix} = \n\\begin{bmatrix} 2.667\\\\793.24\\\\793.24\\tag{3.53}\n\\end{bmatrix}$$\n由于在节点处没有规定温度，方程（3.53）代表具有绝热边$\\ell^{(e)}_{1-2}$和$\\ell^{(e)}_{3-1}$；通过不在这些边上施加任何条件，我们相当于具有形式为（3.27）的通量，其中$q = 0$。这是我们在 1-D 情况下之前遇到的情况。请注意，通过在这些边界上施加任何条件，有限元方法自动引入了绝热边界的条件。\n<br>通过求解方程(3.53)，可以方便地获得内部在三角形内产生的热量与通过边$\\ell^{(e)}_{2-3}$的热通量之间的平衡状态下的节点温度。\n<br>让我们回顾一下获得单元扩散矩阵和载荷向量所必需的主要步骤：\n1. 使用方程（3.40）定义线性三角形单元的形状函数，并使用表 1中给定的系数。\n2. 使用形状函数近似温度，形式为方程（3.35），对于线性三角形$M = 3$。\n3. 确定$T$的梯度，使用方程（3.40）。这产生\n$$\\Bigg[\n\\begin{matrix}\n\\frac{\\partial T}{\\partial x}\\\\\n\\frac{\\partial T}{\\partial y}\n\\end{matrix}  \n\\Bigg]=\\frac{1}{2A}\n\\begin{bmatrix}\nb_1&b_2&b_3\\\\\nc_1&c_2&c_3\n\\end{bmatrix}\n\\begin{bmatrix}\nT^{(e)}_1\\\\T^{(e)}_2\\\\T^{(e)}_3\n\\end{bmatrix}\\tag{3.54}$$\n4. 使用方程(3.41)评估单元传导矩阵。\n5. 如果边界上发生对流，评估对流积分，如方程（3.47）所做的。一般来说，这是\n$$\\boldsymbol{H}^{(e)} = h\\int_{\\Gamma_B}\n\\begin{bmatrix}\nN^{(e)}_1N^{(e)}_1&N^{(e)}_1N^{(e)}_2&N^{(e)}_1N^{(e)}_3\\\\\nN^{(e)}_2N^{(e)}_1&N^{(e)}_2N^{(e)}_2&N^{(e)}_2N^{(e)}_3\\\\\nN^{(e)}_3N^{(e)}_1&N^{(e)}_3N^{(e)}_2&N^{(e)}_3N^{(e)}_3\n\\end{bmatrix}d\\Gamma\\tag{3.55}$$\n由于$L_1 = N_1$，通常只有一边（例如，连接节点 1 和 2 的边受到对流），$\\boldsymbol{H}^{(e)}$变为\n$$\\boldsymbol{H}^{(e)} = h\\int_{\\ell^{(e)}_{1-2}}\n\\begin{bmatrix}\nL_1L_1&L_1L_2&0\\\\\nL_2L_1&L_2L_2&0\\\\\n0&0&0\n\\end{bmatrix}d\\Gamma=\\frac{h\\ell^{(e)}_{1-2}}{6}\\begin{bmatrix}\n2&1&0\\\\\n1&2&0\\\\\n0&0&0\n\\end{bmatrix}\\tag{3.55}$$\n6. 评估源/汇项。对于常数源$Q$，这是由方程（3.42）给出的。\n7. 如果任何三角形边的侧面规定了热通量，使用方程（3.43）评估它。对流项$hT_\\infty$也由方程（3.43）给出，其中$q$被 $-hT_\\infty$替换。\n   \n<br>在前一个例子中，我们假设区域只包含一个三角形单元。我们可以很容易地将区域离散化为任意数量的单元，然后对每个单元执行单独的计算。得到的答案将被组装成整体全局矩阵方程，通过某种形式的消除程序来求解。到目前为止，应该很明显，手工进行局部单元计算可能变得相当繁琐，即使是简单的线性近似。\n\n## 3.8 轴对称传导方程 \n轴对称热传导方程对于稳态条件和恒定导热性由下式表示\n$$-K\\Bigg[\\frac{1}{r}\\frac{\\partial}{\\partial r}\\Bigg(\n  r\\frac{\\partial T}{\\partial r}\\Bigg)+\\frac{\\partial^2T}{\\partial z^2}\\Bigg]=Q\\tag{3.56}$$\n其中$T = T_A$在边界$\\Gamma_A$的部分上，并且\n$$\\frac{\\partial T}{\\partial r } n_r+ \\frac{\\partial T}{\\partial z}n_z = q\\tag{3.57}$$\n在边界$\\Gamma_B$的部分上，其中$n_r$和$n_z$是外法向单位向量$\\Gamma$的方向余弦分量。我们现在构造方程（3.56）和（3.57）的弱形式：\n$$\\int_{V}W\\Bigg\\{\n  -K\\Bigg[\n    \\frac{1}{r}\\frac{\\partial}{\\partial r}\\Bigg(r\\frac{\\partial T}{\\partial r}\\Bigg)+\\frac{\\partial^2T}{\\partial z^2}\n    \\Bigg]-Q \n  \\Bigg\\} dV = 0\\tag{3.58}$$\n其中假定单元体积是轴对称的，即，\n$$dV =rd\\theta dA= 2\\pi r dr dz \\tag{3.59}$$\n得到的积分关系变为\n$$2\\pi \\int_{\\Omega}\\Bigg[K\\Bigg(-\\frac{\\partial}{\\partial r}\\Bigg(r\\frac{\\partial T}{\\partial r}\\Bigg)-r\\frac{\\partial^2 T}{\\partial z^2}\\Bigg)-Qr\\Bigg]dr dz = 0\\tag{3.60}$$\n注意，如果我们希望解决笛卡尔问题，我们可以将$K_r$和$Q_r$替换为$K'$和$Q'$。因此，我们可以使用相同类型的方法来解决笛卡尔或轴对称情况；我们只需要在轴对称情况下评估径向分量$r$。\n<br>基本上有两种方法来考虑$r$。一种方法是使用基于单元质心的平均径向距离。如果单元尺寸与径向距离相比很小，这种程序就足够了。更准确的方法是对$r$表示为\n$$r = N_1^{(e)} r_1 + N_2^{(e)} r_2 + N_3^{(e)} r_3\\tag{3.61}$$\n其中$r_i, i = 1, 2, 3$ 是角点处$r$的值。轴对称传导矩阵对于单个单元变为\n$$\\boldsymbol{K}^{(e)}=[k^{(e)}_{ij}]=\\Bigg[\n  \\frac{2\\pi K}{4(A^{(e)})^2}(b_ib_j+c_ic_j)\\int_{A^{(e)}}(L_1r_1+L_2r_2+L_3r_3)d\\Omega\\tag{3.62}$$\n使用方程（3.22）进行积分得到\n$$[k^{(e)}_{ij}]= \\frac{2\\pi K}{12A^{(e)}} (r_1+r_2+r_3)[b_ib_j + c_i c_j]\\tag{3.63}$$\n载荷向量包含内部热生成项，对于常数$Q$写为\n$$F^{(e)}_Q = 2\\pi Q\\int_{A^{(e)}}r\n\\Bigg[\n\\begin{matrix}\nN_1\\\\N_2\\\\N_3  \n\\end{matrix}  \n\\Bigg]dA =2\\pi Q\\int_{A^{(e)}}r\n\\Bigg[\n\\begin{matrix}\nL_1\\\\L_2\\\\L_3  \n\\end{matrix}  \n\\Bigg](L_1r_1+L_2r_2+L_3r_3)d\\Omega\\tag{3.64}$$\n整合为\n$$\nF^{(e)}_Q = \\frac{2\\pi Q{A^{(e)}}}{12}\n\\Bigg[\n\\begin{matrix}\n2r_1+r_2+r_3\\\\r_1+2r_2+r_3\\\\r_1+r_2+2r_3  \n\\end{matrix}  \n\\Bigg]\n\\tag{3.65}\n$$\n与单元面热流边界条件相关的载荷为\n$$F^{(e)}_{q1-2} =-2\\pi q \\int_{\\ell^{(e)}_{1-2}}r\\Bigg[\n\\begin{matrix}\nN_1\\\\N_2\\\\0   \n\\end{matrix}\n\\Bigg]d\\Gamma=-2\\pi\\int_{\\ell^{(e)}_{1-2}}r\\Bigg[\n\\begin{matrix}\nL_1\\\\L_2\\\\0   \n\\end{matrix}\n\\Bigg]d\\Gamma\\\\\n=-\\frac{2\\pi q\\ell^{(e)}_{1-2}}{6}\\Bigg[\n\\begin{matrix}\n2r_1+r_2\\\\r_1+2r_2\\\\0\n\\end{matrix}\n\\Bigg]\n\\tag{3.66}$$\n同样，\n$$F^{(e)}_{q2-3} = -\\frac{2\\pi q\\ell^{(e)}_{1-2}}{6}\\Bigg[\n\\begin{matrix}\n0\\\\2r_2+r_3\\\\r_2+2r_3\n\\end{matrix}\n\\Bigg]\\tag{3.67}$$\n$$F^{(e)}_{q3-1} = -\\frac{2\\pi q\\ell^{(e)}_{3-1}}{6}\\Bigg[\n\\begin{matrix}\n2r_1+r_3\\\\0\\\\r_1+2r_3\n\\end{matrix}\n\\Bigg]\\tag{3.68}$$\n然后总力向量是方程（3.66）到（3.68）的总和，其中$\\ell^{(e)}_{1-2}$，$\\ell^{(e)}_{2-3}$和$\\ell^{(e)}_{3-1}$ 是单元边的长度，即$\\ell^{(e)}_{i-j} = \\sqrt{(r_i - r_j)^2 + (z_i - z_j)^2}$。\n\n## 3.9 二次三角形单元 \n正如第 3.3.2 节所讨论的，二次三角形单元由三个顶点节点和三个中节点组成。在某些情况下，二次单元的增加精度显著提高了解决方案的整体收敛性，超过了线性单元。尽管由于单元中节点数量的增加导致更大的带宽矩阵，但可以在许多非线性问题中实现计算节省；可能需要一个大的细尺寸线性单元网格，而一个更粗糙的二次单元网格就足够了。\n\n## 3.10 依赖时间的扩散方程\n由于扩散而传输的标量变量$\\phi(x, y, t)$的时间依赖方程，其二维形式写为\n$$\n\\frac{\\partial\\phi}{\\partial t}=\\frac{\\partial}{\\partial x}\\Bigg(\\alpha\\frac{\\partial\\phi}{\\partial x}\\Bigg)+\\frac{\\partial}{\\partial y}\\Bigg(\\alpha\\frac{\\partial\\phi}{\\partial y}\\Bigg)+S\\tag{3.67}\n$$\n对于Ω，边界条件为\n$$\n\\phi=\\phi_A ,\\Gamma_A\\tag{3.68}\n$$\n$$\n-\\alpha\\frac{\\partial\\phi}{\\partial n}=a\\phi+b,in\\Gamma_B\\tag{3.69}\n$$\n和初始条件\n$$\n\\phi(x,y,0)=\\phi_0(x,y)\\tag{3.70}\n$$\n方程（3.67）至（3.69）是描述一维热传输的方程的二维扩展。变量$\\phi$现在代表任何未知的标量量；$\\alpha$是扩散系数，例如，可以是空间依赖的热扩散率；$S = Q/\\rho c_p$是源/汇项。（3.68）中的$a$和$b$的值是为每个问题预设的。方程(3.67)的加权残差形式是\n$$\n\\int_\\Omega W\\Bigg[\\frac{\\partial\\phi}{\\partial t}-\\frac{\\partial}{\\partial x}\\Bigg(\\alpha\\frac{\\partial\\phi}{\\partial x}\\Bigg)-\\frac{\\partial}{\\partial y}\\Bigg(\\alpha\\frac{\\partial\\phi}{\\partial y}\\Bigg)-S\\Bigg]d\\Omega=0\\tag{3.70}\n$$\n在应用了格林定理之后得到\n$$\n\\int_\\Omega\\Bigg\\{W\\frac{\\partial\\phi}{\\partial t}+\\alpha\\Bigg(\\frac{\\partial W}{\\partial x}\\frac{\\partial\\phi}{\\partial x}+\\frac{\\partial W}{\\partial y}\\frac{\\partial\\phi}{\\partial y}\\Bigg)-WS\\Bigg\\}d\\Omega+\\int_{\\Gamma_B}W\\Bigg(-\\alpha\\frac{\\partial\\phi}{\\partial n}\\Bigg)d\\Gamma=0\\tag{3.71}\n$$\n其中$d\\Gamma$表示在$\\Gamma_B$上应用的正常梯度（通量）的表面单元。我们像以前一样用形状函数来近似变量：\n$$\n\\phi(x,y,t)\\approxeq\\sum^N_{i=1}N_i(x,y)\\phi_i(t)\\\\\n\\alpha(x,y)\\approxeq\\sum^N_{i=1}N_i(x,y)\\alpha_i\\\\\n\\S(x,y,t)\\approxeq\\sum^N_{i=1}N_i(x,y)S_i(t)\\tag{3.72}\n$$\n将方程（3.72）代入方程（3.71），并设置Wi = Ni，我们得到半离散Galerkin近似为\n$$\n\\Bigg[\\int_\\Omega N_iN_jd\\Omega\\Bigg]\\dot{\\phi}_j+\\Bigg[\\int_\\Omega\\alpha\\Bigg(\\frac{\\partial N_i}{\\partial x}\\frac{\\partial N_j}{\\partial x}+\\frac{\\partial N_i}{\\partial y}\\frac{\\partial N_j}{\\partial y}\\Bigg)dA\\Bigg]\\phi_j\\\\\n+\\Bigg[\\int_B aN_iN_jd\\Gamma\\Bigg]\\phi_j=\\int_\\Omega N_iSd\\Omega-\\int_{\\Gamma_B}N_ibd\\Gamma\\tag{3.73}\n$$\n\n其中$\\Gamma_B$沿线的法导数项已用方程（3.69）替换，并且暗示了左手边的指数$j$的求和。正如前面的文章提到的，一维单元的有限元算法的开发也适用于多维问题几何。对于线性三角形单元，单元质量矩阵被评估为\n$$\n\\boldsymbol{M}^{(e)}=\\int_{A^{(e)}}N_iN_jdA=\\int_{A^{(e)}}\\begin{bmatrix}\nL_1\\\\L_2\\\\L_3\n\\end{bmatrix}\n\\begin{bmatrix}\nL_1&L_2&L_3\n\\end{bmatrix}dA\\\\\n=\\begin{bmatrix}\nL_1L_1&L_2L_2&L_1L_3\\\\\nL_2L_1&L_2L_2&L_2L_3\\\\\nL_3L_1&L_3L_2&L_3L_3\n\\end{bmatrix}dA=\\frac{A^{(e)}}{12}\n\\begin{bmatrix}\n2&1&1\\\\\n1&2&1\\\\\n1&1&2\n\\end{bmatrix}\\tag{3.74}\n$$\n\n扩散（刚度）矩阵由方程（3.41）给出，当扩散系数是常数时，$K$被$\\alpha$替换。如果$\\alpha = \\alpha(x, y)$，我们有一个与方程（3.62）类似的表达式，即\n$$\\boldsymbol{K}^{(e)}=[k^{(e)}_{ij}]=\\Bigg[\n  \\frac{b_ib_j+c_ic_j}{4(A^{(e)})^2}\\int_{A^{(e)}}(L_1\\alpha_1+L_2\\alpha_2+L_3\\alpha_3)dxdy\\Bigg]\\tag{3.75}$$\n源项产生一个类似于质量矩阵的表达式，即\n$$\n\\boldsymbol{F}^{(e)}_S=[(f_S)_i]=\\frac{A^{(e)}}{12}\n\\begin{bmatrix}\n  2&1&1\\\\\n  1&2&1\\\\\n  1&1&2\n\\end{bmatrix}\n\\begin{bmatrix}\nS_1\\\\S_2\\\\S_3\n\\end{bmatrix}=\\boldsymbol{MS}\\tag{3.76}\n$$\n其中$\\boldsymbol{S}$是$S(x, y, t)$的节点值向量。如果$S$是一个常数函数，我们得到向量\n$$\n\\boldsymbol{F}^{(e)}_S=\\frac{SA^{(e)}}{3}\\begin{bmatrix}\n  1\\\\1\\\\1\n\\end{bmatrix}\\tag{3.77}\n$$\n这是我们在稳态热传导中得到的向量。\n<br>由$a\\phi$产生的对流项产生一个与方程(3.55)相同的矩阵，$h$被$a$替换，所以如果对流发生在边1-2，我们得到\n$$\n\\boldsymbol{H}^{(e)}_{1-2}=\\frac{a\\ell^{(e)}_{1-2}}{6}\n\\begin{bmatrix}\n  2&1&0\\\\\n  1&2&0\\\\\n  0&0&0\n\\end{bmatrix}\\tag{3.78}\n$$\n其他两边的情况也类似。最后，通量$b$作为应用于单元侧面（表面）的边界条件。假设通量在侧面上是恒定的，我们使用符号\n$$\n\\boldsymbol{F}^{(e)}_{b1-2}=-\\frac{b\\ell^{(e)}_{1-2}}{2}\\begin{bmatrix}\n  1\\\\1\\\\0\n\\end{bmatrix}\\tag{3.79}\n$$\n其他两边的情况也类似。\n<br>评估所有矩阵后，我们得到了一般单元矩阵方程，就像我们之前对一维单元所做的那样。\n$$\n\\boldsymbol{M}^{(e)}\\dot{\\phi}+\\boldsymbol{K}^{(e)}\\phi=\\boldsymbol{F}^{(e)}\\tag{3.80}\n$$\n其中\n$$\n\\boldsymbol{K}^{(e)}\\equiv\\boldsymbol{K}^{(e)}+\\boldsymbol{H}^{(e)}\\tag{3.81}\n$$\n并且\n$$\n\\boldsymbol{F^{(e)}}=\\boldsymbol{F}^{(e)}_Q+\\boldsymbol{F}^{(e)}_b\\tag{3.81}\n$$\n矩阵$\\boldsymbol{H}^{(e)}$和向量$\\boldsymbol{F^{(e)}}$包含了沿单元的一个或多个侧面的混合边界条件（3.69）的贡献。在这种情况下，矩阵系数项是从线性三角形二维单元中获得的。请记住，有限元程序和得到的矩阵方程适用于任何类型的单元和任何数量的空间维度。\n\n## 3.11 带宽\n当处理二维和三维单元时，带宽的概念变得重要。正如上一篇文章简要讨论的，矩阵的带宽由节点编号序列决定，如图8所示。在一维问题中，单元和节点编号是顺序的。\n<br><center>![图8 1-D域的节点编号和单元连接性](/有限元理论推导（三）/8.png)</center>\n<br>与单元相关的“全局”节点编号称为“单元连通性”。在一维线性单元中，与单元相关联的两个“局部”节点，即每个单元的两端都有一个节点。\n\n<br><center>表2 一维单元连接性\n|单元序号|局部节点1|局部节点2|\n|--|--|--|\n|1|1|2\n|2|2|3\n|3|3|4\n|4|4|5\n|5|5|6\n</center>\n\n<br>当从弱表述公式派生的单元矩阵方程被“组装”在整个问题域上时，即所有单元都被纳入，得到的全局线性方程组$\\boldsymbol{A}\\phi=\\boldsymbol{F}$涉及一个$n \\times n$的方阵，其中$n$是节点的总数（表2）。在图8中，全局矩阵$\\boldsymbol{A}$是一个$6 \\times 6$的方阵。正如图3.7所示，两个相邻的一维线性单元的组装产生一个在整个网格上通用的三对角矩阵。因此，$6 \\times 6$实际上是一个只有主对角线和上一个及下一个相邻对角线的稀疏矩阵，如方程（3.82）所示。\n$$\nA=\\begin{bmatrix}\na_{11}&a_{12}&0&0&0&0\\\\\na_{21}&a_{22}&a_{23}&0&0&0\\\\\n0&a_{32}&a_{33}&a_{34}&0&0\\\\\n0&0&a_{43}&a_{44}&a_{45}&0\\\\\n0&0&0&a_{54}&a_{55}&a_{56}\\\\\n0&0&0&0&a_{65}&a_{66}\n\\end{bmatrix}\\tag{3.82}$$\n<br>$a_{ij}$项代表组成$6 \\times 6$数组的各个系数。注意方程（3.82）方阵的稀疏性。一行中非零系数的最大数量是$3$。这也是矩阵的带宽。从主对角线（包括主对角线）到最远非零系数的距离（列数）是半带宽（或半带宽），在这种情况下是$2$。可以从简单的关系计算矩阵的半带宽\n$$\nHBW=NOF\\times (N_{max}-N_{diag}+1)Ndiag\\tag{3.83}$$\n其中$NOF$是每个节点的自由度数量，即节点未知数的数量，如温度、速度、浓度等。$N_{max}$和$N_{diag}$分别是分配给任何非零单元行中最大节点编号的数量和行号。\n\n对于由六个单元组成的一维域，并且只解决一个未知数$（NOF = 1）$，半带宽是\n$$\nHBW =1(1+1)=2\\tag{3.84}$$\n其中$N_{max}−N_{diag}=1$对于任何行。带宽外的系数是零；这些系数不需要存储。高效的计算机编程（矩阵求解算法）只处理带宽内的系数；这在使用高斯消元方法时尤其重要。应尽可能减少带宽，因为带宽的减少直接导致计算机存储和计算时间的减少。对于一维单元，带宽已经最小化了。\n\n<br><center>![图9 2-D域中的节点编号（a）较差的节点标记和（b）改进的节点标记](/有限元理论推导（三）/9.png)</center>\n\n在二维网格中，节点编号对于带宽变得重要。图9显示了一个二维域，使用线性三角形单元，有两种不同的节点编号。每个单元由三个局部节点$（1,2,3）$组成，分配了全局编号。\n\n用户可以直接控制半带宽；对于简单的问题，可以通过视觉检查来最小化节点编号使用线性单元。然而，对于高阶单元或大型3-D问题，通过检查最小化带宽是非常困难的。有商业软件包可以执行网格生成和重新排序节点编号以最小化半带宽，适用于PC。MESH-2D使用一个简单的节点重编号方案来产生更小的带宽。COMSOL和其他商业有限元代码在重新排序节点编号方面做得更好；许多这些早期优化方案基于多年前引入的Cuthill和McGee（1969）算法。读者可以参考Carey（1997）的网格生成文本，以及Heinrich和Pepper（1999）有关网格优化的更多细节。\n\n## 3.12 质量凝聚\n为了获得一个完全显式方案，我们对质量矩阵$\\boldsymbol{M}$进行对角化，或“凝聚”质量。对于所考虑的单元类型，这可以通过将$\\boldsymbol{M}$的每行中的所有单元相加并将总和放在对角线上来简单地实现。然后，质量矩阵M被凝聚质量矩阵$\\boldsymbol{M}^{\\ell}$替换，定义为\n$$\n\\boldsymbol{M}^{\\ell}=[m^{\\ell}_{ij}]\\tag{3.85}\n$$\n其中\n$$\nm^{\\ell}_{ij}=\\begin{cases}\n  0,i\\neq j\\\\\n  \\sum^n_{j=1},i=j\n\\end{cases}\\tag{3.86}\n$$\n\n这是一个对角矩阵。\n<br>现在出现的问题是我们在使用一致质量矩阵还是凝聚质量时应该使用哪种形式来解决时间依赖问题。这个问题没有明确的答案，必须根据问题本身来检查。作为一般规则，如果我们对需要准确跟踪时间演化的瞬态解感兴趣，则最好使用一致质量公式。然而，如果我们希望通过时间积分方案（而不是迭代）快速达到稳态条件，那么凝聚质量是首选。然而，当我们决定使用哪种公式时，还会出现其他需要考虑的因素。一致质量公式需要组装和存储质量矩阵；在$\\theta=0$的情况下，必须在每个时间步解决一个全局矩阵是质量矩阵的方程组。因此，存储和CPU时间的增加是会发生的，这可能是显著的。当我们解决解决方案的准确性和时间步长选择的问题时，会出现额外的考虑。在这种情况下，必须评估稳定性限制和正确表示所涉及物理的必要性。回答这些问题所需的分析并不简单，需要计算所涉及矩阵的特征值。这些研究表明，当使用一致公式时，时间步长的限制比使用凝聚质量时更为严格。对于有关凝聚质量的更详细讨论，请参阅Segerlind（1984）。对于动态和场问题中的时间依赖问题的高级处理，读者应参考Zienkiewicz和Taylor（1989）和Hughes（1987）的书籍。\n\n## 3.13 结束语\n我们已经将有限元过程扩展到二维，基于最初为一维单元导出的基本概念。很明显，一维概念可以直接应用，但在建立二维网格和制定矩阵时需要更多的细节。我们在本章集中讨论了二维三角形单元，即线性三节点单元和六节点二次单元。大多数早期的有限元方法的发展工作都围绕着三角形单元展开；在1960年代和1970年代初，三角形单元在结构问题上的应用非常广泛。三角形单元今天仍然被广泛使用；它们易于构建，易于使用，并且可以近似不规则边界，因为它们可以根据需要进行定向。鼓励读者熟悉商业有限元代码或附带的代码，了解网格生成和边界条件输入的过程。\n","categories":["FEM"]},{"title":"04-有限元理论推导（二）","url":"/2024/09/05/有限元理论推导（二）/","content":"# 2 一维有限元方法\n\n## 2.1 背景\n本部分以加权残差法的Galerkin形式为基础介绍有限元方法。有限元方法的第一步是将感兴趣的区域分割成包含节点的子区域，或单元，并在每个单元上定义要使用的“形状”类型。一个二阶单元有三个节点，它被优化地放置在单元的中点；一个三阶单元由四个节点组成，最好在单元的三分之一间隔处放置。单元和节点的集合称为“有限元网格”。在程序中使用的形状函数的类型直接与选择的网格类型相关。\n\n## 2.2 形状函数\n在第一篇文章中，我们使用分段多项式形状函数$f_i(x)$来处理一维（1-D）热传导问题。现在，我们将正式定义分段多项式插值的过程，并展示对特定的单元使用每个单元的局部函数更方便。\n\n### 2.2.1 线性单元\n让我们从定义一个网格开始，在$0 \\leq x \\leq L$的范围内，单元不一定是等大小的。然后我们在每个单元上定义线性形状函数，如图1所示。\n<br><center>![图1 分段线性单元的形状函数](_posts/有限元理论推导（二）/1.png)</center>\n\n这将是全局有限元网格和形状函数的表示，它允许我们描述我们问题的几何形状。如果网格由$n$个单元组成，它将有$n+1$个节点，其坐标为$x_1, x_2, \\cdots, x_\\{n+1\\}$。单元域由下式给出：\n$$\ne_i = \\{x | x_{i-1} \\leq x \\leq x_{i+1}\\}\n\\tag{2.1}$$\n\n与每个节点相关联的形状函数将被记为$N_i(x)$，并且满足$N_i(x_i) = 1$，$N_j(x_i) = 0$（对于所有$j \\neq i$），由下式给出：\n\n$$\nN_1(x) = \\begin{cases}\n\\frac{x_2-x}{h_1} & \\text{if } x \\in [x_1, x_2] \\\\\n0 & \\text{otherwise}\n\\end{cases}\\tag{2.2}\n$$\n$$\nN_i(x) = \\begin{cases}\n\\frac{x-x_{i-1}}{h_{i-1}} & \\text{if } x \\in [x_{i-1}, x_i] \\\\\n\\frac{x_{i+1}-x}{h_i} & \\text{if } x \\in [x_i, x_{i+1}]\\\\\n0 & \\text{otherwise}\n\\end{cases}\\tag{2.3}\n$$\n$$\nN_{n+1}(x) = \\begin{cases}\n\\frac{x-x_n}{h_n} & \\text{if } x \\in [x_n, x_{n+1}]\\\\\n0 & \\text{otherwise}\n\\end{cases}\\tag{2.4}\n$$\n\n其中$h_i = x_{i+1} - x_{i-1}$，对于$i = 1, 2, \\ldots, n$。\n我们现在定义$T(x)$如下：\n$$T(x)=N_1(x)T_1+N_2(x)T_2+\\cdots+N_{n+1}(x)T_{n+1}\\\\\n=\\sum^{n+1}_{i=1}N_i(x)T_i\\tag{2.5}$$\n式中$T_i$表示节点$i$，即位置$x_i$处的$T$值；$T(x)$为两个节点间的线性函数。我们考虑仅有一个单元的网格，也就是$n=1$。如果$T(x)$在两个节点之间为线性，其形式将为$T(x)=\\alpha_1+\\alpha_2x$。同时$T(x_1)=T_1$，$T(x_2)=T_2$，由此\n$$T_1=\\alpha_1+\\alpha_2x_1\\tag{2.6}\n$$\n$$T_2=\\alpha_1+\\alpha_2x_2\\tag{2.7}\n$$\n求解$\\alpha_1$和$\\alpha_2$，\n$$\\alpha_1=\\frac{T_1x_2-T_2x_1}{h_1}\\tag{2.8}\n$$\n$$\\alpha_2=\\frac{T_2-T_1}{h_1}\\tag{2.9}\n$$\n因此\n$$T(x)=\\frac{T_1x_2-T_2x_1}{h_1}+\\frac{T_2-T_1}{h_1}x\\tag{2.10}$$\n整理得到\n$$T(x)=\\Big [\\frac{x_2-x}{h_1}\\Big]T_1+\\Big [\\frac{x-x_1}{h_1}\\Big]T_2\\tag{2.11}$$\n这与方程2.5的表达式相同，其中$n = 1$。在实践中，与所考虑的特定单元相关的局部坐标系统中的每个单元进行工作将非常方便。如果我们在局部坐标系统中需要描述一个长度为$h^e$的单元，我们将使用以下形式：\n$$T^{(e)}(x)=N^{(e)}_1(x)T^{(e)}_1+N^{(e)}_2(x)T^{(e)}_2\\tag{2.12}$$\n\n式中的$(e)$表示的一个单元，\n$$N^{(e)}_1(x)=\\Big [1-\\frac{x}{h^{(e)}}\\Big ]\\tag{2.13}$$\n$$N^{(e)}_2(x)=\\frac{x}{h^{(e)}\\tag{2.14}}$$\n如图2所示，有\n$$\\frac{dT^{(e)}}{dx}=\\Bigg[\n    \\begin{matrix}\n    \\frac{dN^{(e)}_1}{dx}&\\frac{dN^{(e)}_2}{dx}\\Bigg]\n    \\end{matrix}\n    \\Bigg[\n        \\begin{matrix}T^{(e)}_1\\\\T^{(e)}_2\n        \\end{matrix}\\Bigg]=\\Bigg[\n    \\begin{matrix}\n    -\\frac{1}{h^{(e)}}&\\frac{1}{h^{(e)}}\\Bigg]\n    \\end{matrix}\n    \\Bigg[\n        \\begin{matrix}T^{(e)}_1\\\\T^{(e)}_2\n        \\end{matrix}\\Bigg]\\tag{2.15}\n    $$\n<br><center>![图2 局部节点编号，温度表示，局部形状函数](_posts/有限元理论推导（二）/2.png)</center>\n我们同样需要局部节点和全局节点直接按的关系，如图3所示。但是在我们深入求解之前，我们将介绍一些高阶单元。\n<br><center>![图3 局部节点与全局节点间的映射关系](_posts/有限元理论推导（二）/3.png)</center>\n\n### 2.2.2 二次单元\n从插值函数的角度来看，我们可以从图4中看到，如果我们在每个单元上使用抛物线弧而不是线性段，效果会更好。在每个单元上，函数$T^{(e)}(x)$将是二次的，因此形式为：\n\n$$\nT^{(e)}(x) = \\alpha_1 + \\alpha_2x + \\alpha_3x^2\\tag{2.16}\n$$\n\n其中我们需要三个参数来确定；因此，仅仅要求在单元的两端插值是不够的。为了得到第三个关系，我们在单元的中间引入了另一个节点，并且我们还要求在该节点处插值函数。图5为局部坐标系下的结果。\n<br>函数$N^{(e)}_i$由下式得到\n$$T^{(e)}(0)=\\alpha^{(e)}_1=T^{(e)}_1\\tag{2.17a}$$\n$$T^{(e)}(h/2)=\\alpha_1+\\frac{\\alpha_2h^{(e)}}{2}+\\frac{\\alpha_3(h^{(e)})^2}{4}=T^{(e)}_2\\tag{2.17b}$$\n$$T^{(e)}(h)=\\alpha_1+\\alpha_2 h^{(e)}+\\alpha_3(h^{(e)})^2=T^{(e)}_3\\tag{2.17c}$$\n\n<br><center>![图4 分段线性插值与分段二次插值](_posts/有限元理论推导（二）/4.png)</center>\n<br><center>![图5 局部坐标系下的二次单元和形状函数](_posts/有限元理论推导（二）/5.png)</center>\n\n上述方程组的解由下式给出：\n$$\\alpha_1=T^{(e)}_1$$\n$$\n\\alpha_2=\\frac{1}{h^{(e)}}(-3T_1-2T_2+T_3)\n$$\n$$\n\\alpha_3=\\frac{2}{(h^{(e)})^2}(T_1-2T_2+T_3)\n$$\n将上式代入方程（2.16）中并整理，得到\n$$T^{(e)}=\\Bigg [1-3\\Bigg[\\frac{x}{h^{(e)}}\\Bigg]+2\\Bigg[\\frac{x}{h^{(e)}}\\Bigg]^2\\Bigg]T_1+4\\Bigg[\\frac{x}{h^{(e)}}\\Bigg]\\Bigg[1-\\frac{x}{h^{(e)}}\\Bigg]T_2\\\\+\\Bigg[\\frac{x}{h^{(e)}}\\Bigg]\\Bigg[2\\Bigg[\\frac{x}{h^{(e)}}\\Bigg]-1\\Bigg]T_3$$\n因此，形状函数为\n$$N^{(e)}_1(x)=1-3\\Bigg[\\frac{x}{h^{(e)}}\\Bigg]+2\\Bigg[\\frac{x}{h^{(e)}}\\Bigg]^2\\tag{2.18a}$$\n$$N^{(e)}_2(x)=4\\Bigg[\\frac{x}{h^{(e)}}\\Bigg]\\Bigg[1-\\frac{x}{h^{(e)}}\\Bigg]\\tag{2.18b}$$\n$$N^{(e)}_3(x)=\\frac{x}{h^{(e)}}\\Bigg[2\\frac{x}{h^{(e)}}-1\\Bigg]\\tag{2.18c}$$\n在这种情况下，用于将全局系统与局部参考系统关联的表示法在图2.6中展示，该图展示了一个由$n$个二次元素组成的网格。这里的第 $i$个元素被定义为\n$$e_i=\\{x|x_{2i-1}\\le x\\le x_{2i+1}\\}\\tag{2.19}$$\n<br><center>![图6 二次单元局部和全局坐标系之间的关系，三角形表示每个单元的内部节点](_posts/有限元理论推导（二）/6.png)</center>\n元素的长度由下式给出：\n$$h^{(i)}=x_{2i+1}-x_{2i-1}\\tag{2.20}$$\n函数$T^{(e)}(x)$的导数分别由方程（2.20）和方程（2.21）得到:\n$$T^{(e)}(x)=N^{(e)}_1T^{(e)}_1+N^{(e)}_2(x)T^{(e)}_2+N^{(e)}_3(x)T^{(e)}_3=\\\\\n\\Bigg[\n    \\begin{matrix}\n    N^{(e)}_1&N^{(e)}_2&N^{(e)}_3\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n        \\begin{matrix}\n            T^{(e)}_1\\\\\n            T^{(e)}_2\\\\\n            T^{(e)}_3\n        \\end{matrix}\n        \\Bigg]\\tag{2.21}\n$$\n$$\\frac{dT^{(e)}}{dx}=\\Bigg[\n    \\begin{matrix}\n    \\frac{1}{h^{(e)}}\\Bigg (4\\frac{x}{h^{(e)}}-3\\Bigg)&\n    \\frac{4}{h^{(e)}}\\Bigg (1-2\\frac{x}{h^{(e)}}\\Bigg)&\n    \\frac{1}{h^{(e)}}\\Bigg (4\\frac{x}{h^{(e)}}-1\\Bigg) \\Bigg]\n    \\end{matrix}\\\\\n        \\Bigg[\n        \\begin{matrix}\n            T^{(e)}_1\\\\\n            T^{(e)}_2\\\\\n            T^{(e)}_3\n        \\end{matrix}\n        \\Bigg]\\tag{2.22}\n$$\n需要注意的是每个单元不再是常数。\n\n### 2.2.3 三次单元\n我们可以继续提高近似的阶数。在这种情况下，我们使用三次函数，即\n$$\nT^{(e)}(x)=\\alpha_1+\\alpha_2x+\\alpha_3x^2+\\alpha_4x^3\\tag{2.23}\n$$\n在这种情况下，每个单元需要四个节点。对于最佳的近似属性，这些节点最好位于$x = 0, h^{(e)}/3, 2h^{(e)}/3, h^{(e)}$的位置。按照与线性和二次单元相同的过程，我们可以找到形状函数。\n$$N^{(e)}_1(x)=\\Bigg(1-\\frac{3x}{h^{(e)}}\\Bigg)\\Bigg(1-\\frac{3x}{2h^{(e)}}\\Bigg)\\Bigg(1-\\frac{x}{h^{(e)}}\\Bigg)\\tag{2.24a}$$\n$$N^{(e)}_2(x)=\\frac{9x}{h^{(e)}}\\Bigg(1-\\frac{3x}{2h^{(e)}}\\Bigg)\\Bigg(1-\\frac{x}{h^{(e)}}\\Bigg)\\tag{2.24b}$$\n$$N^{(e)}_3(x)=-\\frac{9x}{2h^{(e)}}\\Bigg(1-\\frac{3x}{h^{(e)}}\\Bigg)\\Bigg(1-\\frac{x}{h^{(e)}}\\Bigg)\\tag{2.24c}$$\n$$\nN^{(e)}_4(x)=\\frac{x}{h^{(e)}}\\Bigg(1-\\frac{3x}{h^{(e)}}\\Bigg)\\Bigg(1-\\frac{3x}{2h^{(e)}}\\Bigg)\\tag{2.24c}\n$$\n关于之前定义的单元，需要注意以下几点：\n1. 尽管二次和三次单元的导数是独立变量$x$的函数，但它们在单元间的节点处不会连续。这里使用的插值类型被称为拉格朗日插值，它只保证函数在元素边界处的连续性。这些元素被称为$C^0$元素，其中零上标意味着只有零阶导数是连续的，即函数本身。\n2. 显然，甚至更高阶的元素，例如四次、五次等，可以通过在元素中添加更多的插值节点来构建。实际上，我们可以构建在节点处也插值导数的单元。最简单的这类元素是立方埃尔米特元素，它在位于单元两端的节点处插值函数及其一阶导数。这些是$C^1$元素，因为现在一阶导数将在整个域中连续。甚至可以构建更复杂的单元。事实上，几乎没有限制可以达到的复杂度或预设单元行为的程度。然而，必须牢记，单元越复杂，计算成本就越高。实际上，在多维计算中，立方单元已经变得过于昂贵，很少用于流体和热传递应用。\n3. 之前考虑的元素插值函数具有如下性质：$N_i(x)e_j = \\delta_{ij}$，其中 $\\delta_{ij}$ 是克罗内克 delta 函数，即，\n   $$\n   \\delta_{ij} = \\begin{cases} \n     1, & \\text{if } i = j \\\\\n     0, & \\text{if } i \\neq j \n   \\end{cases}\\tag{2.25}\n   $$\n\n   并且 $x_j$ 是节点坐标。\n4. 所选择的插值类型定义了依赖变量在元素内可以采取的“形状”，即线性的、二次等。因此，使用“形状函数”这个名称来表示定义元素的函数 $N_i$。还应注意，高阶函数总是精确地简化为低阶函数；即，二次元素精确地表示线性函数和常数函数，立方元素表示二次、线性和常数函数等。这一事实保证了如果使用高阶元素，可以获得更好的近似。\n\n## 2.3 稳态传导方程\n### 2.3.1 Galerkin表述\n考虑在区间$0 \\leq x \\leq L$上找到温度分布$T = T(x)$的问题，它满足具有内部热源的稳态1-D方程：\n\n$$\n-K\\frac{d^2T}{dx^2}=Q, 0<x<L\\tag{2.26}\n$$\n边界条件为\n$$-K\\frac{dT}{dx}=q,x=0\\tag{2.27}\n$$\n$$T=T_L,x=L\\tag{2.28}$$\n方程（2.26）的加权残差表达式为\n$$\\int^L_0W\\Bigg(-K\\frac{d^2T}{dx^2}-Q\\Bigg)dx=0\\tag{2.29}\n$$\n进一步写成\n$$\n\\int^L_0\\Bigg(-K\\frac{d^T}{dx^2}-Q\\Bigg)dx=\\sum^2_{i=1}\\int^{x_{i+1}}_{x_i}W\\Bigg(-K\\frac{d^T}{dx^2}-Q\\Bigg)dx\\\\\n=\\int^{L/2}_0W\\Bigg(-K\\frac{d^T}{dx^2}-Q\\Bigg)dx+\\\\\n\\int^{L}_{L/2}W\\Bigg(-K\\frac{d^T}{dx^2}-Q\\Bigg)dx=0\\tag{2.30}\n$$\n全局函数$T(x)$由下式近似得到：\n$$\nT(x)=\\sum^3_{j=1}N_j(x)T_j\\\\=N_1(x)T_1+N_2(x)T_2+N_3(x)T_3 \\tag{2.31}$$\n式中形状函数$N_i(x),i=1,2,3$，由方程（2.2）至（2.4）给出，其中$n=2$，$x_1=0,x_2=L/2,x_3=L$。\n令$W_i(x)=N_i(x)$，式（2.20）的伽辽金形式变为\n$$\n\\int^{L/2}_0\\Bigg[K\\frac{dN_i}{dx}\\Bigg(\\sum^3_{j=1}\\frac{dN_j}{dx}T_j\\Bigg)-N_iQ\\Bigg]dx+\\Bigg[N_i\\Bigg(-K\\frac{dT}{dx}\\Bigg)\\Bigg]^{L/2}_0\\\\\n+\\int^L_{L/2}\\Bigg[K\\frac{dN_i}{dx}\\Bigg(\\sum^3_{j=1}\\frac{dN_j}{dx}T_j\\Bigg)-N_iQ\\Bigg]dx+\\Bigg[N_i\\Bigg(-K\\frac{dT}{dx}\\Bigg)\\Bigg]^L_{L/2}\\\\\n=0,i=1,2,3\\tag{2.32}\n$$\n方程（2.32）的前两项分别对应单元$e_1$和$e_2$。现在一次考虑其中的每一个，使用局部单元坐标。对于元素$e_1$，$N_3(x) = 0$；因此，我们可以将来自$i = 1, 2$的方程以矩阵形式写成\n$$\n\\int^{L/2}_0\\Bigg\\{K\\Bigg(\\Bigg[\n    \\begin{matrix}\n        \\frac{dN^{(e_1)}_1}{dx}\\\\\n        \\frac{dN^{(e_2)}_2}{dx}\\\\\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n        \\begin{matrix}\n        \\frac{dN^{(e_1)}_1}{dx}&\n        \\frac{dN^{(e_2)}_2}{dx}\n        \\end{matrix}\n        \\Bigg]\\Bigg)\n        \\Bigg[\n        \\begin{matrix}\n            T^{(e_1)}_1\\\\\n            T^{(e_2)}_2\n        \\end{matrix}\n         \\Bigg]-\n         \\Bigg[\n        \\begin{matrix}\n            N^{(e_1)}_1\\\\\n            N^{(e_2)}_2\n        \\end{matrix}\n         \\Bigg]Q\n        \\Bigg\\}dx\\\\\n        +\\Bigg\\{\n        \\Bigg[\n            \\begin{matrix}\n            N^{(e_1)}_1\\\\\n            N^{(e_2)}_2\n            \\end{matrix}\n        \\Bigg]\\Bigg(-K\\frac{dT}{dx}\\Bigg)\\Bigg\\}^{L/2}_0=\n        \\Bigg[\n        \\begin{matrix}\n            0\\\\0\n        \\end{matrix}\n        \\Bigg]\\tag{2.33}\n$$\n根据方程（2.14）和（2.15）以及$h^{(e_1)}=L/2$，方程（2.33）变为\n$$\n\\int^{L/2}_0\\Bigg\\{K\\Bigg[\n    \\begin{matrix}\n    \\frac{4}{L^2}&-\\frac{4}{L^2}\\\\\n    -\\frac{4}{L^2}&\\frac{4}{L^2}\\\\\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    T^{(e_1)}_1\\\\\n    T^{(e_1)}_2\n    \\end{matrix}    \n    \\Bigg]-\n    \\Bigg[\n    \\begin{matrix}\n    1-\\frac{2x}{L}\\\\\n    \\frac{2x}{L}    \n    \\end{matrix}\n    \\Bigg]Q\n    \\Bigg\\}dx\\\\\n    +\\Bigg[\n    \\begin{matrix}\n    -\\Bigg(\n    -K\\frac{dT}{dx}    \n    \\Bigg)_{x=0}\\\\\n    \\Bigg(\n    -K\\frac{dT}{dx}    \n    \\Bigg)_{x=L/2}\n    \\end{matrix}\n    \\Bigg]=\\Bigg[\n        \\begin{matrix}\n         0\\\\0   \n        \\end{matrix}\n        \\Bigg]\n$$\n应用方程（2.27）并积分，我们最终获得单元$e_1$的表达式\n$$\n\\frac{2K}{L}\\Bigg[\n    \\begin{matrix}\n    1&-1\\\\\n    -1&1\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    T_1\\\\T_2\n    \\end{matrix}    \n    \\Bigg]=\\frac{QL}{4}\\Bigg[\n    \\begin{matrix}\n    1\\\\1    \n    \\end{matrix}\n    \\Bigg]+\n    \\Bigg[\n    \\begin{matrix}\n    q\\\\\n    -\\Bigg(-K\\frac{dT}{dx}\\Bigg)_{x=L/2}\n    \\end{matrix}\n    \\Bigg]\n$$\n在这里，我们使用了单元$e_1$中自由度的全局编号，即$T_1$和 $T_2$。以类似的方式，我们得到单元$e_2$的方程为:\n$$\n\\frac{2K}{L}\\Bigg[\n    \\begin{matrix}\n    1&-1\\\\\n    -1&1\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    T_2\\\\T_3\n    \\end{matrix}    \n    \\Bigg]=\\frac{QL}{4}\\Bigg[\n    \\begin{matrix}\n    1\\\\1    \n    \\end{matrix}\n    \\Bigg]+\n    \\Bigg[\n    \\begin{matrix}\n    \\Bigg(-K\\frac{dT}{dx}\\Bigg)_{x=L/2}\\\\\n    -\\Bigg(-K\\frac{dT}{dx}\\Bigg)_{x=L}\n    \\end{matrix}\n    \\Bigg]\n$$\n现在必须将每个元素的积分加在一起，以得到完整的方程组。这个操作被称为“组装”方程，并产生最终的全局$3\\times 3$矩阵。这是使用方程和自由度的全局编号来完成的；这个过程如图7所示，并且等同于将不同单元中由同一权重函数产生的方程贡献相加。在这种情况下，对应于 $W_2=N_2$的每个单元的贡献如图7所示相加。在实践中，这是通过使用单元矩阵中的全局自由度编号，并将它们的贡献添加到全局矩阵中的相应位置来实现的。例如，在单元$2$中，位置$(1,2)$对应于全局系统中的$(2,3)$，并将条目 $-2k/L$ 添加到全局矩阵的位置$(2,3)$.在图7中可以清楚地看到，涉及内部节点通量的表达式相互抵消；实际上，这正好说明通量在内部必须是连续的。因此，在构建单元方程时，这些项通常被省略。然而，如果省略了这些项，元素方程中的等式就不成立。尽管如此，习惯上会将涉及通量的项，例如方程（3.35），设置为等于零。因此，全局方程组变为：\n$$\n\\frac{2K}{L}\n\\Bigg[\n\\begin{matrix}\n1&-1&0\\\\\n-1&2&-1\\\\\n0&-1&1\n\\end{matrix}\n\\Bigg]\\Bigg[\n    \\begin{matrix}\n    T_1\\\\\n    T_2\\\\\n    T_3    \n    \\end{matrix}\n    \\Bigg]=\n    \\frac{QL}{4}\n    \\Bigg[\n    \\begin{matrix}\n     1\\\\2\\\\1   \n    \\end{matrix}\n    \\Bigg]\n    +\\\\\n        \\Bigg[\n    \\begin{matrix}\n     q\\\\\n     0\\\\\n     -\\Bigg(-K\\frac{dT}{dx}\\Bigg)_{x=L} \n    \\end{matrix}\n    \\Bigg]\\tag{2.36}\n$$\n在最后一个等式中，在$x=L$处出现了热通量。然而，如将其认为$T_3$处的公式，因为$T_3$已知且$x=L$处的热通量在前两个方程中没有出现，这个方程可以忽略并且重写为\n$$\n\\frac{2K}{L}\\Bigg[\n    \\begin{matrix}\n    1&-1\\\\\n    -1&2\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    T_1\\\\\n    T_2\n    \\end{matrix}\n    \\Bigg]=\n    \\frac{QL}{4}\n    \\Bigg[\n    \\begin{matrix}\n    1\\\\\n    2\n    \\end{matrix}\n    \\Bigg]+\n    \\Bigg[\n    \\begin{matrix}\n    q\\\\\n    0\n    \\end{matrix}\n    \\Bigg]+\\\\\n    \\frac{2K}{L}T_L\n    \\Bigg[\n    \\begin{matrix}\n    0\\\\\n    1\n    \\end{matrix}\n    \\Bigg]\\tag{2.37}\n$$\n上式可以求解出$T_1$和$T_2$。一旦求解完成后，第三个等式可用于计算右侧边界处的热传导，即\n$$\n\\Bigg(-K\\frac{dT}{dx}\\Bigg)_{x=L}=\\frac{2K}{L}(T_2-T_L)+\\frac{QL}{4}\\tag{2.38}$$\n<br><center>![图7 二元系统方程组装](_posts/有限元理论推导（二）/7.png)</center>\n现在使用二次单元离散化区域，来近似方程（2.26）至（2.28）。我们现在使用相同数量的节点，但是是更高阶的近似。伽辽金描述与之前相似。由于局部和全局坐标系对于一个单元都是相同的，我们可以写成\n$$\\int^L_0\\Bigg[K\\frac{dN_i}{dx}\\Bigg(\\sum^3_{j=1}\\frac{dN_j}{dx}T_j\\Bigg)-N_iQ\\Bigg]dx+\\Bigg[N_i\\Bigg(-K\\frac{dT}{dx}\\Bigg)\\Bigg]^L_0=0\\tag{2.39}$$\n根据方程（3.18）、（3.21）和（3.23），得到矩阵形式：\n$$\n\\int^L_0\\Bigg\\{K\\Bigg(\\Bigg[\n    \\begin{matrix}\n    \\frac{1}{L}(\\frac{4x}{L}-3)\\\\\n    \\frac{4}{L}(1-\\frac{2x}{L})\\\\\n    \\frac{1}{L}(\\frac{4x}{L}-1) \n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    \\frac{1}{L}(\\frac{4x}{L}-3)&\n    \\frac{4}{L}(1-\\frac{2x}{L})&\n    \\frac{1}{L}(\\frac{4x}{L}-1)\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg)\n    \\Bigg[\n    \\begin{matrix}\n    T_1\\\\T_2\\\\T3\n    \\end{matrix}\n    \\Bigg]\\\\\n    -\\Bigg[\n    \\begin{matrix}\n    1-\\frac{3x}{L}+2(\\frac{x}{L})^2\\\\\n    \\frac{4x}{L}(1-\\frac{x}{L})\\\\\n    \\frac{x}{L}(\\frac{2x}{L}-1)\n    \\end{matrix}\n    \\Bigg]Q\n    \\Bigg\\}dx=\n    \\Bigg[\n    \\begin{matrix}\n    q\\\\0\\\\\n    -(-K\\frac{dT}{dx})_{x=L}\n    \\end{matrix}\n    \\Bigg]\\tag{2.40}\n$$\n积分后得到\n$$\n\\frac{K}{6L}\\Bigg[\n\\begin{matrix}\n14&-16&2\\\\\n-16&32&-16\\\\\n2&-16&14\n\\end{matrix}    \n\\Bigg]\n\\Bigg[\n\\begin{matrix}\nT_1\\\\T_2\\\\T_3\n\\end{matrix}\n\\Bigg]=\\frac{QL}{6}\n\\Bigg[\n\\begin{matrix}\n1\\\\4\\\\1\n\\end{matrix}\n\\Bigg]+\n\\Bigg[\n\\begin{matrix}\nq\\\\0\\\\-(-K\\frac{dT}{dx})_{x=L}\n\\end{matrix}\n\\Bigg]\\tag{2.41}$$\n最后一个方程考虑$T_3=T_L$后消掉，最后的系统变为\n$$\n\\frac{K}{6L}\\Bigg[\n\\begin{matrix}\n14&-16\\\\\n-16&32\\\\\n\\end{matrix}    \n\\Bigg]\n\\Bigg[\n\\begin{matrix}\nT_1\\\\T_2\n\\end{matrix}\n\\Bigg]=\\frac{QL}{6}\n\\Bigg[\n\\begin{matrix}\n1\\\\4\n\\end{matrix}\n\\Bigg]+\n\\Bigg[\n\\begin{matrix}\nq\\\\0\n\\end{matrix}\n\\Bigg]+\\frac{K}{6L}T_L\\Bigg[\n    \\begin{matrix}\n    -2\\\\16    \n    \\end{matrix}\\Bigg]\\tag{2.42}$$\n右侧边界的热通量由下式给出\n$$\n\\Bigg(-K\\frac{dT}{dx}\\Bigg)_{x=L}=\\frac{K}{6L}(16T_2-2T_1-14T_L)+\\frac{QL}{6}\\tag{2.43}$$\n### 2.3.2 可变传导和边界对流\n我们现在将有限元算法扩展到解决薄杆上的稳态温度分布问题，该杆的左端受到对流热负荷，$x = 0$，右端保持固定温度$T_L$，$x = L$。我们还假设没有内部热源（即$Q = 0$），但杆的热导率随$x$变化（由于材料组成的变化或杆的横截面变化），即$K = K(x)$。描述这个问题的微分方程是：\n\n$$\n\\frac{d}{dx}\\left(K(x) \\frac{dT}{dx}\\right) = 0\\tag{2.44}\n$$\n其中\n$$-K\\frac{dT}{dx}+h(T-T_\\infty)=0,x=0\\\\\nT=T_L,x=L\\tag{2.45}$$\n式中，$T_\\infty$为外部参考温度，$h$为热传递参数\n加权残差形式为\n$$\n\\int^L_0K(x)\\frac{dW}{dx}\\frac{dT}{dx}dx-\\Bigg[W\\Bigg(-K(x)\\frac{dT}{dx}\\Bigg)\\Bigg]_{x=L}=0\\tag{2.47}\n$$\n从现在开始，我们将省略对应于规定温度的边界上的通量项，在这种情况下是$x = L$，这是有限元建模中的惯例。如果我们还用方程（2.45）替换左端边界的通量，我们有\n$$\n\\int^L_0K(x)\\frac{dW}{dx}\\frac{dT}{dx}dx+Wh(T-T_\\infty)|_{x=0}=0\\tag{2.48}$$\n请注意，从方程（2.44）到（2.48）的过程中并没有丢失任何信息；然而，我们不是寻求方程（2.48）的解析解，而是寻求利用我们定义的形状函数和网格离散化的可计算有限元近似。 与之前一样，我们在$0\\le x\\le L$上定义一个网格，并通过以下方式近似$T(x)$：\n$$\nT(x)=\\sum^{n+1}_{i=1}N_i(x)T_i\\tag{2.49}$$\n式中$n$为网格中的单元个数。如果$N_i,i=1,\\cdots,n+1$为线性形状函数，则方程（2.48）的伽辽金形式为\n$$\n\\int^L_0K(x)\\frac{dN_i}{dx}\\Bigg(\\sum^{n+1}_{j=1}\\frac{dN_j}{dx}T_j\\Bigg)dx+N_ih(T-T_\\infty)|_{x=0}=0\\tag{2.50}$$\n不代入$K(x)$的特定形式，我们将使用与$T(x)$选择的相同形状函数（在这种情况下是线性的）来插值$K(x)$的节点值，即在每个单元上$K^{(e)}(x) = N^{(e)}_1(x)K^{(e)}_1 +N^{(e)}_2(x)K^{(e)}_2$。第一个单元（包括对流边界条件）的方程为：\n$$\n\\int^{x_2}_{x_1}\\Bigg[\n    \\begin{matrix}\n    N^{(e_1)}_1&N^{(e_2)}_2\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    K^{(e_1)}_1\\\\ K^{(e_2)}_2\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg(\n    \\Bigg[\n     \\begin{matrix}\n    \\frac{dN^{(e_1)}_1}{dx}\\\\\n    \\frac{dN^{(e_2)}_2}{dx}\n     \\end{matrix}   \n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    \\frac{dN^{(e_1)}_1}{dx}&\n    \\frac{dN^{(e_2)}_2}{dx}\n    \\end{matrix}\n    \\Bigg]\n    \\Bigg)dx\n    \\Bigg[\n    \\begin{matrix}\n    T^{(e_1)}_1\\\\\n    T^{(e_2)}_2\n    \\end{matrix}    \n    \\Bigg]\\\\\n    +\\Bigg[\\begin{matrix}\n    h&0\\\\\n    0&0\n    \\end{matrix}\n    \\Bigg]\\Bigg[\n    \\begin{matrix}\n    T^{(e_1)}_1\\\\\n    T^{(e_2)}_2\n    \\end{matrix}    \n    \\Bigg]=hT_\\infty\\Bigg[\n    \\begin{matrix}\n    1\\\\0    \n    \\end{matrix}\n    \\Bigg]\n$$\n考虑到在守恒边界项有$N^{(e_1)}_1(0)=1$和$N^{(e_1)}_2(0)=1$，即\n$$\nN_ih(T-T_\\infty)|_{x=0}=\\Bigg[\n    \\begin{matrix}\n    N_1\\\\N_2\n    \\end{matrix}\n    \\Bigg]h\\Bigg[\n    \\begin{matrix}\n    N_1&N_2   \n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    T_1-T_\\infty\\\\\n    T_2-T_\\infty\n    \\end{matrix}\n    \\Bigg]\\Bigg|_{x=0}\\\\\n    =\\Bigg(\n    \\Bigg[\n    \\begin{matrix}\n    N_1\\\\N_2 \n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    N_1&N_2    \n    \\end{matrix}\n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    T_1\\\\T_2\n    \\end{matrix}\n    \\Bigg]-\n    \\Bigg[\n    \\begin{matrix}\n    N_1\\\\N_2    \n    \\end{matrix}\n    \\Bigg]hT_\\infty\n    \\Bigg)\\Bigg|_{x=0}\\\\\n    =h\\Bigg[\n    \\begin{matrix}\n    1&0\\\\\n    0&0    \n    \\end{matrix}    \n    \\Bigg]\n    \\Bigg[\n    \\begin{matrix}\n    T_1\\\\T_2    \n    \\end{matrix}\n    \\Bigg]-hT_\\infty\\Bigg[\n    \\begin{matrix}\n    1\\\\0\n    \\end{matrix}    \n    \\Bigg]\n$$\n积分后得到\n$$\n\\frac{1}{2h^{(e_1)}}(K^{(e_1)}_1+K^{(e_1)}_2)\\Bigg[\n\\begin{matrix}\n1&-1\\\\\n-1&1    \n\\end{matrix}    \n\\Bigg]\n\\Bigg[\n\\begin{matrix}\nT^{(e_1)}_1\\\\\nT^{(e_1)}_2\n\\end{matrix}\n\\Bigg]+\n\\Bigg[\n\\begin{matrix}\nh&0\\\\\n0&0    \n\\end{matrix}\n\\Bigg]\n\\Bigg[\n\\begin{matrix}\nT^{(e_1)}_1\\\\\nT^{(e_1)}_2    \n\\end{matrix}\n\\Bigg]=hT_\\infty\\Bigg[\n\\begin{matrix}\n1\\\\0    \n\\end{matrix}    \n\\Bigg]\\tag{2.51}\n$$\n对所有单元，$e_i\\neq e_1$，方程为\n$$\n\\frac{1}{2h^{(e_1)}}(K^{(e_1)}_1+K^{(e_1)}_2)=\\Bigg[\n\\begin{matrix}\n1&-1\\\\\n-1&1    \n\\end{matrix}    \n\\Bigg]\n\\Bigg[\n\\begin{matrix}\nT^{(e_1)}_1\\\\T^{(e_1)}_2\n\\end{matrix}\n\\Bigg]=\\Bigg[\n\\begin{matrix}\n0\\\\0\n\\end{matrix}    \n\\Bigg]\\tag{2.52}\n$$\n如果区间$0\\le x\\le L$被离散为2个相等长度的单元，组装后的方程为\n$$\n\\frac{1}{L}\\Bigg[\n\\begin{matrix}\nK_1+K_2+Lh&-(K_1+K_2)&0\\\\\n-(K_1+K_2)&K_1+2K_2+K_3&-(K_2+K_3)\\\\\n0&-(K_2+K_3)&K_2+K_3\n\\end{matrix}    \n\\Bigg]\n\\Bigg[\n\\begin{matrix}\nT_1\\\\T_2\\\\T_3\n\\end{matrix}    \n\\Bigg]=\\Bigg[\n\\begin{matrix}\nhT_\\infty\\\\\n0\\\\0\n\\end{matrix}    \n\\Bigg]\\tag{2.53}$$\n如果在$x = L$处给出了形式如方程（2.45）的对流边界条件，那么最后一个单元的方程可以从加权残差形式（2.47）得出。然后，忽略第二个单元中的第一个边界项，并在第二个项中替换对流条件，得到单元方程为\n$$\n\\frac{1}{2h^{(e_n)}}(K^{(e_n)}_1+K^{(e_n)}_2)\\Bigg[\n\\begin{matrix}\n1&-1\\\\\n-1&1    \n\\end{matrix}    \n\\Bigg]\n\\Bigg[\n\\begin{matrix}\nT^{(e_n)}_1\\\\T^{(e_n)}_2\n\\end{matrix}\n\\Bigg]+\n\\Bigg[\n\\begin{matrix}\n0&0\\\\\n0&-h    \n\\end{matrix}    \n\\Bigg]\n\\Bigg[\n\\begin{matrix}\nT^{(e_n)}_1\\\\T^{(e_n)}_2\n\\end{matrix}\n\\Bigg]\n=\\Bigg[\n\\begin{matrix}\n0\\\\0\n\\end{matrix}    \n\\Bigg]\\tag{2.54}\n$$\n对流边界条件可以应用于网格的任一或两个边界；方程（2.51）、（2.52）和（2.54）对于任何网格（均匀或非均匀）、变导热性和任一或两个边界处的对流都是有效的。在定义网格的节点坐标和各种问题数据 $h$、$T_\\infty$ 和 $K(x)$ 后，可以获得特定解。\n## 2.4 轴对称热传导\n许多涉及流体在管道中流动的稳态热传导问题都涉及到轴对称形式。为了开发相应的有限元算法，方程（2.44）至（2.46）的轴对称形式是：\n\n$$\n\\frac{1}{r}\\frac{d}{dr}\\left(r\\frac{dT}{dr}\\right) = Q,r_1<r<r_2\\tag{2.58}\n$$\n\n加上边界条件：\n\n$$\n-\\frac{dT}{dr} + h(T - T_{\\infty}) = 0 \\quad \\text{at } r = r_1\\tag{2.59}\n$$\n\n和\n\n$$\nT = T_L \\quad \\text{at } r = r_2\\tag{2.60}\n$$\n\n其中 $r_1$ 和 $r_2$ 分别是内半径和外半径，$T_{\\infty}$ 是外部参考温度，$h$ 是对流换热系数。\n方程（2.58）的加权残差形式为\n$$\n\\int^{2\\pi}_0\\int^{r_2}_{r_1}W\\Bigg[\n    -\\frac{d}{dr}\\Bigg(rK\\frac{dT}{dr}\\Bigg)\\Bigg]drd\\theta=0\\tag{2.61}$$\n分别对$r$和$\\theta$积分，我们得到\n$$\n2\\pi\\int^{r_2}_{r_1}rK\\frac{dW}{dr}\\frac{dT}{dr}dr+(2\\pi rWh(T-T_\\infty))_{r=r_1}=0\\tag{2.62}$$\n比较方程（2.62）与方程（2.47），轴对称情况下的显著区别在于$K(x)$被替换为$rK$。物理上，平滑变化的热导率并不是特别重要，而突然变化（恒定）的热导率则很重要，例如，材料的变化或包裹在管道上的热绝缘可能会产生显著的变化。因此，可以通过将$K$移到积分之外来简化方程(2.62)，假设积分将根据$K$的阶跃变化分段计算。单元$e_1=\\{r|r^{(e_1)}_1\\le r\\le r^{(e_1)}_2\\}$轴对称的伽辽金积分可以写成\n$$\n\\Bigg\\{\n\\frac{K^{(e_i)}}{2h^{(e_i)}}    (r^{(e_1)}_1+r^{(e_1)}_2)\n\\Bigg[\n\\begin{matrix}\n1&-1\\\\\n-1&1\n\\end{matrix}\n\\Bigg]\n+r_1h\\Bigg[\n\\begin{matrix}\n1&0\\\\\n0&0 \n\\end{matrix}    \n\\Bigg]\\delta_{e_1}\n-r_2h\\Bigg[\n\\begin{matrix}\n0&0\\\\\n0&1 \n\\end{matrix}    \n\\Bigg]\\delta_{e_n}\n\\Bigg[\n\\begin{matrix}\nT^{(e_i)}_1\\\\\nT^{(e_i)}_2\n\\end{matrix}\n\\Bigg]\n\\Bigg\\}\\\\\n=\\Bigg\\{\nr_1hT_\\infty\\Bigg[\n\\begin{matrix}\n1\\\\0\n\\end{matrix}\n\\Bigg]\\delta_{e_1}-\nr_2hT_\\infty\\Bigg[\n\\begin{matrix}\n0\\\\1\n\\end{matrix}\n\\Bigg]\\delta_{e_n}\n\\Bigg\\}\\tag{2.63}\n$$\n式中，$\\delta_{e_i}$为Kronecker delata函数，即在单元$e_i$处$\\delta_{e_i}=1$，而对所有$j\\neq i$的单元$e_j$处为0；\n$n$表示单元编号，所以$e_n$为右侧边界的单元。\n## 2.5 自然坐标系统\n我们现在引入一个自然坐标系统来指定单元上的局部操作。我们将单元定义在区间 $-1 \\leq \\xi \\leq 1$，并与变换形式相结合：\n$$\nx=\\frac{1}{2}(1-\\xi)x_i+\\frac{1}{2}(1+\\xi)x_{i+1}\\tag{2.64}\n$$\n这个形式将区间$-1\\le\\xi\\le 1$映射到了单元的区间$x_i\\le x\\le x_{i+1}$上。线性单元形状函数如图8所示，并由下式给出：\n$$\nN_1(\\xi)=\\frac{1}{2}(1-\\xi)\\\\\nN_2(\\xi)=\\frac{1}{2}(1+\\xi) \\tag{2.65}\n$$\n<br><center>![图8 自然局部坐标系下线性形状函数](_posts/有限元理论推导（二）/8.png)</center>\n使用这种类型的坐标系统，如果注意到，可以通过变换（2.64）来分析形状函数及其导数的乘积：\n$$\n\\frac{d}{dx}=\\frac{d}{d\\xi}\\frac{d\\xi}{dx}=\\frac{2}{h^{(e_i)}}\\frac{d}{d\\xi}\\tag{2.66}$$\n和\n$$\ndx=\\frac{h^{(e_i)}}{2}d\\xi\\tag{2.67}\n$$\n注意到方程（2.64）可以写成\n$$\nx=N_1(\\xi)x_1+N_2(\\xi)x_2\n$$\n因此，变换可以严格地用形状函数和节点坐标来表示。形状函数的积分和导数具有以下形式：\n$$\n\\int^{x_{i+1}}_{x_i}N_j(x)N_k(x)dx=\\frac{h{(e_1)}}{2}\\int^1_{-1}N_j(\\xi)N_k(\\xi)d\\xi\\tag{2.68}\n$$\n$$\n\\int^{x_{i+1}}_{x_i}\\frac{dN_j}{dx}\\frac{dN_k}{dx}dx=\\frac{2}{h^{(e_i)}}\\int^1_{-1}\\frac{dN_j}{d\\xi}\\frac{dN_k}{d\\xi}d\\xi\\tag{2.69}\n$$\n$$\n\\int^{x_{i+1}}_{x_i}\\frac{dN_j}{dx}N_k(x)dx=\\int^1_{-1}N_k(\\xi)d\\xi\\tag{2.70}\n$$\n此外，方程(2.68)中的函数乘积可以很容易地用指数形式进行解析评估。这个程序在结构力学中是众所周知的，并且可以很容易地用于任何一维元素网格。积分关系表达为\n$$\n\\int^1_{-1}(N_1(\\xi))^a(N_2(\\xi))^bd\\xi=2\\frac{a!b!}{(1+a+b)!}\\tag{2.71}\n$$\n式中$a$和$b$为无符号整数。我们可以对更高阶的单元使用自然坐标系，特别是二次单元。自然坐标系下的形状函数为\n$$\nN_1(\\xi)=\\frac{1}{2}\\xi(\\xi-1)\\tag{2.74}\n$$\n$$\nN_2(\\xi)=1-\\xi^2\\tag{2.75}\n$$\n$$\nN_3(\\xi)=\\frac{1}{2}\\xi(\\xi+1)\\tag{2.76}\n$$\n在区间$x_{2i-1}\\le x\\le x_{2i+1}的单元$e_i$映射到区间$-1\\le\\xi\\le 1$的转化式为\n$$\nx=N_1(\\xi)x_{2i-1}+N_2(\\xi)x_{2i}+N_3(\\xi)x_{2i+1}\\tag{2.77}\n$$\n注意，当 $x_{2i} =(x_{2i-1} + x_{2i+1})/2$ 时，这个表达式简化为方程(2.64)。这种表示法比2.2中的表示法更具一般性，因为它允许内部节点位于元素中点以外的位置。\n从$N_i(x)$ 对$x$的导数可以通过以下方式获得：\n$$\n\\frac{dN_i}{d\\xi}=\\frac{dN_i}{dx}\\frac{dx}{d\\xi}\n$$\n$$\n\\frac{dN_i}{dx}=\\frac{1}{dx/d\\xi}\\frac{dN_i}{d\\xi}\\tag{2.78}\n$$\n于是有\n$$\n\\frac{dx}{d\\xi}=\\frac{dN_1}{d\\xi}x_{2i-1}+\\frac{dN_2}{d\\xi}x_{2i}+\\frac{dN_3}{d\\xi}x_{2i+1}\\tag{2.79}\n$$\n在（2.79）中使用了元素坐标的全局值$x^{(e_i)}_1$，$x^{(e_i)}_2$，$x^{(e_i)}_3$。$dx/d\\xi$为坐标变换的***雅可比行列式***，通常表示为$\\boldsymbol{J}$。\n\n## 2.6 随时间变化的扩散方程\n我们现在将有限元算法扩展到非稳态热扩散方程。假设 $Q = 0$，即没有源或汇。热传导的控制方程通常写为：\n\n$$\n\\frac{\\partial T}{\\partial t}-\\alpha\\frac{\\partial^2T}{\\partial x^2}=0\\tag{2.90}\n$$\n\n其中$\\partial T/\\partial t$表示温度随时间的变化率，$\\alpha = k/(\\rho c_p)$ 是热扩散率，$\\rho$ 是密度，$c_p$ 是材料的比热容。\n<br>现在$T = T(x,t)$是关于空间（$x$）和时间（$t$）的函数。因此，除了边界条件外，我们还需要指定一个初始条件，也就是说，我们必须满足边界条件以及方程（2.90）：\n$$\n-K\\frac{\\partial T}{\\partial x}+h(T-T_\\infty)\\Bigg|_{0,t}=0\\tag{2.91}\n$$\n$$\nT(L,t)=T_L\\tag{2.92}\n$$\n初始条件为\n$$\nT(x,0)=T_0(X)\\tag{2.93}\n$$\n方程（2.91）和（2.92）也假设了广义记号 $T_L(t) = T(t)$ 和 $T_{\\infty}(t) = T(t)$；$T_0(t)$ 是杆在时间$t = 0$时的温度分布。\n在恒温假设下$T_L$ 和$T_{\\infty}$，方程（2.90）及其相关的边界条件和初始条件的解析解可以轻松获得。\n\n### 2.6.1 空间离散\n方程（2.90）的权重残差形式为\n$$\n\\int W(x)\\Bigg[\\frac{\\partial T}{\\partial t}-\\alpha\\frac{\\partial^2T}{\\partial x^2}\\Bigg]dx=0\\tag{2.94}\n$$\n需要注意的是，权重函数仅是关于$x$的函数，即严格与空间离散化相关。此外，我们将假设温度可以写成分离变量的形式，并在空间上使用与之前相同的形状函数进行近似，即：\n$$\nT(x,t)=\\sum^{n+1}_{i=1}N_i(x)T_i(t)\\tag{2.95}\n$$\n式中$n$为网格节点数。\n时间依赖性不影响形状函数，并保持在依赖变量中。温度的时间导数由以下公式给出：\n$$\\frac{\\partial T}{\\partial x}=\\sum^{n+1}_{i=1}\\frac{\\partial N_i}{\\partial x}T_i\\equiv\\Bigg[\\frac{\\partial N_i}{\\partial x}\\Bigg][T_i]\\tag{2.96}$$\n这与之前相同。我们将使用偏导数符号来表示形状函数和离散变量的导数，即使这些函数只依赖于一个独立变量，且这些导数是总导数。我们还有：\n$$\n\\frac{\\partial T}{\\partial t}=\\sum^{n+1}_{i=1}N_i\\frac{\\partial T}{\\partial t}\\equiv\\sum^{n+1}_{i=1}N_i\\dot{T}_i\\equiv[N_i][\\dot{T}_i]\\tag{2.97}\n$$\n其中$\\dot{T}_i$表示对时间的导数，$[N]$和$[T]$分别为行矩阵和列矩阵。\n方程（2.94）的伽辽金形式为\n$$\n\\int^L_0\\Bigg\\{N_i\\Bigg(\\sum^{n+1}_{j=1}N_j\\dot{T}_j\\Bigg)+\\alpha\\frac{\\partial N_i}{\\partial x}\\Bigg(\\sum^{n+1}_{j=1}\\frac{\\partial N_j}{\\partial x}T_j\\Bigg)\\Bigg\\}dx+\\Bigg[N_i\\Bigg(-\\alpha\\frac{\\partial T}{\\partial x}\\Bigg)\\Bigg]^{x=L}_{x=0}=0\\tag{2.98}$$\n在这个阶段，我们将引入标记符号来替换表达式中的求和符号:\n$$\n\\sum^{n+1}_{i=1}a_ib_i\\equiv a_ib_i\\tag{2.99}$$\n于是方程（2.98）使用上述标记写为更简便的形式：\n$$\n\\Bigg[\\int^L_0N_iN_jdx\\Bigg]\\dot{T}_j+\\Bigg[\\alpha\\int^L_0\\frac{\\partial N_i}{\\partial x}\\frac{\\partial N_j}{\\partial x}dx\\Bigg]T_j+\\Bigg[N_i\\Bigg(-\\alpha\\frac{\\partial T}{\\partial x}\\Bigg)\\Bigg]^{x=L}_{x=0}=0\\tag{2.100}\n$$\n其中第一个积分中的时间项重写为\n$$\n\\int^L_0N_i\\frac{\\partial T}{\\partial t}dx=\\Bigg(\\int^L_0N_iN_jdx\\Bigg)\\dot{T}_j\n$$\n方程中$\\dot{T}_j$一般称作质量矩阵，这是由于$N_iN_j$表示包含节点$i$并与所有连接节点$j$相关联的单元的面积。方程（2.100）给出的形式被称为半离散伽辽金形式，因为只对空间变量进行了离散化，关于时间导数项还没有任何说明。\n### 2.6.2 时间离散化\n在有限元方法中，有多种处理方程（2.100）的时间积分的方式。在这里，我们将介绍所谓的$\\theta$-方法，它导致最常用的时间积分算法。在$\\theta$-方法中，时间导数被简单差分所代替：\n$$\n\\frac{\\partial T}{\\partial t}=\\frac{T^{n+1}-T^n}{\\Delta t}\\tag{2.102}\n$$\n式中$T^n=T(x,t_n)$表示时间$t=t_n$时的变量值，$\\Delta t$为时间增量，$t_{n+1}=t_n+\\Delta t$。一般地，我们假设$T(x,t_n)$已知，并用作初始条件，用于推进解到时间水平$t_{n+1}$。我们现在引入一个弛豫参数$q$，并将解$T$写成以下形式：\n$$\nT=\\theta T^{n+1}+(1-\\theta)T^{n},t_n\\le t\\le t_{n+1}\\tag{2.102}\n$$\n参数$\\theta$通常指定在$0\\le\\theta\\le 1$的范围内，用于控制算法的准确性和稳定性。最常用的$\\theta$值是$0$、$1/2$和$1$。众所周知，当$\\theta<1/2$时，仅达到条件稳定性。\n$\\theta=1$为向后隐式方法，\n$\\theta=1/2$给出一个第二阶中心隐式方法，\n$\\theta=0$给出显式欧拉前向方案。\n将方程（2.101）和（2.102）代入方程（2.100），我们得到：\n$$\n\\Bigg(\\int^L_0N_iN_jdx\\Bigg)\\Bigg(\\frac{T^{n+1}-T^n_j}{\\Delta t}\\Bigg)+\\Bigg(\\alpha\\int^L_0\\frac{\\partial N_i}{\\partial x}\\frac{\\partial N_j}{\\partial x}dx\\Bigg)(\\theta T^{n+1}_j+(1-\\theta)T^n_j)\\\\\n+\\Bigg[N_i\\Bigg(-\\alpha\\Bigg\\{\\theta\\frac{\\partial T^{n+1}}{\\partial x}+(1-\\theta)\\frac{\\partial T^n}{\\partial x}\\Bigg\\}\\Bigg)\\Bigg]^{x=L}_{x=0}=0\n$$\n可重写为\n$$\n\\Bigg[\\int^L_0N_iN_jdx+\\alpha\\Delta t\\theta\\int^L_0\\frac{\\partial N_i}{\\partial x}\\frac{\\partial N_j}{\\partial x}dx\\Bigg]T^{n+1}_j+\\theta\\Delta t\\Bigg[N_i\\Bigg(-\\alpha\\frac{\\partial T^n}{\\partial x}\\Bigg)\\Bigg]^{x=L}_{x=0}\\\\\n=\\Bigg[\\int^L_0N_iN_jdx+\\alpha\\Delta t(\\theta-1)\\int^L_0\\frac{\\partial N_i}{\\partial x}\\frac{\\partial N_j}{\\partial x}dx\\Bigg]T^n_j+(\\theta-1)\\Delta t\\Bigg[N_i\\Bigg(-\\alpha\\frac{\\partial T^n}{\\partial x}\\Bigg)\\Bigg]^{x=L}_{x=0}\\\\\n\\tag{2.103}\n$$\n在这个表达式中，可以看到当$\\theta=0$时。等式左侧只有质量矩阵项。这个项导致相邻元素之间的“连接度”比传统有限差分方法中的更高。\n\n## 2.7 矩阵公式化\n有限元方法基于在特定节点位置对因变量的数值近似；产生一组必须直接或迭代求解的同时线性代数方程。对于之前讨论的示例问题，未知数的数量，因此方程的数量很少，可以通过手工推导的方式轻松解决。然而，对于大多数问题，节点的数量，由此产生的未知数的数量，将会大大增加，需要计算机来执行求解运算。\n<br>我们之前使用的系数矩阵是在每个单元上分析得到，并组装成全局数组。换句话说，从每个单元获得的局部系数矩阵被“塞进”一个大矩阵中，该矩阵包含所有局部单元的贡献。这个过程可以通过计算机程序中的“do循环”轻松执行。一旦我们为一个单元制定了有限元算法，该方法的通用性允许我们对所有单元使用相同的程序。因此，我们可以构建基于局部单元矩阵评估的全局矩阵，然后以我们希望的方式求解矩阵方程。\n<br>定义矩阵符号运算会很方便。时间导数项的局部质量矩阵为\n$$M^{(e_k)}=[m^{e_k}_{ij}]=\\int_{0}^{h^{(e_k)}}\n[\n    \\begin{matrix}\n     N_i^{(e_k)}&N_j^{(e_k)}]\n\\end{matrix}dx\\tag{2.108}\n    \n$$\n其中 $h$ 是单元的长度，$N_i^{(e_k)}$ 和 $N_j^{(e_k)}$ 是单元的形状函数。\n\n全局矩阵 $\\boldsymbol{M}$ 表示为\n$$ \\boldsymbol{M}=[m_{ij}] = \\sum_{k=1}^{n} M^{(e_k)}=\\sum^n_{k=1}\\int_{0}^{h^{(e_k)}}\n[\n    \\begin{matrix}\n     N_i^{(e_k)}&N_j^{(e_k)}]\n\\end{matrix}dx\\tag{2.109} $$\n其中$n$是单元的数量。求和意味着每个元素矩阵是一个$(n+1)\\times (n+1)$ 矩阵，通过在不包含单元中节点的所有位置填充零来从单元矩阵扩展而来。\n<br>例如，考虑使用三个等长的线性元素离散区间$0 \\leq x \\leq 1$。使用方程（2.108）评估局部质量矩阵得到\n$$\\boldsymbol{M}^{(e_1)}=\\boldsymbol{M}^{(e_2)}=\\boldsymbol{M}^{(e_3)}=\\frac{1}{18} \\Bigg[\\begin{matrix}\n2&1\\\\\n1&2\n\\end{matrix}\\Bigg]$$\n\n组装后的矩阵 $\\boldsymbol{M}$为\n$$ M = \\begin{bmatrix} \n1/9 & 1/18 & 0 & 0\\\\ \n1/18 & 1/9 & 0 & 0  \\\\ \n0 & 0 & 0 & 0  \\\\ \n0 & 0 & 0 & 0  \\\\ \n\\end{bmatrix}+\\begin{bmatrix} \n0 & 0 & 0 & 0\\\\ \n0 & 1/9 & 1/18 & 0  \\\\ \n0 & 1/18 & 1/9 & 0  \\\\ \n0 & 0 & 0 & 0  \\\\ \n\\end{bmatrix}\\\\\n+\\begin{bmatrix} \n0 & 0 & 0 & 0\\\\ \n0 & 0 & 0 & 0  \\\\ \n0 & 0 & 1/9 & 1/18  \\\\ \n0 & 0 & 1/18 & 1/9  \\\\ \n\\end{bmatrix}\n=\\begin{bmatrix} \n1/9 & 1/18 & 0 & 0\\\\ \n1/18 & 2/9 & 1/18 & 0  \\\\ \n0 & 1/18 & 2/9 & 1/18  \\\\ \n0 & 0 & 1/18 & 1/9  \\\\ \n\\end{bmatrix}$$\n\n由于矩阵$\\boldsymbol{M}$ 中许多条目是零，因此它被称为***稀疏矩阵***。实际上，除非节点编号方式非常人为，否则所有从有限元离散化中产生的全局矩阵都是稀疏的。在一维线性和二次单元的特殊情况中，如果节点按顺序编号，矩阵将分别为三对角线和五对角线矩阵。\n<br>类似地，扩散项表示为\n$$\\boldsymbol{K}=\\sum^n_{k=1}\\boldsymbol{K}^{(e_k)}= \\sum_{k=1}^{n} \\int_{0}^{h^{(e_k)}}K^{(e_k)} \\Bigg[\\frac{dN_i^{(e_k)}}{dx} \\frac{dN_j^{(e_k)}}{dx}\\Bigg]dx\\tag{2.110} $$\n通常将矩阵$\\boldsymbol{K}$ 称为“刚度”或“传导”矩阵。\n整体上包含包括如源项的已知函数的贡献被定义为列向量，长度等于节点数，我们将其表示为\n$$ \\boldsymbol{F}=\\sum^n_{k=1}F^{(e_k)}=\\sum_{k=1}^{n}\\int_{0}^{h^{(e_k)}}[N_i^{(e_k)}]^TQ^{(e_k)}dx\\tag{2.111} $$\n其中$Q^{(e_k)}$表示$Q$在单元$e_k$上的限制，\n$[N_i^{(e_k)}]^T$是一个列矩阵\n如果依赖变量出现，则从热通量边界条件的贡献被添加到刚度矩阵 (2.110)，或者如果只涉及已知数据，则添加到向量$\\boldsymbol{F}$。通常将向量$\\boldsymbol{F}$称为载荷向量。然后，时间依赖的传导方程可以表示为\n$$\\boldsymbol{M\\dot{T}}+\\boldsymbol{KT}=\\boldsymbol{F}\\tag{2.112}$$\n其中 $\\boldsymbol{T}$是节点未知数的向量，$\\boldsymbol{\\dot{T}}$是关于时间导数的向量。\n<br>使用方程(2.101)和(2.102)替换方程(2.112)中的时间导数$\\boldsymbol{\\dot{T}}$，得到完全离散化的线性代数方程组为\n$$(\\boldsymbol{M}+\\theta\\Delta t\\boldsymbol{K})\\boldsymbol{T}^{n+1}=(\\boldsymbol{M}+(\\theta-1)\\Delta t\\boldsymbol{K})\\boldsymbol{T}^n+\\Delta t(\\theta\\boldsymbol{F}^{n+1}+(1-\\theta)\\boldsymbol{F}^n)\\tag{2.113}$$\n方程（2.113）为使用$\\theta$-方法求解含时间参量的传导方程算法。这种表示的优点是，现在我们可以使用矩阵理论以符号方式处理方程（2.113）。例如，如果 $(\\boldsymbol{M}+\\theta\\Delta t\\boldsymbol{K})$ 是一个可逆的非奇异矩阵，解$\\boldsymbol{T}^{n+1}$由下式给出：\n$$ \\boldsymbol{T}^{n+1}=(\\boldsymbol{M}+\\theta\\Delta t\\boldsymbol{K})^{-1}[(\\boldsymbol{M}+(\\theta-1)\\Delta t\\boldsymbol{K})+\\Delta t(\\theta\\boldsymbol{F}^{n+1}+(1-\\theta)\\boldsymbol{F}^n)]\\tag{3.115}$$\n在我们继续本书的其余部分时，我们将使用矩阵符号来简化我们的代数表达式。然而，我们也将说明构成计算机程序基础的矩阵的局部单元评估。\n\n## 2.8 求解方法\n在所有前面的部分中，将有限元方法应用于控制方程导致一组线性方程，包括与原始微分方程的各种项相关的矩阵，如方程（2.113）。我们可以进一步将这个方程表示为\n$$A\\phi=\\boldsymbol{B}\\tag{2.115}$$\n其中\n$$A =\\boldsymbol{M}+\\theta\\Delta t\\boldsymbol{K}\\tag{2.116}$$\n$$\\phi=\\boldsymbol{T}^{n+1}\\tag{2.117}$$\n$$\\boldsymbol{B}=(\\boldsymbol{M}+(\\theta-1)\\Delta t\\boldsymbol{K})\\boldsymbol{T}^n+\\Delta t(\\theta\\boldsymbol{F}^{n+1}+(1-\\theta)\\boldsymbol{F}^n)\\tag{2.118}$$\n所有出现在$\\boldsymbol{A}$和$\\boldsymbol{B}$中的项都是已知的，所以我们可以很容易地求解方程（2.115）中的未知数$\\phi$。然而，如前所述，求解大型方程组可能会变得非常耗时和昂贵，即使是使用大型计算机，更不用说使用个人计算机了。这种情况引入了解决大型线性方程组的特殊方法的需要，如方程（2.115）。处理这些方法的数学学科称为数值线性代数，具有一些背景的读者将通过高斯消元法、雅可比和高斯-塞德尔迭代、LU分解、逐步超松弛、共轭梯度等方法的名字来识别这些方法。数值线性代数中矩阵求解技术的发展成为了一个领域；我们的目的只是让读者熟悉基本思想，以便理解它们如何实现到计算机程序中。方程（2.115）的解是通过在方程两端乘以\n$\\boldsymbol{A}^{-1}$（注意$\\boldsymbol{A}^{-1}\\boldsymbol{A}\\equiv\\boldsymbol{I}$，$\\boldsymbol{I}$为单位矩阵）。因此，\n$$\\phi=\\boldsymbol{A}^{-1}\\boldsymbol{B}\\tag{2.119}$$\n如果$\\boldsymbol{A}$很大，这很难执行。幸运的是，存在有效的数值方法，允许我们在不需要找到$\\boldsymbol{A}^{-1}$的情况下得到$\\phi$。矩阵代数，包括找到矩阵的逆，在附录A中有更详细的讨论。解决线性代数方程组系统基本上有两种方法。解决方程（2.119）形式的一些最简单和最有效的方案是迭代方法。迭代方法是一个近似方法，即它使用初始猜测来开始求解过程，然后迭代以获得解的估计值。方程（2.119）包括$n$个方程，无论是线性还是非线性，都有$n$个未知数$\\phi$。矩阵$\\boldsymbol{A}$包含$n\\times n$个系数（尽管在实践中许多的系数都是零）。如果我们假设对角线系数$a_{ii}(i = 1,\\cdots,n)$不为零（这在有限元方法中是有效的），则可以相对容易地重新排列方程，从而得到一种求解未知值$\\phi$的方法。考虑\n$$\\phi^{(k+1)}_1 = -\\frac{1}{a_{11}}(a_{12}\\phi^{(k)}_2+a_{13}\\phi^{(k)}_3+\\cdots+a_{1n}\\phi^{(k)}_{n+1})+\\frac{b_1}{a_{11}}\\\\\n\\phi^{(k+1)}_2 = -\\frac{1}{a_{22}}(a_{21}\\phi^{(k)}_1+a_{23}\\phi^{(k)}_3+\\cdots+a_{2n}\\phi^{(k)}_{n+1})+\\frac{b_2}{a_{22}}\\\\\n\\vdots\\\\\n\\phi^{(k+1)}_{n+1} = -\\frac{1}{a_{nn}}(a_{n1}\\phi^{(k)}_1+a_{n2}\\phi^{(k)}_2+\\cdots+a_{n,n-1}\\phi^{(k)}_{n})+\\frac{b_n}{a_{nn}}\\tag{2.120}\n$$\n其中$k$表示迭代索引。\n<br>要求解方程（2.113），我们先做一个初始猜测，$\\phi^{(0)}$，然后将猜测值（例如，$\\phi^{(0)}_i=0$）代入方程（2.120）的右侧。这产生了一个新的$\\phi$d的估计值 $\\phi^{(1)}$，希望它比之前的估计值$\\phi^{(0)}$更好。我们继续这个过程，获得$\\phi^{(2)},\\phi^{(3)},\\cdots,\\phi^{(k)}$，直到解收敛。通常通过计算$(k)$次迭代的相对或绝对误差来确定收敛性，即\n$$ \\max\\frac{|\\phi^{(k+1)}_i-\\phi^{(k)}_i|}{|\\phi^{(k+1)}_i|}<\\epsilon\\tag{2.121}$$\n或\n$$ \\max |\\phi^{(k+1)}_i-\\phi^{(k)}_i|<\\epsilon\\tag{2.122}$$\n这种类型的迭代被称为***线性迭代***。虽然简单，但该方法可能需要很多次迭代才能在大型问题中实现收敛。为了在小计算机上实现有效的解决方案，需要加速收敛。\n<br>矩阵$\\boldsymbol{A}$还必须满足某些条件才能保证收敛。然而，这不是本文讨论这些条件的范围，除了它们最简单的形式。除了一些评论，我们将满足于声明对于这里考虑的有限元离散化类型，这些条件确实得到满足，并且通常会发生收敛。\n<br>高斯-塞德尔迭代方法特别适合解决大型方程组。该方法简单易实现，计算效率高，并且比直接消元方法更不容易受到舍入误差的影响（由迭代次数决定）。然而，必须对这类方案提出警告——存在高斯-塞德尔方法不收敛的情况。这些情况通常发生在矩阵病态时。\n<br>由于矩阵求逆计算缓慢且可能需要过多的存储空间，使用矩阵乘法和标量分流来获得方程（2.1119）的解。尽管在迭代方法中有些多余，但这样的操作非常快速。高斯-塞德尔迭代算法可以表示为\n$$ \\phi_i^{(k+1)} = \\frac{1}{a_{ii}} \\left( b_i - \\sum_{j=1}^{i-1} a_{ij} \\phi_j^{(k+1)} - \\sum_{j=i+1}^{n} a_{ij} \\phi_j^{(k)} \\right) $$\n注意，最更新的 $\\phi_i^{(k+1)}$ 用于迭代过程中，这使得方案更快、更有效。一个收敛的条件要求矩阵是**对角占优**的，即\n$$|a_{ii}| > \\sum_{j=1,j\\neq i}^{n} |a_{ij}|,i=1,2,\\cdots,n\\tag{2.124}$$\n其中严格不等式必须至少对一个方程成立。如果这个条件是满足的，无论初始向量的值如何，解都将收敛（这就是为什么许多人使用零作为初始估计的原因）。我们可以将方程（2.123） 用上三角和下三角矩阵表示为，\n\n$$(\\boldsymbol{L}+\\boldsymbol{D})\\phi=-\\boldsymbol{U}\\phi+b\\tag{2.125}$$\n其中$\\boldsymbol{L}$，$\\boldsymbol{D}$，和$\\boldsymbol{U}$是定义如下的方阵：\n$$\\boldsymbol{L}=[\\ell_{ij}]=\n    \\begin{cases}\n     a_ij,i>j\\\\\n     0,i\\le j\n    \\end{cases}\\tag{2.126}\n$$\n为下三角矩阵；\n$$\\boldsymbol{D}=[d_{ij}]=\n    \\begin{cases}\n     a_ij,i=j\\\\\n     0,i\\neq j\n    \\end{cases}\\tag{2.127}\n$$\n为对角矩阵\n$$\\boldsymbol{U}=[u_{ij}]=\n    \\begin{cases}\n     a_ij,i<j\\\\\n     0,i\\ge j\n    \\end{cases}\\tag{2.126}\n$$\n为上三角矩阵。于是方程（2.123）的矩阵形式为\n$$ \\phi^{(k+1)}=-\\boldsymbol{D}^{-1}\\boldsymbol{L}\\phi^{(k+1)}-\\boldsymbol{D}^{-1}\\boldsymbol{U}\\phi^{(k)}+\\boldsymbol{D}^{-1}\\boldsymbol{b}\\tag{2.129} $$\n或者，乘以$\\boldsymbol{D}$并求解$\\phi^{(k+1)}$，\n$$ \\phi^{(k+1)}=(\\boldsymbol{D}+\\boldsymbol{L})^{-1}(\\boldsymbol{b}-\\boldsymbol{U}\\phi^{(k)})\\tag{2.130} $$\n迭代收敛到解的速度取决于方程（2.124）中对角项的大小。更强烈的对角占优矩阵将产生更快的收敛。显然，当初始（猜测）值接近真实解时，只需要几次迭代。超松弛（SOR）是高斯-塞德尔方法的一个流行变体，在其中使用加速参数或松弛因子来加速收敛（Chapra 和 Canale, 2015; Conte, 1965）。算法的实际实现通过计算机代码相当容易。形成上三角和下三角矩阵可以通过简单的“do loop”指令方便地处理。在剑桥大学出版社出版的“Numerical Recipes”系列书籍中可以找到使用这些过程的 FORTRAN，C/C++，和 JAVA 的源代码列表。在 Kattan (2007) 中可以找到 MATLAB 示例（称为“for loops”）；这些同样在 Portela 和 Charaf (2002) 和 Aziz (2006) 中讨论了 MAPLE 程序。当网格结构使得矩阵的带状特性不被改变时（例如，在一维问题中，或在定义在矩形或平行六面体域上的二维和三维问题中），迭代方法具有优势，并且只需要几个解，如线性稳态问题的情况。如果计算网格是不规则的，或者如果必须一遍又一遍地解决相同的线性方程组（如在线性时间依赖问题或在优化问题中，同一系统必须为许多不同的右手边解），迭代方法就变得不那么有吸引力了。迭代方法的主要优势在于只需要在内存中存储矩阵的非零元素。与直接消元过程相比，这可能意味着巨大的存储节省。缺点是每次方程（2.115）中的$\\boldsymbol{B}$ 改变时，都必须重复算法过程。\n<br>解决线性代数方程组的第二种方法包括直接求解系统；这些方法基于高斯消除。将系数矩阵$\\boldsymbol{A}$分解为一个下三角矩阵和一个上三角矩阵的乘积，称为***LU***分解，是迭代方法的有吸引力的替代方法。可以利用系数矩阵$\\boldsymbol{A}$的稀疏性质来编写耗时的消除步骤。使用$LU$分解的消除程序是直接求解方程组的最流行技术（Atkinson, 1985; Chapra和Canale, 2015）。$LU$分解方法是高斯消除的一个变体；通过“分解”$\\boldsymbol{A}$矩阵为$\\boldsymbol{L}$和$\\boldsymbol{U}$矩阵的乘积，可以得到比原始消除更有效的算法。让我们将方程（2.115）重写为\n$$\\boldsymbol{A}\\phi-\\boldsymbol{B}=0\\tag{2.131}$$\n我们可以将方程（2.131）表示为上三角系统的形式，即\n$$\\boldsymbol{U}\\phi-\\boldsymbol{D}=0\\tag{2.132}$$\n如果我们现在用下三角矩阵$\\boldsymbol{L}$预乘方程(2.132)，并要求得到的系统等于由方程(2.131)给出的原始方程组，我们有\n$$\\boldsymbol{L}(\\boldsymbol{U}\\phi-\\boldsymbol{D})=\\boldsymbol{A}\\phi-\\boldsymbol{B}\\tag{2.133}$$\n方程（2.133）有效的条件是\n$$\\boldsymbol{LU}=\\boldsymbol{A}\\tag{2.134}$$\n和\n$$\\boldsymbol{LD}=\\boldsymbol{B}\\tag{2.135}$$\n方程（2.134）被称为$\\boldsymbol{A}$的LU分解。这种类型的分解可以对任何非奇异矩阵$\\boldsymbol{A}$进行；然而，执行它没有唯一的方法。在文献中可以找到获得这种分解的不同方法。例如，如果将矩阵$\\boldsymbol{L}$的所有对角元素都设置为1，则会得到一个唯一的分解，这被称为Doolittle约简。如果矩阵$\\boldsymbol{A}$是对称的，可以以这样的方式进行分解\n$$\\boldsymbol{L}=\\boldsymbol{U}^T\\tag{2.136}$$\n这被称为Cholesky方法或平方根方法，因为需要平方根操作来获得对角元素$u_{ii}$（这将在稍后更详细地讨论）。\n<br>方程（2.135）被称为前向替代，并产生向量$\\boldsymbol{D}$。为了获得解向量$\\phi$，还需要一个步骤。一旦得到$\\boldsymbol{D}$，这可以通过求解方程（2.132）来提供，涉及与直接高斯消除中所需的相同类型的后向替代。大多数数值方法教科书都提供了使用这些过程的算法和子程序列表（见Atkinson, 1985; Chapra和Canale, 2015; Conte, 1965; Isaacson和Keller, 1966）。\n<br>带状矩阵是一个方阵，除了主对角线中心的一条带外，所有系数都等于零。这样的系统经常出现在微分方程的求解中，特别是在工程和科学问题中。在有限元中，这样的矩阵出现在线性结构和扩散相关问题中。当方程是非线性的，如在流体流动中，可能会出现非对称带状矩阵。在这本入门书中，我们只关心线性对称带状系统方程；然而，与FORTRAN软件一起提供的矩阵求解器将处理对称或非对称带状矩阵。像高斯消除或LU分解这样的直接方法在求解问题的几何形状不规则且方法产生带状结构较差的矩阵时，比迭代方法具有更大的优势。当同一个系统必须为许多不同的右手边求解时，它们也更方便，因为只需要进行一次分解。通过可以非常高效地执行的简单前向和后向替代来获得解。对于单个解的强带状系统方程，这样的方法通常效率较低，并且在存储和操作零值时引入了不必要的计算工作。\n<br>对于具有半带宽或半带宽$\\ell$的对称矩阵，如图9所示，只需要在任何时候在核心中存储顺序为$\\ell$的上三角部分。总的存储需求是$\\ell[n-(\\ell - 1)/2]$。\n<br><center>![图9 带状$n \\times n$矩阵$\\boldsymbol{A}$，半带宽$\\ell$和带宽$2\\ell - 1$，指示$\\boldsymbol{A}$中存储需求的对称](_posts/有限元理论推导（二）/9.png)</center>\n\n矩阵的带状特性以及因此的$\\ell$的大小，直接取决于节点编号的方式。带宽由所有元素中节点编号的最大差异决定。当我们进一步研究2-D和3-D元素时，这一事实将变得非常重要，并指出了“优化”节点编号的必要性。对于1-D元素，如果节点编号是顺序的，对于线性元素，得到的全局矩阵是三对角的，对于二次单元，是五对角的。然而，读者应该注意，如果节点编号不是顺序的，情况将不是如此。解决对称方程组的最有效和最受欢迎的方法之一是前面提到的Cholesky分解。该算法依赖于这样一个事实：对称矩阵可以分解为彼此转置的上三角和下三角矩阵，即\n$$\\boldsymbol{A}=\\boldsymbol{U}^T\\boldsymbol{U}\\tag{2.137}$$\n其中上标$T$表示转置（见附录A）。方程(2.137)可以写成递归形式为\n$$l_{ii} = \\sqrt{q_{ii} - \\sum_{k=1}^{i-1} l_{ik}^2}, \\quad i = 1, 2, \\ldots, n \\tag{2.138}$$\n和\n$$l_{ij} = \\frac{1}{u_{jj}} (a_{ij} - \\sum_{k=1}^{j-1} l_{ik} u_{jk}), j < i \\tag{2.139}$$\n前提是矩阵A是正定的。这个过程显著加快了LU分解步骤。然后可以执行前向和后向替代以得到解向量。在这种方法中，不需要进行枢轴操作以避免除以零。矩阵A的正定性保证了对于所有$i$值，$u_{ii} > 0$。\n\n## 2.9 小结\n本章的目的是阐述并确立将有限元方法应用于线性偏微分方程。从标量量的简单稳态扩散方程开始，有限元方法被应用于越来越复杂的方程，最终导致在工程和科学问题中常见的1-D时变扩散传输方程。在几个示例问题中推导和使用各种程度的形函数后，可以看到一个通用的有限元过程的演变，该过程可以应用于广泛的范围问题。在整个元素集或网格上的组装过程被展示出来，产生了一组全局矩阵。将全局矩阵系统简化为形式为$\\boldsymbol{A}\\phi =\\boldsymbol{B}$的简单线性（矩阵）方程，其中$\\phi$是包含未知变量的列向量，允许使用标准矩阵求解程序来求解$\\phi$。\n<br>大多数与有限元方法相关的基本“工具”可以从1-D问题的分析中发展出来。有限元方法的基本要素可以总结如下：\n\n1. 将加权残差法应用于控制方程和相关的边界条件。\n2. 选择合适的形函数和加权因子（线性、二次、三次等）。\n3. 对x轴进行离散化，并评估一般有限元域的Galerkin近似。\n4. 将元素贡献组装成一组全局矩阵。\n5. 将必要的边界条件数据（由已知值组成）应用于载荷向量。\n6. 使用合适的矩阵求解程序，从初始条件数据$\\phi_{t_0} = \\phi_0$开始，求解未知值的列向量$\\phi$，并通过时间$t^{n+1} = t^n + \\Delta t$进行迭代，直至收敛到稳态条件。\n\n在本文的这一点上，读者应该开始对有限元的数学基础有所了解，这些基础来自于这些简单的1-D示例。对于那些对有限元方法不太熟悉的人，我们建议在继续阅读剩余章节中的更高级材料之前，再次回顾一下最后这几节内容。在下一章中，我们将算法扩展到2-D问题。\n","categories":["FEM"]},{"title":"03-有限元理论推导（一）","url":"/2024/08/31/有限元理论推导（一）/","content":"\n# 1 加权残差法和伽辽金近似\n## 1.1 经典问题引入\n考虑确定一根长度为$L$、横截面恒定的细长均质金属杆用户的热传导情况。假定左端暴露在规定的热通量$q$下，右端保持恒温$T=T_L$，并且棒的长度方向被绝缘材料包围。利用傅立叶定律，我们可以写出控制整个棒的温度分布的导线方程，即：\n$$-K\\frac{d^2T}{dx^2}=Q，0<x<L\\tag{1.1}$$\n式中\n    <br>$x$为长度坐标\n    <br>$K$是材料的热传导率（假定为常数）\n    <br>$Q$是单位体积产生的热量\n与这一问题相应的边界条件是\n$$-K\\frac{dT}{dx}=q，x=0\\tag{1.2}$$\n$$T=T_L，x=L\\tag{1.3}$$\n当$q>0$时，热量流向$x=0$处的棒体，这就是公式(1.2)中负号的原因。\n\n假定$Q$是可积的，那么方程(1.1)的解与边界条件(1.2)和(1.3)可以通过直接积分求得：\n$$T(x)=T_L+\\frac{q}{K}(L-x)+\\frac{1}{K}\\int^L_x(\\int^x_0Q(z)dz)dy\\tag{1.4}$$\n如果Q为常数，公式(1.4)简化为：\n$$T(x)=T_L+\\frac{q}{K}(L-x)+\\frac{Q}{2K}(L^2-x^2)\\tag{1.5}$$\n\n## 1.2 弱形式描述\n通常有两种方法可以用有限元来计算和求解方程(1.1)的形式,这两种方法分别称为***Rayleigh-Ritz法***和***Galerkin法***。其他较少使用的方法是基于配位、常数加权和最小平方技术。所有这些程序都是加权残差法的子集。\n<br>无论我们使用哪种方法，第一步都是在$0\\le x \\le L$的区间内划分出网格，网格由一定数量的非重叠子区间组成，覆盖整个域，每个子区间称为一个 \"单元\"。我们用$e_k$表示每个单元，即$e_k=\\{x:x_k\\le x\\le x_{k+1}\\}$。每个子区间的端点$x_k$称为节点。\n温度分布由每个子区间的预设函数（用$\\phi_j(x)$表示）和相应的未知参数$a_j$计算得到。\n<br>因此，我们将一个单元定义为一个子区间$e_k$，以及一组预先确定的函数$\\varphi_j$和相同数量的参数$a_j$。这样如果参数$a_j$已知，则温度长边的近似值$T(x)$也是已知的。在整个域$0 \\le x \\le L$上，我们可以写出\n$$T(x)\\cong a_1\\phi_1(x)+a_2\\phi_2(x)+\\cdots+a_{n+1}\\phi_{n+1}(x)\\tag{1.6}\n$$\n函数$\\phi(x)$称作形状函数，我们将式（1.6）写成求和的形式，即\n$$T(x)=\\sum^{n+1}_{i=1}a_i\\phi_i(x)\\tag{1.7}\n$$\n<br>Ritz方法从数学的角度更满足预期，可以让我们形成更近似和收敛的数理论，但是在解决流体和热传导问题时，显得捉襟见肘。\n当使用 (1.7) 形式的表达式近似求解问题时,一般来说，我们无法得到这个偏微分方程的真实解。因此，如果我们将近似解替换为方程（1.1）的左侧，我们得到的将不是同一值，而是与误差相关的某个 \"残差 \"函数。我们将这个残余误差定义为\n$$R(T,x)\\equiv-K\\frac{d^2T}{dx^2}-Q\\tag{1.8}$$\n这里，$T$是真实解$T^*$的近似解，即$R(T^*,x)\\equiv 0$。然而，对任意的$T\\neq T^*$，我们不能令残差在每个$x$点都消失。加权残差法的原理是，我们可以将残差乘以加权函数，令加权残差的积分在每一点$x$上变为0，即\n$$\\int^L_0W(x)R(T,x)dx=0\\tag{1.9}$$\n式中$W(x)$为权重函数。通过选择不同的权重函数并将其替换到弱形式（1.9）中，我们可以生成一个关于未知参数$a_j$线性方程组，该方程组用于确定偏微分方程近似解$T$的形式，该近似解类似于方程（1.7）给出的有限级数。这种方法满足偏微分方程的“平均”或“积分”意义上的解。所选加权函数的类型取决于所选加权残差函数的类型。在Galerkin方法中，***权重与形状函数$\\phi(x)$相等，即$W_i(x)=\\phi_i(x)$***。\n<br>由于未知参数$a_j$的数量等于形状函数$\\phi_j$的数量，将生成一个方程数量与未知数数量相同的线性代数方程组。如果与偏微分方程相关的边界条件被正确设定和施加，那么这样的方程组的存在性和唯一性是保证的。这种方法在处理高维不规则几何和非线性问题中特别有优势，并且会自动生成一个方程数量与未知数数量相同的方程组。形状函数$\\phi(x)$的定义是有限元方法的关键所在。我们将几乎完全局限于使用简单（线性、二次和三次）插值；可以使用更高阶（和超越）近似，但这会带来额外的复杂性、计算时间和存储要求。使用基本线性、二次函数将证实有限元概念既优雅又极其强大。\n<br>我们现在希望使用我们提出的形状函数$\\phi(x)$作为权重函数$W(x)$来评估方程（1.9）的左端积分。因此，根据伽辽金方法得到：\n$$\\int^L_0\\phi(x)\\Big [-K\\frac{d^2T}{dx^2}-Q\\Big ]dx=0\\tag{1.10}$$\n我们需要找到方程（1.7）中函数$\\phi(x)$的适当形式。由于温度分布必须是$x$的连续函数，最简单的方法是在每个单元上使用分段多项式插值来近似它；特别是，分段线性近似提供了最简单的连续函数近似。不幸的是，这样的函数的一阶导数在单元节点处不连续，因此，在这些地方不存在二阶导数；此外，$T$的二阶导数在每个单元内部将消失。然而，要求二阶导数在所有地方都存在是过于严格的。这将阻止我们处理许多非常有兴趣的物理情况，例如在杆中存在一个单位强度的热源。在这种情况下，方程（1.1）变为\n$$-K\\frac{d^2T}{dx^2}=\\delta(x-x_s)\\tag{1.11}$$\n式中$\\delta$为Delta函数，在$x=x_s$外的各点为0，且在这一点处的值不确定。显然，在$x=x_s$处$T$的二阶导数不存在；方程（1.11）的解为：\n$$T(x)=\n\\begin{cases}\n-\\frac{1}{K}[q(x-L)+(x_s-L)]+T_L&0\\le x\\le x_s\\\\\n-\\frac{1}{K}q(x-L)(x-L)+T_L&x_s\\le x\\le L\n\\end{cases}\\tag{1.12}\n$$\n对方程（1.10）应用分部积分，得到\n$$\\int^L_0\\phi(x)\\left[-K\\frac{d^2 T}{dx^2}\\right]dx=\\int^L_0K\\frac{d\\phi}{dx}\\frac{dT}{dx}dx-K\\phi\\frac{dT}{dx}\\Big |^L_0\\tag{1.13}\n$$\n于是方程（1.10）可重写为\n$$\\int^L_0K\\frac{d\\phi}{dx}\\frac{dT}{dx}dx-\\int^L_0\\phi Qdx-K\\phi\\frac{dT}{dx}\\Big |^L_0=0\\tag{1.14}\n$$\n这仅仅是一个“弱”形式的问题，因为它只包含解$T(x)$的一阶导数，而方程（1.10）包含二阶导数。对函数$T(x)$的微分要求已经减弱，因此得名“弱形式”。请注意，到目前为止还没有进行任何近似，也就是说，在表述中没有丢失任何东西，另一方面，简单的分段线性近似现在变得合理。\n### 例 1\n> 考虑方程（1.1），使用边界条件$T(0)=T_0$以及对流边界条件$-K\\frac{dT}{dx}\\Big |_{x=L}=h(T-T_\\infty)$。式中$h$为热对流传导常数，$T_\\infty$为参考温度。\n加权残差公式（式（1.9）），对于这个问题保持不变，因为它由式（1.1）推导而来，与给定的边界条件无关。每当在边界点给出温度时，我们将在该点的热流项设为零，通过要求权重函数在该点消失来实现。在这种情况下，令$\\phi(0) = 0$，并使用其他边界项中的对流边界条件，方程（1.9）的形式变为\n$$\\int^L_0K\\frac{d\\phi}{dx}\\frac{dT}{dx}-\\int^L_0\\phi Qdx+\\phi(L)h(T_L-T_\\infty)=0\\tag{1.15}$$\n>即加权残差公式。稍后，我们将进一步要求加权函数在边界点处等于1。在这种情况下，$\\phi(L) = 1$，因此加权函数永远不会明确出现在边界项中。\n\n对每个权重函数$\\phi(x)$使用公式（1.7），可将方程（1.14）改写为\n$$\\sum^{n+1}_{j=1}K\\Big [\\int^L_0\\frac{d\\phi_i}{dx}\\frac{d\\phi_j}{dx}dx\\Big ]a_j-\\int^L_0\\phi_iQdx+\\phi_i\\Big[-K\\frac{dT}{dx}\\Big]\\Big |^{x=L}_{x=0}=0\\\\\ni=1,2,\\cdots,n+1\\tag{1.16}\n$$\n一旦形状函数$\\phi_i$选择好后，可以计算上式的积分。弱形式的伽辽金描述的优势在于，只有有限数量的参数$a_i$需要确定，$i = 1, \\cdots, n + 1$，这与方程(1.1)或(1.9)中需要确定$0 \\le x < L$区间内每个点的$T(x)$值不同。在这种情况下，考虑精确解被兼容的近似所取代。\n<br>为了说明上述过程，我们将区间$[0, 1]$分为两个等长的段，并在每个段的两个端点放置一个节点。因此，三个节点定义了整个杆的温度场，即节点$1$位于$x = x_1 = 0$，节点$2$位于$x = x_2 = L/2$，节点$3$位于$x = x_3 = L$，如图1所示。\n<br><center>![图1 区间离散化](./有限元理论推导（一）/1.png)</center>\n\n如果我们假设在节点之间的$\\phi(x)$在每个单元节点$e_i$之间的变化为线性，我们可以使用下述形式表示$T(x)$:\n$$T(x)=\\phi_{i}(x)a_i+\\phi_{i+1}a_{i+1},x_i\\le x\\le x_{i+1}\\tag{1.17}$$\n如确定形状函数$\\phi_i$，使得$\\phi(x_i)=0$且$\\phi(x_{i+1})=0$，相反地$\\phi_{i+1}(x_i)=0$，$\\phi_{i+1}(x_{i+1})=1$，函数$\\phi_i$由下式给出：\n$$\\phi_i(x)=\\frac{x_{i+1}-x}{x_{i+1}-x_i}\\tag{1.18a}$$\n$$\\phi_{i+1}(x)=\\frac{x-x_i}{x_{i+1}-x_i}\\tag{1.18b}$$\n参数$a_i$为节点温度，即$a_i=T(x_i)=T_i$，形状函数的导数为\n$$\\frac{d\\phi_i}{dx}=-\\frac{1}{x_{i+1}-x_i}\\tag{1.19a}$$\n$$\\frac{d\\phi_{i+1}}{dx}=\\frac{1}{x_{i+1}-x_i}\\tag{1.19b}$$\n<br><center>![图2 一个单元上的形状函数](./有限元理论推导（一）/2.png)</center>\n\n方程（1.17）~（1.19）可以使用矩阵形式表述为\n$$T(x)=\\phi \\boldsymbol{a}\\tag{1.20}$$\n式中\n$$\\phi=\\begin{matrix}\n[\\phi_i &\\phi_{i+1}]\n\\end{matrix}\\tag{1.21}$$\n由此得到\n$$\\frac{dT}{dx}=\\frac{d}{dx}\\phi\\boldsymbol{a}=\n\\left[\\begin{matrix}\n\\dfrac{d\\phi_i}{dx}&\\dfrac{d\\phi_{i+1}}{dx}\n\\end{matrix}\n\\right]\n\\Big[\n\\begin{matrix}\na_i\\\\a_{i+1}\n\\end{matrix}\n\\Big]\\tag{1.22}$$\n其中\n$$\\frac{d}{dx}\\phi=\\left[\n\\begin{matrix}\n-\\dfrac{1}{x_{i+1}-x_i}&\\dfrac{1}{x_{i+1}-x_i}\n\\end{matrix}\n\\right]\\tag{1.23}$$\n现在可将以上方程带入到方程（1.16）中，得到\n$$\\sum^2_{j=1}K\\left[\\int^{L/2}_0\\frac{d\\phi_1}{dx}\\frac{d\\phi_j}{dx}dx\\right]a_j-\\int^{L/2}_0\\phi_1(x)Qdx-K\\phi_1(x)\\frac{dT}{dx}\\Big|^{x=L/2}_{x=0}=0\\\\ \\tag{1.24a}$$\n和\n$$\\sum^2_{j=1}K\\left[\\int^{L/2}_0\\frac{d\\phi_2}{dx}\\frac{d\\phi_j}{dx}dx\\right]a_j-\\int^{L/2}_0\\phi_2(x)Qdx-K\\phi_2(x)\\frac{dT}{dx}\\Big|^{x=L/2}_{x=0}=0\\\\ \\tag{1.24b}$$\n上式使用方程（1.20）~（1.23）表述为\n$$K\\left[\\int^{L/2}_0\\left[\\frac{d}{dx}\\phi\\right]^T\\left[\\frac{d}{dx}\\phi\\right]dx\\right]\\boldsymbol{a}-Q\\int^{L/2}_0\\phi^Tdx-\\left[\n\\begin{matrix}\nq\\\\0\n\\end{matrix}\n\\right]=0\\tag{1.25}$$\n代入\n$$\\phi=\\left[\n  \\begin{matrix}\n  1-\\dfrac{2x}{L}&\\dfrac{2x}{L}\n  \\end{matrix}\n  \\right]$$\n和\n$$\\frac{d}{dx}\\phi=\\Big[\n  \\begin{matrix}\n  -\\dfrac{2}{L}&\\dfrac{2}{L}\n  \\end{matrix}\n  \\Big]$$\n并积分，得到\n$$\\frac{2K}{L}\\left[\n  \\begin{matrix}\n    1&-1\\\\\n    -1&1\\\\\n  \\end{matrix}\n  \\right]\n  \\left[\n    \\begin{matrix}\n      a_1\\\\\n      a_2\n    \\end{matrix}\n  \\right]-\\frac{QL}{4}\n  \\left[\n  \\begin{matrix}\n    1\\\\1\n  \\end{matrix}  \n  \\right]-\n  \\Big[\\begin{matrix}\n    q\\\\0\n  \\end{matrix}\n  \\Big]=\\Big[\\begin{matrix}\n    0\\\\0\n  \\end{matrix}\n  \\Big]\\tag{1.26}$$\n单元$2$使用相似的方法计算得到\n$$\\frac{2K}{L}\\Big[\n  \\begin{matrix}\n    1&-1\\\\\n    -1&1\\\\\n  \\end{matrix}\n  \\Big]\n  \\Big[\n    \\begin{matrix}\n      a_2\\\\\n      a_3\n    \\end{matrix}\n  \\Big]-\\frac{QL}{4}\n  \\Big[\n  \\begin{matrix}\n    1\\\\1\n  \\end{matrix}  \n  \\Big]-\n  \\Big[\\begin{matrix}\n    q\\\\0\n  \\end{matrix}\n  \\Big]=\\Big[\\begin{matrix}\n    0\\\\0\n  \\end{matrix}\n  \\Big]\\tag{1.27}$$\n  表达式（1.26）和（1.27）通过“组装”，即将方程（1.26）中的第二个方程和方程（1.27）中的第一个方程相加，因为它们都对应于相同的权重函数$\\phi_2(x)$，于是得到\n  $$\\frac{2K}{L}\\left[\n    \\begin{matrix}\n      1&-1&0\\\\\n      -1&2&-1\\\\\n      0&-1&1\n    \\end{matrix}\n    \\right]\n    \\left[\n    \\begin{matrix}\n      a_1\\\\\n      a_2\\\\\n      a_3\n    \\end{matrix}\n    \\right]=\n    \\left[\n    \\begin{matrix}\n      q\\\\\n      0\\\\\n      0\n    \\end{matrix}\n    \\right]+\\frac{QL}{4}\n    \\left[\n    \\begin{matrix}\n      1\\\\\n      2\\\\\n      1\n    \\end{matrix}\n    \\right]\\tag{1.28}\n  $$\n由于已知$a_3=T_L$，上述公式简化为关于未知数$a_1$和$a_2$，即\n$$a_1-a_2=\\frac{ql}{2K}+\\frac{QL^2}{8K}\\tag{1.29a}$$\n$$-a_1+2a_2=\\frac{QL^2}{4K}+T_L\\tag{1.29b}$$\n解为\n$$a_1=\\frac{qL}{K}+\\frac{QL^2}{2K}+T_L,\\\\\na_2=\\frac{qL}{2K}+\\frac{3QL^2}{8K}+T_L,\\\\\na_3=T_L\\tag{1.30}$$\n\n## 1.3 小结\n有限元方法的基本原理在于加权残差法。最常用的两种程序是***Rayleigh-Ritz方法***和***伽辽金方法***。Rayleigh-Ritz方法基于变分计算；然而，这种方法不能用于一些更复杂的方程。伽辽金方法简单易用，即使Rayleigh-Ritz方法无法应用，也能保证得到与主导微分方程兼容的近似解。\n在这两种方法中，依赖变量通过一个有限系列近似表示，其中假设解的“形状”已知，并且取决于有限数量需要确定的参数。将伽辽金近似代入主导微分方程，产生的残差函数与权重函数相乘，要求在积分意义上与权重函数正交，即\n$$\\int W(x)R(T,x)dx=0$$\n其中$R(T, x)$是残差函数（当将近似精确解$T^*$代入微分方程时得到的函数），$W(x)$是权重函数。从这些表达式中生成的一组线性代数方程允许我们确定未知参数，从而得到解的近似值。通过使用积分换元法降低二阶导数项，我们得到了“弱形式”公式。应用弱形式公式产生了一个通用的算法，可扩展到广泛的问题类别。","categories":["FEM"]},{"title":"02-有限元初步（二）（翻译）","url":"/2024/08/31/有限元初步（二）/","content":"# 摘译-使用有限元方法求解泊松方程（二）\n本内容翻译自《Plasma Simulations by Example》(Lubos Brieda，2019），用于在三维空间内求解泊松方程。本部分基于前一篇文章内容，对有限元代码进行解析。\n\n## 1 初始化\n构造函数定义：\n\n\tFESolver::FESolver(World &world, int max_it, double tol):\n\t\tworld{world}, vm{world.vm},\tmax_solver_it(max_it), tolerance(tol)\n    {\n\t    /*count number of unknowns*/\n\t    neq = 0;\n    \t/*OPEN nodes are \"h\" nodes*/\n\t    for (size_t i=0;i<vm.nodes.size();i++)\n\t\t    if (vm.nodes[i].type==NORMAL ||vm.nodes[i].type==OPEN) \n                neq++;\n\t\tcout<<\"There are \"<<neq<<\" unknowns\"<<endl;\n\t\t/*allocate neq*neq K matrix*/\n\t\tK = new double*[neq];\n\t\tfor (int i=0;i<neq;i++) \n\t\t\tK[i] = new double[neq];\n\t\tcout<<\"Allocated \"<<neq<<\"x\"<<neq<<\" stiffness matrix\"<<endl;\n\n\t\t/*allocate neq*neq J matrix*/\n\t\tJ = new double*[neq];\n\t\tfor (int i=0;i<neq;i++) \n\t\t\tJ[i] = new double[neq];\n\t\tcout<<\"Allocated \"<<neq<<\"x\"<<neq<<\" Jacobian matrix\"<<endl;\n\n\t\t/*allocate F0 and F1 vectors*/\n\t\tF0.reserve(neq);\n\t\tF1.reserve(neq);\n\t\tcout<<\"Allocated two \"<<neq<<\"x1 force vectors\"<<endl;\n\n\t\tn_nodes = vm.nodes.size();\n\t\tn_elements = vm.tets.size();\n\n\t\t/*allocate ID vector*/\n\t\tID.reserve(n_nodes);\n\t\tcout<<\"Allocated \"<<n_nodes<<\"x1 ID vector\"<<endl;\n\n\t\t/*allocate location matrix, n_elements*4 */\n\t\tLM = new int*[n_elements];\n\t\tfor (int e=0;e<n_elements;e++) \n\t\t\tLM[e] = new int[4];\n\t\tcout<<\"Allocated \"<<n_elements<<\"x4 location matrix\"<<endl;\n\n\t\t/*allocate NX matrix*/\n\t\tNX = new double**[n_elements];\n\t\tfor (int e=0;e<n_elements;e++) \n\t\t{\t\n\t\t\tNX[e] = new double*[4];\n\t\t\tfor (int a=0;a<4;a++) \n\t\t\tNX[e][a] = new double[3];\n\t\t}\n\t\tcout<<\"Allocated \"<<n_elements<<\"x4x3 NX matrix\"<<endl;\n\n\t\t/*solution array*/\n\t\td.reserve(neq); \t/*initialized to zero*/\n\n\t\t/*allocate memory for g and uh arrays*/\n\t\tg.reserve(n_nodes);\n\t\tuh.reserve(n_nodes);\n\t\tcout<<\"Allocated \"<<n_nodes<<\"x1 g and uh vector\"<<endl;\n\t\n\t\tdetJ.reserve(n_elements);\n\t\tcout<<\"Allocated \"<<n_elements<<\"x1 detJ vector\"<<endl;\n\n\t\t/*electric field*/\n\t\tef.reserve(n_elements);\n\n\t\t/*set up the ID array note valid values are 0 to neq-1 and -1 indicates \"g\" node*/\n\t\tint P=0;\n\t\tfor (int n=0;n<n_nodes;n++)\n\t\t\tif (vm.nodes[n].type==NORMAL ||\n\t\t\t\tvm.nodes[n].type==OPEN) {ID[n]=P;P++;}\n\t\t\telse ID[n]=-1;\t/*dirichlet node*/\n\n\t\t/*now set up the LM matrix*/\n\t\tfor (int e=0;e<n_elements;e++)\n\t\t\tfor (int a=0;a<4;a++)\t/*tetrahedra*/\n\t\t\t\tLM[e][a] = ID[vm.tets[e].con[a]];\n\t\tcout<<\"Built ID and LM matrix\"<<endl;\n\t\n\t\t/*set quadrature points*/\n\t\tl[0]=-sqrt(1.0/3.0); l[1]=sqrt(1.0/3.0);\n\t\tW[0]=1; W[1]=1;\n\t\tn_int = 2;\n\n\t\t/*initialize solver \"g\" array*/\n\t\tfor (int n=0;n<n_nodes;n++)\n\t\t{\n\t\t\tif (vm.nodes[n].type == INLET) g[n]=0;\t/*phi_inlet*/\n\t\t\telse if (vm.nodes[n].type == SPHERE) g[n]=-100; /*phi_sphere*/\n\t\t\telse g[n] = 0;\t/*default*/\n\t\t}\n\n\t\t/*compute NX matrix*/\n\t\tcomputeNX();\n\n\t\t/*sample assembly code*/\n\t\tstartAssembly();\n\t\tpreAssembly();\t/*this will form K and F0*/\n\t}\n\n    ","categories":["FEM"]},{"title":"01-有限元初步（一）（翻译）","url":"/2024/07/30/有限元初步（一）/","content":"# 摘译-使用有限元方法求解泊松方程（一）\n本内容翻译自《Plasma Simulations by Example》(Lubos Brieda，2019），用于在三维空间内求解泊松方程。\n\n## 1 强形式\n泊松方程可以写为\n$$\\nabla^2u\\equiv\\frac{\\partial^2u}{\\partial x^2}+\\frac{\\partial^2u}{\\partial y^2}+\\frac{\\partial^2u}{\\partial z^2}\\equiv u_{,ii}=f\\tag{1.1}$$\n\n在强形式中，我们通常将方程和边界条件写成积分形式，其中下标跟在逗号后面的表示导数，重复的下标意味着求和。这种记号方法被称为指标记号或爱因斯坦记号。我们感兴趣的是在某个空间域$\\Omega$上求解这个方程。为了获得唯一解，我们还需要指定边界条件。我们假设我们知道在边界的一个子集$\\Gamma_g$上的解。即满足**狄利克雷边界条件**。我们还假设在另一个子集$\\Gamma_h$上我们知道解的导数,即满足**纽曼边界条件**。因此，按照爱因斯坦标记法，上述强形式表述为：\n<br>给定$f$：$\\Omega\\rightarrow R$，$g:\\Gamma_g\\rightarrow R$，且$h:\\Gamma_h\\rightarrow R$，寻找$u:\\Omega\\rightarrow R$使得$-ku_{,ii}=f(\\Omega)$,$u=g(\\Gamma_g)$\n\n<br>针对泊松方程求解问题，$u=\\phi，k=1$且$f=\\rho/\\epsilon_0$。需要注意的是，$\\Gamma_g\\notin\\emptyset$，但是$\\Gamma_h$可以是一个空集。狄利克雷边界条件是获得唯一解所必须的边界条件，但是纽曼边界条件可选。两类边界条件不需要连续，我们可以拥有多个非连续的$\\Gamma_g$和$\\Gamma_h$区域。\n\n## 2 弱形式\n弱形式使用两种函数定义解：\n\n* 试解\n* 权重函数（变量）\n<br>解需要满足边界条件，即在$\\Gamma_g$上$u=g$。同时要求解的导数平方可积：\n<br>$$\\int_\\Omega(u_{,i})^2d\\Omega<\\infty\\tag{2.1}$$\n<br>满足上述条件的函数称作$H^1$函数，因此$u\\in H^1$。试解的集合由下式给出：$S=\\{u|u\\in H^1,u=g | \\Gamma_g\\}$\n<br>权重函数与解相似，不同的是他们只满足$g$边界条件的齐次形式：\n$V=\\{w|w\\in H^1,w=0|\\Gamma_g\\}$\n<br>于是弱形式由下述形式给出：\n<br>给定$f:\\Omega\\rightarrow R, g:\\Gamma_g\\rightarrow R, h:\\Gamma_h\\rightarrow R, 找到u\\in S,使得对所有的w\\in V,满足\\int_\\Omega w_{,i}(ku_{,i})d\\Omega=\\int_\\Omega wfd\\Omega+\\int_{\\Omega_h}whd\\Gamma$\n\n<br>与强形式不同，弱形式通过$u$的导数来定义解。这两个解是相同的，如果$u$是$(S)$的解，那么它也是$(W)$的解，如果$u$是$(W)$的解，那么它也是$(S)$的解。我们现在定义几个新的算子以简化记号:\n$$a(w,u)=\\int_\\Omega w_{,i}ku_{,i}d\\Omega\\tag{2.2}$$\n$$(w,f)=\\int_\\Omega wfd\\Omega\\tag{2.3}$$\n$$(w,f)=\\int_{\\Omega_h}wfd\\Omega\\tag{2.4}$$\n\n## 3 伽辽金形式\n接下来在离散化域$\\Omega_h$上近似弱形式。第一步是构建$S$和$V$的有限维近似。代替连续函数，我们现在有了子集$S^h$和$V^h$，其中$S^h\\in S$，$V^h\\in V$。下标$h$表示与网格相关联的属性。因此，如果$u^h\\in S^h$，则$u^h\\in S$。边界条件也成立，即$u^h = g$在$\\Gamma_g$上成立。同样，$V^h$的所有成员在$\\Gamma_g$上消失。然后，我们可以让$S^h$的每个成员由下式表述：\n$$u^h=v^h+g^h\\tag{3.1}$$\n式中$v^h\\in V^h$，$g^h$为在$\\Gamma_g$上满足$u=g$的集合，于是有了伽辽金形式的描述。\n>给定$f$，$g$和$h$，寻找$u^h=v^h+g^h\\in S^h$，使得对于所有的$w^h\\in V^h$，$a(w^h,v^h)=(w^h,f)+(w^h,h)_\\Gamma-a(w^h,g^h)$\n\n## 4 形状函数\n假设我们的域由$\\eta = \\{0, 1, …, n_{np−1}\\}$个节点组成。在这些节点中，狄利克雷$g$边界条件被指定的节点由$\\eta_g$给出。那么，$\\eta - \\eta_g$就是解$u^h$需要被确定的节点子集。接下来，我们让$V^h$的成员采取以下形式：\n$$w^h(\\vec{x})=\\sum_{A\\in\\eta-\\eta_g}N_A(\\vec{x})c_A\\tag{4.1}$$\n$$v^h(\\vec{x})=\\sum_{A\\in\\eta-\\eta_g}N_A(\\vec{x})d_A\\tag{4.2}$$\n式中$d_A$为要求解的未知变量。$g$的节点值使用形函数插值得到：\n$$g^h(\\vec{x})=\\sum_{A\\in\\eta_g}N_A(\\vec{x})g_A,g_A=g(\\vec{x_A})\\tag{4.3}$$\n将这些插值函数代入到伽辽金表达式中，得到\n$$\\sum_{B\\in\\eta-\\eta_g}a(N_A,N_B)d_B=(N_A,f)+(N_A,h)_\\Gamma-\\sum_{B\\in\\eta_g}a(N_A,N_B)g_B,$$\n$$A\\in\\eta-\\eta_g\\tag{4.4}$$\n\n## 5 矩阵形式\n定义$K_{AB}=a(N_A,N_B)$，$F_A=(N_A,f)+(N_A,h)_\\Gamma-\\sum_{B\\in\\eta_g}a(N_A,N_B)g_B,A\\in\\eta-\\eta_g$，则式（4.4）变为\n$$\\sum_{B\\in\\eta-\\eta_g}K_{AB}d_B=F_A\\tag{5.1}$$\n进一步使用矩阵形式表述为\n$$\\boldsymbol{K}=[K_{AB}]=\n\\left[\n  \\begin{matrix}\n  K_{0,0}&K_{0,1}&...&K_{0,n-1}\\\\\n  K_{1,0}&K_{1,1}&...&K_{1,n-1}\\\\\n  ...&...&...&...\\\\\n  K_{n-1,0}&K_{n-1,1}&...&K_{n-1,n-1}\n  \\end{matrix}\n  \\right]\\tag{5.2}$$\n$$\\vec{F}=\\{F_A\\}=\n\\left\\{\n  \\begin{matrix}\n  F_0\\\\\n  F_1\\\\\n  ...\\\\\n  F_{n-1}\n  \\end{matrix}\n  \\right\\}\\tag{5.3}$$\n$$\\vec{d}=\\{d_B\\}=\n\\left\\{\n  \\begin{matrix}\n  d_0\\\\\n  d_1\\\\\n  ...\\\\\n  d_{n-1}\n  \\end{matrix}\n  \\right\\}\n$$\n上述矩阵形式表述为\n$$\\boldsymbol{K}\\vec{d}=\\vec{F}\\tag{5.4}$$\n式中$K$为***刚度矩阵***，$\\vec{F}$为受力项，$\\vec{d}$为位移矢量。矩阵形式表述为\n<br>给定系数矩阵$\\boldsymbol{K}$和向量$\\vec{F}$，寻找$\\vec{d}$满足$\\boldsymbol{K}\\vec{d}=\\vec{F}$,其中$\\boldsymbol{K}=[K_{PQ}]$，$\\vec{d}=\\{d_q\\}$，$\\vec{F}=\\{F_p\\}$，$0\\le P,Q<n_{eq}，K_{PQ}=a(N_A,N_B)，P=ID(A),Q=ID(B)，F_P=(N_A,f)+(N_A,h)_\\Gamma-\\sum_{B\\in\\eta_{eq}}a(N_A,N_B)G_B$\n\n需要注意的是，我们只对未知节点$n_{eq}=n_{np}-n_g$应用上述等式，我们需要找到节点标号与未知方程标号的对应关系，我们根据Hughes标记法将其称为ID：\n$$ID(A)=\n\\begin{cases}\nP&A\\in\\eta-\\eta_g\\\\\n0&A\\in\\eta_g\n\\end{cases}\n\\tag{5.5}$$\n\n## 6 单元视角\n上述表述使用了全局视角来表述矩阵问题。在这个视角中，空间位置和插值函数NA在物理$\\vec{x}$坐标中给出。这种表述方式并不实用，因此我们改为使用单元视角。我们让每个元素覆盖一些逻辑域，其坐标为$\\vec{\\xi} = \\{\\xi,\\eta,\\zeta\\}$。现在，插值函数$N_{0,1},…$以这些逻辑或自然坐标表示。整个域的积分现在可以重写为对所有单元的求和。\n$$\\boldsymbol{K}=\\sum^{n_{el}-1}_{e=0}\\boldsymbol{K}^e,\\boldsymbol{K}^e=[K^e_{AB}]\\tag{6.1}$$\n$$\\vec{F}=\\sum^{n_{el}-1}_{e=0}\\vec{F}_e,\\vec{F}_e=\\{F^e_A\\}\\tag{6.2}$$\n其中\n$$K^e_{AB}=a(N_A,N_B)^b=\\int_{\\Omega^e}\\nabla N_A k\\nabla N_B d\\Omega\\tag{6.3}$$\n$$F^e_p=(N_A,f)^e+(N_A,h)^e_\\Gamma-\\sum_{B\\in\\eta_g}a(N_A,N_B)^eg_B\\\\\n=\\int_{\\Omega^e}N_Afd\\Omega+\\int_{\\Gamma^e_h}N_Ahd\\Gamma-\\sum_{B\\in\\eta_g}a(N_A,N_B)^eg_B\\tag{6.4}$$\n在有限元方法中，矩阵方程的单元表述涉及到刚度矩阵的各个元素。这些元素由$a(N_A, N_B)^e$表示，其中$N_A$和$N_B$是插值函数，$e$表示元素编号。刚度矩阵的这些元素代表了该元素内部及其与相邻元素连接处的力与位移的关系。$\\Gamma^e_h$是元素$e$在边界$\\Gamma_h$上的部分，这个边界仅对于位于域边界的元素非空。此外，$P$和$Q$分别是刚度矩阵A和载荷向量B的单元编号映射，即$P = ID(A)$和$Q = ID(B)$。这里的ID表示节点编号与未知方程编号之间的映射表。\n<br>通过计算每个元素在刚度矩阵中的贡献，并将这些贡献加在一起，我们可以得到整个域的刚度矩阵。这个过程涉及到对每个元素内部及其与相邻元素的交界面进行积分。这种方法使得我们可以有效地处理复杂的几何形状和边界条件，同时确保解在指定的边界上满足给定的条件。\n<br>对单个单元重写上述公式为\n$$k^e=[k^e_{ab}],f^e=\\{f^e_a\\},0\\le a,b<n_{en}\\tag{6.5} $$\n$$k^e_{ab}=a(N_a,N_b)^e=\\int_{\\Omega^e}N_afd\\Omega+\\int_{\\Omega^e}N_ahd\\Gamma-\\sum^{n_{en}}_{b=1}k^e_{ab}q^e_b\\tag{6.6}$$\n\n## 7 正交\n假设存在一个从物理坐标到自然（或逻辑）坐标$\\vec{\\eta}=(\\xi,\\eta,\\zeta)$的映射，使得：\n$$x(\\vec{\\eta})=\\sum^4_{a=1}N_a(\\vec{\\xi})\\vec{x}^e_a\\tag{7.1}$$\n式中$\\vec{x}^e_a$是组成单元$e$的四个节点的位置，且$\\xi，\\eta，\\zeta\\in[-1:1]$。这个公式描述了物理坐标可以作为逻辑坐标的函数，可用于对节点位置的插值计算。接下来将积分转换为$\\vec{\\xi}$空间下的积分：\n$$\\int_{\\Omega^e}f(\\vec{x})dxdydz=\\int^1_{-1}\\int^1_{-1}\\int^1_{-1}f(x(\\vec{\\xi}),y(\\vec{\\xi}),z(\\vec{\\xi}))j(\\vec{\\xi})d\\xi d\\eta d\\zeta\\tag{7.2}$$\n式中$j(\\vec{\\xi})=\\partial x_i/\\partial\\xi_i$称为***雅可比矩阵***。\n\n## 8 形状函数及坐标转换\n下面求解\n$$k^e_{ab}=a(N_a,N_b)^e=\\int_{\\Omega^e}N_{a,i}kN_{b,i}d\\Omega\\tag{8.1}$$\n我们可以在逻辑坐标空间$\\vec{\\xi}$中计算。使用链式法则，\n$$\\frac{\\partial N_a}{\\partial x}=\\frac{\\partial N_a}{\\partial\\xi}\\frac{\\partial\\xi}{\\partial x}+\\frac{\\partial N_a}{\\partial\\eta}\\frac{\\partial\\eta}{\\partial x}\\tag{8.2}$$\n或使用爱因斯坦标记法表示为\n$$N_{a,x}=N_{a,\\xi}\\xi_{,x}+N_{a,\\eta}\\eta_{,x}\\tag{8.3}$$\n相似地，\n$$N_{a,y}=N_{a,\\xi}\\xi_{,y}+N_{a,\\eta}\\eta_{,y}\\tag{8.4}$$\n从上式可以得到，我们需要获得$N_a$在逻辑空间中的形函数，$N_a=N_a(\\xi)$。我们也需要映射$\\vec{\\xi}_{,\\vec{x}}$的表达式，于是有\n$$\\int\\Omega f(\\vec{x})d\\Omega=\\int_\\xi f(\\vec{\\xi})|\\vec{x}_{,\\vec{\\xi}}|d\\vec{\\xi}\\tag{8.5}$$\n将式（8.4）和式（8.5）重写为矩阵形式\n$$\\left\\{\n  \\begin{matrix}\n  N_{a,x}\\\\\n  N_{a,y}\n  \\end{matrix}\n  \\right\\}=\n  \\left\\{\n  \\begin{matrix}\n  N_{a,\\xi}\\\\\n  N_{a,\\eta}\n  \\end{matrix}\n  \\right\\}\n  \\left[\n  \\begin{matrix}\n  \\xi_x&\\xi_y\\\\\n  \\eta_x&\\eta_y\n  \\end{matrix}\n  \\right]\\tag{8.6}\n  $$\n  根据$x(\\xi,\\eta)=\\sum^2_{a=0}N_a(\\xi,\\eta)x^e_a，y(\\xi,\\eta)=\\sum^2_{a=0}N_a(\\xi,\\eta)y^e_a$，计算得到\n  $$\\vec{x}_{,\\vec{\\xi}}=\n    \\left[\n  \\begin{matrix}\n  x_{,\\xi}&x_{,\\eta}\\\\\n  y_{,\\xi}&y_{,\\eta}\n  \\end{matrix}\n  \\right]\\tag{8.6}\n  $$\n  而$\\vec{\\xi_{,\\vec{x}}}=(\\vec{x}_{,\\xi})^{-1}$。\n<br>根据以上内容，计算任意单元内$N_{a,x}$和$N_{b,x}$的步骤如下：\n<br>1.计算正交点$l_{\\xi}$处的$N_{a,\\xi}$；\n<br>2.使用$N_{a,\\xi}$计算$\\vec{x}_{,\\vec{\\xi}}$;\n<br>3.计算$\\vec{\\xi_{,\\vec{x}}}=(\\vec{x}_{,\\xi})^{-1}$；\n<br>4.使用$N_{a,\\xi}\\xi_{,x}$计算$N_{a,x}$\n<br>5.对b重复1-4。","categories":["FEM"]}]